{"version":3,"sources":["webpack:///./src/utils/graph/index.js?88e4","actions/index.js","reducers/flags.js","utils/worker.js","actions/graph.js","reducers/graph.js","reducers/layers.js","config.js","utils/index.js","store/load-data.js","store/helpers.js","store/normalize-data.js","utils/flags.js","store/initial-state.js","actions/pipelines.js","actions/nodes.js","reducers/loading.js","reducers/nodes.js","actions/node-type.js","reducers/node-type.js","reducers/pipeline.js","actions/tags.js","reducers/tags.js","actions/modular-pipelines.js","reducers/modular-pipelines.js","reducers/visible.js","reducers/index.js","selectors/pipeline.js","utils/search-utils.js","selectors/modular-pipelines.js","selectors/tags.js","selectors/disabled.js","utils/short-type.js","selectors/edges.js","selectors/ranks.js","selectors/nodes.js","selectors/metadata.js","selectors/layout.js","store/index.js","store/store.js","apollo/utils.js","apollo/config.js","components/provider/provider.js","apollo/queries.js","components/icons/experiments.js","utils/hooks.js","components/ui/icon-button/icon-button.js","components/ui/icon-button/index.js","components/icons/logo.js","components/icons/settings.js","components/icons/theme.js","components/icons/tree.js","components/global-toolbar/index.js","components/global-toolbar/global-toolbar.js","selectors/loading.js","components/ui/modal/index.js","components/ui/modal/modal.js","components/ui/button/button.js","components/ui/button/index.js","components/export-modal/export-graph.js","components/export-modal/index.js","components/export-modal/export-modal.js","selectors/layers.js","selectors/linked-nodes.js","utils/modifiers.js","components/icons/node-icon.js","components/flowchart/draw.js","utils/view.js","components/ui/tooltip/tooltip.js","components/flowchart/with-hooks-hoc.js","components/ui/tooltip/index.js","components/flowchart/flowchart.js","utils/hooks/use-generate-pathname.js","components/flowchart/index.js","components/pipeline-warning/index.js","components/pipeline-warning/pipeline-warning.js","components/icons/loading.js","components/metadata/metadata-value.js","components/icons/copy.js","components/ui/command-copier/command-copier.js","utils/plot-templates/dark.js","utils/plot-templates/light.js","components/plotly-chart/plotly-chart.js","components/plotly-chart/index.js","components/icons/close.js","components/icons/expand.js","components/metadata/metadata-list.js","components/metadata/metadata-parameters-theme.js","components/metadata/metadata-object.js","components/metadata/metadata-row.js","components/metadata/metadata-code.js","components/ui/toggle/index.js","components/ui/toggle/toggle.js","components/metadata/index.js","components/metadata/metadata.js","components/icons/collapse.js","components/icons/back.js","components/metadata-modal/index.js","components/metadata-modal/metadata-modal.js","apollo/mutations.js","components/icons/pencil.js","components/icons/bookmark.js","components/icons/export.js","components/icons/bookmark-stroke.js","components/icons/menu.js","components/primary-toolbar/index.js","components/primary-toolbar/primary-toolbar.js","components/icons/show-changes.js","components/experiment-tracking/experiment-primary-toolbar/sliding-animation.js","components/experiment-tracking/experiment-primary-toolbar/index.js","components/experiment-tracking/experiment-primary-toolbar/experiment-primary-toolbar.js","components/icons/label.js","components/icons/layers.js","components/flowchart-primary-toolbar/index.js","components/flowchart-primary-toolbar/flowchart-primary-toolbar.js","components/minimap/draw.js","components/minimap/minimap.js","components/minimap/index.js","components/icons/map.js","components/icons/plus.js","components/icons/minus.js","components/icons/reset.js","components/minimap-toolbar/minimap-toolbar.js","components/minimap-toolbar/index.js","components/icons/search.js","components/ui/search-bar/search-input/search-input.js","components/ui/search-bar/search-input/index.js","components/ui/search-bar/search-bar-renderer.js","components/ui/search-bar/search-bar.js","components/ui/search-bar/index.js","components/search-list/search-list.js","components/search-list/index.js","components/icons/visible.js","components/icons/invisible.js","components/icons/focus-mode.js","components/node-list/node-list-row.js","components/lazy-list/lazy-list.js","components/lazy-list/index.js","components/node-list/node-list-row-list.js","components/node-list/node-list-group.js","components/node-list/node-list-groups.js","selectors/node-types.js","components/node-list/node-list-tree-item.js","components/node-list/node-list-tree.js","components/split-panel/index.js","components/split-panel/split-panel.js","components/node-list/node-list.js","components/icons/indicator.js","components/icons/indicator-off.js","components/icons/indicator-partial.js","components/node-list/node-list-items.js","components/node-list/index.js","components/ui/dropdown/event-controller.js","utils/key-events.js","components/icons/dropdown-arrow.js","components/ui/dropdown/dropdown-renderer.js","components/ui/dropdown/dropdown.js","components/ui/dropdown/index.js","components/ui/menu-option/menu-option.js","components/ui/menu-option/index.js","components/pipeline-list/index.js","components/pipeline-list/pipeline-list.js","components/ui/switch/index.js","components/ui/switch/switch.js","components/experiment-tracking/accordion/index.js","components/experiment-tracking/accordion/accordion.js","utils/date-utils.js","components/experiment-tracking/utils/hover-state-context.js","components/experiment-tracking/runs-list-card/index.js","components/experiment-tracking/runs-list-card/runs-list-card.js","components/experiment-tracking/runs-list/index.js","components/experiment-tracking/runs-list/runs-list.js","components/sidebar/index.js","components/sidebar/sidebar.js","utils/hooks/use-redirect-location.js","components/flowchart-wrapper/index.js","components/flowchart-wrapper/flowchart-wrapper.js","apollo/subscriptions.js","utils/button-timeout-context.js","components/experiment-tracking/run-dataset/run-dataset-loader.js","components/experiment-tracking/run-metadata/run-metadata-loader.js","components/experiment-tracking/tooltip/tooltip.js","components/experiment-tracking/tooltip/get-tooltip-position.js","components/experiment-tracking/time-series/time-series.js","components/experiment-tracking/parallel-coordinates/parallel-coordinates.js","components/experiment-tracking/metrics-plots/metrics-plots.js","components/experiment-tracking/metrics-plots/index.js","components/icons/pin-arrow.js","utils/experiment-tracking-utils.js","components/experiment-tracking/run-dataset/run-dataset.js","components/experiment-tracking/run-dataset/index.js","components/ui/input/index.js","components/experiment-tracking/run-details-modal/index.js","components/experiment-tracking/run-details-modal/run-details-modal.js","components/experiment-tracking/run-export-modal/index.js","components/experiment-tracking/run-export-modal/run-export-modal.js","components/icons/kebab.js","components/icons/selected-pin.js","components/icons/un-selected-pin.js","components/experiment-tracking/run-metadata/run-metadata.js","components/experiment-tracking/run-metadata/index.js","components/icons/back-wide.js","components/experiment-tracking/run-plots-modal/index.js","components/experiment-tracking/run-plots-modal/run-plots-modal.js","components/experiment-tracking/details/details.js","components/experiment-tracking/details/index.js","components/experiment-wrapper/experiment-wrapper.js","components/experiment-wrapper/index.js","components/settings-modal/settings-modal-row.js","components/settings-modal/index.js","components/settings-modal/settings-modal.js","components/update-reminder/index.js","components/update-reminder/update-reminder.js","components/wrapper/index.js","components/wrapper/wrapper.js","components/app/app.js","components/app/index.js","utils/random-utils.js","utils/random-data.js","utils/data-source.js","components/container/index.js","components/container/container.js","index.js","utils/graph/common.js","utils/graph/solver.js","utils/graph/constraints.js","utils/graph/layout.js","utils/graph/routing.js","utils/graph/graph.js","utils/graph/index.js"],"names":["addMethods","methods","module","exports","w","Worker","URL","createObjectURL","Blob","name","RESET_DATA","resetData","data","type","TOGGLE_LAYERS","TOGGLE_EXPORT_MODAL","toggleExportModal","visible","TOGGLE_SETTINGS_MODAL","toggleSettingsModal","TOGGLE_METADATA_MODAL","togglePlotModal","TOGGLE_GRAPH","TOGGLE_TEXT_LABELS","TOGGLE_PRETTY_NAME","TOGGLE_SIDEBAR","TOGGLE_THEME","UPDATE_CHART_SIZE","UPDATE_ZOOM","updateZoom","zoom","TOGGLE_MINIMAP","CHANGE_FLAG","changeFlag","value","TOGGLE_IGNORE_LARGE_WARNING","TOGGLE_CODE","TOGGLE_PARAMETERS_HOVERED","TOGGLE_MODULAR_PIPELINE_FOCUS_MODE","toggleFocusMode","modularPipeline","TOGGLE_HOVERED_FOCUS_MODE","flagsReducer","worker","flagsState","action","Object","assign","isTest","jest","graphWorker","require","graph","mockWorker","terminate","keys","forEach","payload","Promise","resolve","TOGGLE_GRAPH_LOADING","toggleLoading","loading","UPDATE_GRAPH_LAYOUT","updateGraph","layoutWorker","getJob","instance","running","then","response","preventWorkerQueues","state","graphNew","calculateGraph","graphState","dispatch","nodeReducer","updateState","newState","layerReducer","layerState","pathRoot","localStorageName","metaSidebarWidth","open","closed","sidebarWidth","breakpoint","codeSidebarWidth","experimentTrackingLazyLoadingColours","flags","sizewarning","description","default","icon","expandAllPipelines","settings","sidebarGroups","elementType","tag","sidebarElementTypes","task","parameters","shortTypeMapping","params","activePipeline","routes","flowchart","main","focusedNode","selectedNode","arrayToObject","array","callback","newObject","key","getUrl","id","join","Error","unique","d","i","arr","indexOf","replaceMatches","str","toReplace","length","regex","RegExp","replace","matched","loadJsonData","path","fallback","json","catch","fullPath","substr","noWindow","window","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","saveState","hasOwnProperty","nodeTypeDisabled","stringify","setItem","pruneFalseyKeys","obj","newObj","normalizeData","pipeline","ids","tree","expanded","active","disabled","node","fullName","tags","layer","pipelines","clicked","hovered","fetched","code","filepath","inputs","outputs","plot","image","trackingData","datasetType","originalType","transcodedTypes","runCommand","modularPipelines","nodeType","edge","sources","targets","enabled","hoveredParameters","hoveredFocusMode","dataSource","source","Array","isArray","edges","nodes","validateInput","push","full_name","dataset_type","original_type","transcoded_types","modular_pipelines","addNode","target","createEdgeID","includes","addEdge","addPipeline","selected_pipeline","nodeId","children","child","addTag","layers","addLayer","Flags","isDefined","names","flagsConfig","defaults","reduce","result","flag","getFlagsFromUrl","url","urlParams","document","location","href","searchParams","e","warn","mergeLocalStorage","localStorageState","deepmerge","preparePipelineState","applyFixes","prepareNonPipelineState","props","chartSize","textLabels","theme","prettyName","ignoreLargeWarning","labelBtn","layerBtn","exportBtn","exportModal","metadataModal","settingsModal","sidebar","innerWidth","miniMapBtn","miniMap","modularPipelineFocusMode","display","globalToolbar","newVisibleProps","minimap","getInitialState","nonPipelineState","pipelineState","UPDATE_ACTIVE_PIPELINE","updateActivePipeline","TOGGLE_PIPELINE_LOADING","getPipelineUrl","loadPipelineData","pipelineID","getState","TOGGLE_NODE_CLICKED","toggleNodeClicked","nodeClicked","TOGGLE_NODES_DISABLED","TOGGLE_NODE_HOVERED","toggleNodeHovered","nodeHovered","TOGGLE_NODE_DATA_LOADING","toggleNodeDataLoading","ADD_NODE_METADATA","loadNodeData","nodeID","nodeData","loadingReducer","loadingState","nodeState","nodeIDs","isDisabled","tracking_data","run_command","TOGGLE_TYPE_DISABLED","allNodeTypesUnset","isNodeTypeUnset","nodeTypeValue","isNodeTypeDisabled","nodeTypeReducer","nodeTypeState","nextDisabledState","typeIDs","nextTypesDisabled","values","every","pipelineReducer","TOGGLE_TAG_ACTIVE","TOGGLE_TAG_FILTER","tagReducer","tagState","batchChanges","tagIDs","tagID","TOGGLE_MODULAR_PIPELINE_ACTIVE","toggleModularPipelineActive","modularPipelineIDs","TOGGLE_MODULAR_PIPELINE_DISABLED","TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED","TOGGLE_MODULAR_PIPELINES_EXPANDED","toggleModularPipelinesExpanded","expandedIDs","modularPipelineReducer","modularPipelineState","modularPipelineID","newVisibleState","isExpanding","expandedModularPipelines","filter","expandedID","expandedModularPipeline","collapsedModularPipelines","setChildrenInvisible","collapsedModularPipeline","startsWith","visibleReducer","visibleState","createReducer","initialState","combinedReducer","combineReducers","rootReducer","resetDataReducer","getNodeIDs","getNodeDisabledPipeline","createSelector","nodePipelines","getPipelineNodeIDs","nodeDisabledPipeline","getPipelineTagIDs","nodeTags","visibleTags","getHighlightedText","nodeModularPipelines","visibleModularPipelines","text","valueRegex","escapeRegExp","getValueRegex","matches","match","textMatchesSearch","searchValue","test","getFocusedModularPipeline","getModularPipelinesTree","searchString","isTreeLeaf","treeNode","searchTree","currentNodeID","foundChildren","childNode","found","highlightedLabel","getModularPipelinesSearchResult","modularPipelinesTree","searchResult","getTagEnabled","getTagData","tagName","tagActive","tagEnabled","sort","map","Boolean","getTagCount","total","getTagNodeCounts","counts","tagIds","tagId","getVisibleSidebarNodes","getVisibleModularPipelineInputsOutputs","visibleSidebarNodes","modularPipelineData","Set","add","getNodeDisabledTag","tagCount","some","getNodeDisabled","nodeDisabledNode","nodeDisabledTag","typeDisabled","focusedModularPipeline","visibleModularPipelineInputsOutputs","disabledModularPipeline","isDisabledViaModularPipeline","isDisabledViaSidebar","has","isDisabledViaFocusedModularPipeline","inputOutputNodeIDs","getVisibleNodeIDs","nodeDisabled","getVisibleLayerIDs","nodeLayer","layerIDs","layersVisible","visibleLayerIDs","layerID","getEdgeDisabled","edgeIDs","edgeSources","edgeTargets","edgeID","getShortType","longTypeName","getEdgeIDs","getEdgeSources","getEdgeTargets","getNodeModularPipelines","getTransitiveEdges","transitiveEdges","walkGraphEdges","isNotInputEdge","concat","addNewEdge","getVisibleEdges","edgeDisabled","getInputOutputDataEdges","visibleEdges","edgesList","getLayerNodes","layerNodes","getNodeRank","nodeDeps","sourceID","targetID","toposortedNodes","batchingToposort","nodeRanks","rank","getNodeName","getNodeFullName","getNodeDisabledNode","getModularPipelineDisabled","getNodeType","getNodeDatasetType","getNodeTypeDisabled","getGraphNodes","getNodeActive","hoveredNode","modularPipelineActive","activeModularPipelines","nodesActiveViaModularPipeline","flatMap","activeViaTag","activeModularPipeline","activeViaModularPipeline","getNodeSelected","clickedNode","getNodeLabel","nodeName","nodeFullName","getNodeData","nodeLabel","nodeDatasetType","modularPipelineDisabled","a","b","disabledNode","disabledTag","disabledType","getNodeDataObject","getGroupedNodes","item","getNodeTextWidth","nodeTextWidth","svg","select","body","append","attr","selectAll","enter","each","width","this","getBBox","remove","getNodeSize","iconSize","padding","showLabels","x","y","getPadding","textWidth","showText","height","textOffset","iconOffset","getVisibleNodes","nodeSize","nodeRank","getNodesWithInputParams","nodesList","getInputOutputNodesForFocusedModularPipeline","focusedModularPipelineID","graphNodes","getClickedNode","sortAlpha","localeCompare","getVisibleMetaSidebar","getClickedNodeMetaData","tagNames","nodeFilepaths","nodeInputs","nodeOutputs","nodeCodes","nodeParameters","nodePlot","nodeImage","nodeTrackingData","nodeDatasetTypes","nodeOriginalTypes","nodeTranscodedTypes","nodeRunCommand","entries","Math","round","getTriggerLargeGraphWarning","graphHasNodes","sizeWarningFlag","getGraphInput","triggerLargeGraphWarning","getSidebarWidth","getChartSize","visibleSidebar","visibleMetaSidebar","visibleCodeSidebar","left","top","sidebarWidthActual","metaSidebarWidthActual","codeSidebarWidthActual","outerWidth","outerHeight","minWidthScale","getChartZoom","configureStore","dataType","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","watchGraph","watch","subscribe","graphInput","updateGraphOnChange","otherVisibleProps","saveStateToLocalStorage","useApolloQuery","query","options","useState","undefined","setData","useQuery","subscribeToMore","queryData","useEffect","host","pathname","protocol","sanitizedPathname","wsHost","wsProtocol","wsLink","WebSocketLink","uri","reconnect","httpLink","createHttpLink","fetch","splitLink","split","definition","getMainDefinition","kind","operation","client","ApolloClient","connectToDevTools","link","cache","InMemoryCache","defaultOptions","errorPolicy","mutate","GraphQLProvider","ApolloProvider","GET_RUNS","gql","GET_RUN_DATA","GET_METRIC_PLOT_DATA","GET_VERSIONS","ExperimentsIcon","className","viewBox","usePrevious","ref","useRef","current","useOutsideClick","handleClick","event","contains","addEventListener","removeEventListener","labelPositionTypes","IconButton","inTimeout","ariaLabel","ariaLive","container","dataHeapEvent","labelText","labelTextPosition","onClick","Icon","isTooltipVisible","setIsTooltipVisible","labelPosition","toLowerCase","toLocaleLowerCase","clearLocalStorage","removeItem","iconBtnRef","classnames","onMouseEnter","setTimeout","onMouseLeave","clearTimeout","Wrapper","Container","Fragment","defaultProps","LogoIcon","fill","fillRule","stroke","strokeWidth","SettingsIcon","ThemeIcon","TreeIcon","GlobalToolbar","connect","onToggleSettingsModal","onToggleTheme","isOutdated","exact","to","isLoading","graphLoading","pipelineLoading","nodeLoading","Modal","title","closeModal","message","handleKeyDown","keyCode","role","Button","size","mode","exportGraph","format","graphSize","mockFn","downloadFormats","png","downloadPng","downloadSvg","download","querySelector","clone","parentNode","appendChild","cloneNode","classList","hasGraph","isFinite","marginx","marginy","setAttribute","removeAttribute","min","style","createElement","innerHTML","prepend","css","removeChild","ExportModal","onToggle","getLayers","layerName","bounds","nearestLayer","bound","Infinity","currentBound","prevBound","nextBound","start","end","rectWidth","max","getVisibleEdgesByNode","sourceEdges","targetEdges","findLinkedNodes","edgesByNode","visited","getLinkedNodes","linkedNodes","modifiers","others","classes","modifier","paths","tracking","plotly","NodeIcon","lineShape","line","curve","curveBasis","matchFloats","toSinglePoint","parseFloat","toFixed","drawLayers","el","layerGroup","enterLayers","on","handleLayerMouseOver","handleLayerMouseOut","exit","merge","drawLayerNames","layerNameGroup","transition","duration","DURATION","layerNames","enterLayerNames","updateNodeRects","nodeRects","updateParameterRect","drawNodes","changed","nodeActive","nodeSelected","nodesWithInputParams","inputOutputDataNodes","focusMode","isInputOutputNode","nodeGroup","updateNodes","enterNodes","exitNodes","allNodes","classed","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","handleNodeKeyDown","handleParamsIndicatorMouseOver","call","nodeIcons","order","drawEdges","inputOutputDataEdges","isInputOutputEdge","edgeGroup","updateEdges","enterEdges","exitEdges","allEdges","sourceNode","attrTween","points","previous","interpolatePath","viewing","wrapper","onViewChanged","onViewEnd","allowUserInput","d3Zoom","transform","isInvalidTransform","interpolate","origin","zoomIdentity","isOrigin","k","isNaN","getViewTransform","view","zoomTransform","negateTransform","translate","scale","setViewTransformExact","final","__zoom","viewTransformToFit","offset","focus","viewWidth","viewHeight","objectWidth","objectHeight","minScaleX","minScaleFocus","focusOffset","scaleY","scaleX","scaleXClamp","isCroppedY","objectCenterY","focusCenterOffsetX","focusCenterOffsetY","zeroWidthSpace","String","fromCharCode","insertZeroWidthSpace","Tooltip","targetRect","isRight","isTop","xOffset","yOffset","Component","FlowChart","handleWindowResize","updateChartSize","handleBeforePrint","handleAfterPrint","getHoveredParameterLabel","parameterNames","onClickToExpandModularPipeline","onLoadNodeData","toSelectedNode","stopPropagation","handleChartClick","toFlowchartPage","onToggleNodeHovered","showTooltip","setState","activeLayer","label","hideTooltip","tooltip","onViewChange","bind","onViewChangeEnd","containerRef","React","createRef","svgRef","wrapperRef","edgesRef","nodesRef","layersRef","layerNamesRef","MARGIN","MIN_SCALE","MAX_SCALE","selectD3Elements","updateViewExtents","addGlobalEventListeners","update","removeGlobalEventListeners","prevProps","chartZoom","visibleCode","resetView","onChartZoomChanged","objectA","objectB","prop","onUpdateChartSize","chartSizeTestFallback","getBoundingClientRect","ResizeObserver","resizeObserver","observe","unobserve","updateY","extents","scaleExtent","translateExtent","minX","minY","maxX","maxY","minK","maxK","getViewExtents","onUpdateZoom","applied","relative","minScale","maxScale","chartWidth","chartHeight","graphWidth","graphHeight","leftSidebarOffset","rightSidebarOffset","margin","setViewExtents","reset","hasTranslation","translateTo","scaleTo","setViewTransform","find","isFirstTransform","visibleGraph","displayGlobalToolbar","refX","refY","markerUnits","markerWidth","markerHeight","orient","right","bottom","emptyEdges","emptyNodes","emptyGraphSize","ownProps","modularPipelineId","getCurrentActivePipeline","useGeneratePathname","history","useHistory","useCallback","generatePath","pipelineId","toFocusedModularPipeline","withHooksHOC","PipelineWarning","sidebarVisible","onDisable","onHide","errorMessage","invalidUrl","componentLoaded","setComponentLoaded","isEmptyPipeline","timer","LoadingIcon","MetaDataValue","empty","CopyIcon","CommandCopier","command","showCopied","setShowCopied","navigator","clipboard","writeText","darkTemplate","autosize","annotationdefaults","arrowcolor","arrowhead","arrowwidth","autotypenumbers","coloraxis","autocolorscale","colorbar","thickness","showticklabels","ticks","tickwidth","tickcolor","ticklen","tickfont","color","ticklabelposition","font","colorscale","diverging","sequential","sequentialminus","colorway","hoverlabel","align","hovermode","legend","mapbox","paper_bgcolor","plot_bgcolor","xref","yref","xanchor","yanchor","xaxis","automargin","gridcolor","linewidth","linecolor","rangemode","showline","zerolinecolor","zerolinewidth","yaxis","l","r","t","darkPreviewTemplate","showlegend","nticks","darkOneChartTemplate","darkTwoChartsTemplate","darkThreeChartsTemplate","darkExpPreviewTemplate","lightTemplate","lightPreviewTemplate","lightOneChartTemplate","lightTwoChartsTemplate","lightThreeChartsTemplate","lightExpPreviewTemplate","Plot","createPlotlyComponent","Plotly","updateLayout","layout","PlotlyChart","plotConfig","staticPlot","classNames","config","useResizeHandler","CloseIcon","ExpandIcon","MetaDataList","property","inline","commas","limit","setExpanded","showValues","slice","remainder","index","darkjsonViewerTheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","lightjsonViewerTheme","MetaDataObject","indentWidth","collapsed","collapseStringsAfterLength","enableClipboard","displayDataTypes","src","MetaDataRow","showList","showObject","hljs","registerLanguage","python","yaml","javascript","codeRef","highlighted","useMemo","detected","highlightAuto","language","second_best","highlight","dangerouslySetInnerHTML","__html","Toggle","checked","onChange","htmlFor","MetaData","metadata","onToggleNodeSelected","onToggleCode","toggleCode","onToggleMetadataModal","isTaskNode","isDataNode","isParametersNode","nodeTypeIcon","hasPlot","hasImage","hasTrackingData","hasCode","isTranscoded","showCodePanel","showCodeSwitch","string","metadataType","onExpandPlotClick","pop","removeInitialSlash","alt","CollapseIcon","BackIcon","MetadataModal","onCollapsePlotClick","UPDATE_RUN_DETAILS","useUpdateRunDetails","useMutation","_updateRunDetails","updateRunDetails","variables","PencilIcon","BookmarkIcon","ExportIcon","BookmarkStrokeIcon","MenuIcon","PrimaryToolbar","onToggleSidebar","ShowChangesIcon","directions","leftToRight","entering","visibility","opacity","entered","exiting","exited","rightToLeft","Animation","direction","defaultStyle","Transition","in","timeout","SlideFromLeftToRight","SlideFromRightToLeft","ExperimentPrimaryToolbar","displaySidebar","enableComparisonView","enableShowChanges","selectedRunData","setEnableShowChanges","setSidebarVisible","showChangesIconDisabled","showRunDetailsModal","setShowRunExportModal","bookmark","runId","runInput","LabelIcon","LayersIcon","FlowchartPrimaryToolbar","disableLayerBtn","visibleLayers","onToggleExportModal","onToggleLayers","toggleSidebar","onToggleTextLabels","drawViewport","mapSize","getViewport","viewport","sizeOffset","MiniMap","onPointerEnter","isPointerInside","onPointerLeave","onPointerUpGlobal","isPointerDown","onPointerDown","onPointerMove","onPointerWheel","onUpdateChartZoom","deltaY","ZOOM_RATE","onPointerWheelGlobal","preventDefault","useTransition","time","Number","Date","lastTransitionTime","TRANSITION_WAIT","chartScale","containerRect","pointerX","clientX","pointerY","clientY","centerX","centerY","viewportRef","passive","pointerEventName","mapWidth","mapHeight","mapScale","translateX","translateY","transformStyle","_","inputEvents","onWheel","PointerEvent","getMapSize","scaledWidth","MapIcon","PlusIcon","MinusIcon","ResetIcon","scaleZoom","factor","MiniMapToolbar","displayMiniMap","onToggleMiniMap","SearchIcon","SearchInput","onBlur","onFocus","placeholder","inputValue","focused","setFocused","setValue","_handleFocused","_handleBlurred","labelWrapper","SearchBarRenderer","isFocused","onClear","onSubmit","showClearButton","SearchBar","setIsFocused","setShowClearButton","onUpdateSearchValue","handleWindowKeyDown","isKeyF","isKeyCtrlOrCmd","ctrlKey","metaKey","input","activeElement","blur","onKeyDown","SearchList","VisibleIcon","InvisibleIcon","FocusModeIcon","xmlns","replaceTagsWithEntities","shouldMemo","nextProps","NodeListRow","memo","allUnchecked","faded","count","selected","visibleIcon","invisibleIcon","focusModeIcon","rowType","onToggleHoveredFocusMode","isModularPipeline","FocusIcon","isChecked","VisibilityIcon","TextButton","range","rangeUnion","rangeA","rangeB","rangeEqual","visibleRangeOf","element","buffer","childTotal","childHeight","clip","list","bufferCount","ceil","innerHeight","documentElement","clientHeight","floor","useRequestFrameOnce","request","cancelAnimationFrame","requestAnimationFrame","thresholds","from","useIntersection","observer","useLayoutEffect","disconnect","IntersectionObserver","LazyList","lazy","dispose","offsetParent","supported","setRange","rangeRef","listRef","upperRef","lowerRef","itemHeight","totalHeight","upperHeight","lowerHeight","requestUpdate","visibleRange","effectiveRange","observerOptions","threshold","childProps","listStyle","position","paddingTop","upperStyle","lowerStyle","NodeRowList","items","group","onItemClick","onItemChange","onItemMouseEnter","onItemMouseLeave","fade","NodeListGroup","onToggleChecked","onToggleCollapsed","disabledGroup","storedState","NodeListGroups","groups","onGroupToggleChanged","groupsCollapsed","setCollapsed","onToggleGroupCollapsed","groupID","getNodeTypeIDs","isModularPipelineType","getTypeNodeCount","types","typeNodeIDs","visibleTypeNodeIDs","getNodeTypes","typeName","typeNodeCount","nodeCount","arrowIconColor","NodeListTreeItem","TreeItem","collapseIcon","expandIcon","dataset","iconType","GROUPED_NODES_DISPLAY_ORDER","parameter","useStyles","makeStyles","root","flexGrow","maxWidth","StyledTreeView","withStyles","TreeView","isOnFocusedModePath","focusModeID","getModularPipelineRowData","getNodeRowData","modularPipelinesSearchResult","onNodeToggleExpanded","renderTree","sortBy","renderLeafNode","isFocusedModularPipeline","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","expandedItemIds","SplitPanel","splitDefault","splitMin","splitMax","keyboardStep","orientation","handleRef","getRects","handle","clamp","splitValue","rects","handleSize","isResizing","setIsResizing","setSplit","onMouse","mouseOffsetVertical","onMouseMove","onMouseUp","panelA","panelB","tabIndex","onMouseDown","keyboardOffset","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","NodeList","getGroupState","onModularPipelineToggleExpanded","autoHide","hideTracksWhenNotNeeded","IndicatorIcon","rx","OffIndicatorIcon","PartialIndicatorIcon","isTagType","isElementType","isGroupType","nodeGroups","highlightMatch","highlightedGroups","nodeMatchesSearch","filterNodeGroups","filteredGroups","nodeGroupId","getFilteredNodes","filteredNodes","getFilteredTags","getFilteredTagItems","tagNodeCounts","filteredTags","IndicatorOffIcon","getFilteredElementTypes","getFilteredElementTypeItems","nodeTypes","filteredElementTypes","compareEnabledThenAlpha","itemA","itemB","byEnabledTag","byAlpha","getFilteredNodeItems","filteredNodeItems","getGroups","itemsOfType","allChecked","IndicatorPartialIcon","getFilteredItems","filteredTagItems","filteredElementTypeItems","onToggleTagActive","toggleTagActive","onToggleTagFilter","toggleTagFilter","onToggleModularPipelineActive","onToggleModularPipelineDisabled","toggleModularPipelineDisabled","onToggleTypeDisabled","typeID","toggleTypeDisabled","onToggleModularPipelineExpanded","onToggleNodeActive","onToggleParametersActive","onToggleNodesDisabled","toggleNodesDisabled","onToggleFocusMode","updateSearchValue","onGroupItemChange","wasChecked","debounce","groupType","groupItems","groupItemsDisabled","groupItem","clickedIconType","EventController","eventHandler","__bodyEventHandlers","__bodyListenerAttached","handler","KEYS","handleKeyEvent","keyActions","handleSingleKey","keyName","DropdownArrow","DropdownRenderer","defaultText","focusedOption","onLabelClicked","onOptionSelected","onSelectChanged","selectedOption","wrapperClasses","optionIndex","_extendMenuOption","extraProps","onSelected","cloneElement","childElements","Children","toArray","sectionWrapRequired","sectionChild","j","uniqueId","optionsNode","toString","escape","up","down","Dropdown","onChanged","onClosed","onOpened","_findSelectedOption","selectedOptionElement","_findSelectedOptionElement","primaryText","flow","flatten","setFocusedOption","haveClicked","setHaveClicked","setSelectedOption","setOpen","selectedObject","setSelectedObject","dropdownRef","handleOptionSelectedRef","selectedObjRef","mounted","isEqual","_childrenHaveChanged","removeBodyListeners","focusClass","_handleBodyClicked","_handleClose","_focusLabel","addBodyListener","newSelectedOption","newFocusedOption","optionsLength","getSectionChildren","MenuOption","_handleClicked","PipelineList","asyncDataSource","onUpdateActivePipeline","onToggleOpen","Switch","defaultChecked","setChecked","Accordion","heading","headingClassName","headingDetail","isCollapsed","onCallback","_dayJs","dayjs","extend","relativeTime","formatTimestamp","timestamp","toHumanReadableTime","fromNow","HoverStateContext","createContext","HoverStateContextProvider","hoveredElementId","setHoveredElementId","Provider","RunsListCard","disableRunSelection","onRunSelection","selectedRunIds","selectedIndex","notes","gitSha","setActive","humanReadableTime","useContext","isMatchSearchValue","displayValue","isSearchValueInNotes","onRunsListCardClick","onMouseOver","RunsList","isDisplayingMetrics","onToggleComparisonView","runData","filteredRunList","run","getFilteredRunList","bookmarkedRuns","unbookmarkedRuns","Sidebar","isExperimentView","runMetadata","runsListData","runTrackingData","pipelineIsOpen","togglePipeline","errorMessages","FlowChartWrapper","reload","useLocation","search","setErrorMessage","setInvalidUrl","activePipelineId","substring","decodedPipelineId","decodeURI","matchedFlowchartMainPage","matchPath","matchedSelectedNode","matchedFocusedNode","updatePipeline","switchingModularPipelineTimeout","foundModularPipeline","useRedirectLocationInFlowchart","NEW_RUN_SUBSCRIPTION","ButtonTimeoutContext","ButtonTimeoutContextProvider","isSuccessful","setIsSuccessful","showModal","setShowModal","hasNotInteracted","setHasNotInteracted","localStateTimeout","modalTimeout","resetTimeout","SubCatLoader","TitleLoader","GAP","DetailsLoader","SingleRunDatasetLoader","backgroundColor","foregroundColor","DataSetLoader","SingleRunMetadataLoader","MetaDataLoader","tooltipDefaultProps","content","label1","value1","label2","value2","MetricsChartsTooltip","getTooltipPosition","getSelectedOrderedData","selectedRuns","chartBuffer","yScales","TimeSeries","metricsData","previouslySelectedRuns","setShowTooltip","rangeSelection","setRangeSelection","defaultChartWidth","selectedMarkerRotate","selectedMarkerShape","d3","hoveredElementDate","hoveredValues","runs","metricKeys","metrics","metricData","runKeys","parsedData","parsedDates","diffDays","parseInt","minDate","setDate","getDate","maxDate","selectedData","domain","xScale","handleMouseOutLine","raise","metricName","metricIndex","metricValues","getYAxis","tickSizeOuter","tickFormat","lineGenerator","defined","brush","extent","selection","indexSelection","invert","move","preserveAspectRatio","onDoubleClick","clipPath","x1","y1","x2","y2","parsedDate","toLocaleDateString","day","month","year","handleMouseOverLine","linePath","trendLinePath","getUniqueValues","self","selectedMarkerColors","yAxis","ParallelCoordinates","hoveredMetricLabel","setHoveredMetricLabel","graphKeys","paddingTopBottom","handleMouseOutMetric","onMouseOut","runsCount","handleMouseOverMetric","textAnchor","uniqueValues","highlightedValue","xScaleTickValue","yScaleTickValue","uuidv4","sortedValues","xScaleMetricName","yScaleMetricName","transformX","transformY","rotate","xScaleGraphKey","yScaleGraphKey","tabLabels","MetricsPlots","activeTab","setActiveTab","setChartHeight","parCoordsWidth","setParCoordsWidth","timeSeriesWidth","setTimeSeriesWidth","containerWidth","setContainerWidth","runMetricsData","numberOfMetrics","clientWidth","tab","upArrow","downArrow","PinArrowIcon","sanitizeValue","determinePinIcon","pinValue","pinnedRun","fillEmptyPlots","RunDataset","isSingleRun","setRunDatasetToShow","setShowRunPlotsModal","showLoader","TransitionGroup","component","CSSTransition","datasetName","runIds","rowIndex","updatedDatasetValues","datasetValues","foundIdIndex","findIndex","fillEmptyMetrics","runDataWithPin","pinIcon","resolveRunDataWithPin","datasetKey","isPlotlyDataset","isImageDataset","isTrackingDataset","onExpandVizClick","isSinglePinnedRun","buildDatasetDataMarkup","Input","characterLimit","defaultValue","resetValueTrigger","isLimitSet","scrollHeight","rows","RunDetailsModal","runMetadataToEdit","setShowRunDetailsModal","valuesToUpdate","setValuesToUpdate","RunExportModal","exportData","setExportData","updateExportData","csvData","buildCSVRows","section","trackingDataset","dataKeyNames","keyData","dataField","runTitle","createdBy","author","gitBranch","constructExportData","asyncOnClick","filename","KebabIcon","SelectedPinIcon","UnSelectedPinIcon","sanitiseEmptyValue","HiddenMenu","isBookmarked","isVisible","setIsVisible","handleClickOutside","menuRef","RunMetadata","setPinnedRun","setRunMetadataToEdit","toggleNotes","setToggleNotes","onTitleOrNoteClick","SelectedPin","UnSelectedPin","BackWideIcon","RunPlotsModal","runDatasetToShow","runDataWithPlotData","numDatasets","plotView","isPlotly","isImage","Details","isRunDataLoading","newRunAdded","runDataError","setIsDisplayingMetrics","showRunExportModal","showRunPlotsModal","showSingleRunLoader","setShowSingleRunLoader","showRunLoader","setRunLoader","showSingleRunLoaderTimer","showRunLoaderTimer","transitionStyles","ExperimentWrapper","setDisableRunSelection","setEnableComparisonView","isSidebarVisible","setIsSidebarVisible","setSelectedRunIds","setSelectedRunData","setNewRunAdded","skip","showDiff","plots","JSONData","runsList","singleSelectedRunData","updateQuery","prev","subscriptionData","newRuns","runsAdded","rel","SettingsModalRow","toggleValue","onToggleChange","SettingsModal","showSettingsModal","onToggleFlag","onTogglePrettyName","latestVersion","flagData","hasClickedApplyAndClose","setHasClickApplyAndClose","isPrettyNameOn","setIsPrettyNameOn","settingsConfig","UpdateReminder","versions","setDismiss","expand","setExpand","latest","installed","setReload","versionData","dismissed","setDismissed","setIsOutdated","setLatestVersion","version","App","announceFlags","updatePipelineData","flagsEnabled","allNames","info","private","isEnabled","status","statusIcon","getFlagsMessage","getSeedFromURL","seed","get","characters","charAt","random","generateHash","set","getNumberArray","LOREM_IPSUM","randomUtils","seedrandom","randomIndex","randomNumber","getRandom","randomNumberBetween","getRandomName","numWords","getRandomSelection","numItems","len","taken","LAYERS","Pipeline","utils","generatePipelines","rankCount","getRankCount","rankLayers","getRankLayers","generateTags","generateNodes","generateEdges","generateModularPipelines","finalise","pipelineCount","__root__","layerSize","rankNodeCount","getRankNodeCount","createNode","_sources","initialRank","getNodePipelines","getRandomTags","_targets","generateCodeSnippet","getOwnPropertyNames","prototype","nodesByRank","edgeCount","getNodesByRank","ranks","getRandomNodeAtRank","rankIndex","rankValue","rankNodes","sourceRankIndex","remainingRankCount","biasedRandom","_sourceNode","_targetNode","degree","visibleNodes","sortedNodes","getType","getNodeMetaData","activeNodes","activeTags","activeEdges","generateRandomPipeline","all","getPipelineData","nameSource","spaceflights","demo","selectors","getRandomPipeline","getDataValue","REACT_APP_DATA_SOURCE","process","isDemo","encodeURIComponent","getSourceID","ReactDOM","render","getElementById","HALF_PI","PI","snap","unit","angle","atan2","nodeLeft","nodeRight","nodeTop","nodeBottom","groupByRow","rowNumbers","row","sortedRows","compare","delta","offsetNode","offsetEdge","point","nearestOnLine","ax","ay","bx","by","dx","dy","positionClamped","solveLoose","constraints","iterations","constants","constraint","base","solve","solveStrict","solver","Solver","variableId","addVariable","variable","Variable","unsolvableCount","addConstraint","strict","updateVariables","rowConstraint","variableA","variableB","Constraint","minus","Operator","Ge","spaceY","Strength","required","layerConstraint","layerSpace","parallelConstraint","strength","Eq","create","crossingConstraint","edgeA","edgeB","separationA","separationB","resolveSource","resolveTarget","targetNode","separationConstraint","separation","spaceX","spreadX","layerSpaceY","rowConstraints","createRowConstraints","layerConstraints","createLayerConstraints","crossingConstraints","createCrossingConstraints","parallelConstraints","createParallelConstraints","separationConstraints","createSeparationConstraints","expandDenseRows","layerGroups","nextLayerNodes","intermediary","sourceA","targetA","edgeADegree","sourceB","targetB","edgeBDegree","rowNodes","nodeA","nodeB","degreeA","degreeB","spread","space","densities","rowDensity","spaceYUnit","currentOffsetY","density","offsetY","edgeAngle","abs","sourceRow","targetRow","routing","minPassageGap","stemUnit","stemMinSource","stemMinTarget","stemMax","stemSpaceSource","stemSpaceTarget","sourceOffsetX","currentPoint","firstNode","nearestPoint","nearestDistance","rowExtended","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","nextNode","nodeGap","offsetX","candidatePoint","distance","sourceSeparation","targetSeparation","sourceEdgeDistance","targetEdgeDistance","targetOffsetX","sourceOffsetY","targetOffsetY","sourceStem","targetStem","pointYMax","addEdgeLinks","nodeById","addNearestLayers","validLayers","hasValidLayer","lastLayer","layerNode","findNodeBy","targetNodes","orderRankAscending","successors","accept","successor"],"mappings":"o/9GACI,IAAIA,EAAa,EAAQ,KACrBC,EAAU,CAAC,YACfC,EAAOC,QAAU,WAChB,IAAIC,EAAI,IAAIC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAAC,wr1BAAy11B,CAAEC,KAAM,qBAGl51B,OAFAT,EAAWI,EAAGH,GAEPG,CACR,C,ynCCRSM,EAAa,aAMnB,SAASC,EAAUC,GACxB,MAAO,CACLC,KAAMH,EACNE,OAEJ,CAEO,IAAME,EAAgB,gBAatB,IAAMC,EAAsB,sBAM5B,SAASC,EAAkBC,GAChC,MAAO,CACLJ,KAAME,EACNE,UAEJ,CAEO,IAAMC,EAAwB,wBAM9B,SAASC,EAAoBF,GAClC,MAAO,CACLJ,KAAMK,EACND,UAEJ,CAEO,IAAMG,EAAwB,wBAM9B,SAASC,EAAgBJ,GAC9B,MAAO,CACLJ,KAAMO,EACNH,UAEJ,CAEO,IAAMK,EAAe,eAarB,IAAMC,EAAqB,qBAa3B,IAAMC,EAAqB,qBAa3B,IAAMC,EAAiB,iBAavB,IAAMC,EAAe,eAarB,IAAMC,EAAoB,oBAa1B,IAAMC,EAAc,cAMpB,SAASC,EAAWC,GACzB,MAAO,CACLjB,KAAMe,EACNE,OAEJ,CAEO,IAAMC,EAAiB,iBAavB,IAAMC,EAAc,cAOpB,SAASC,EAAWxB,EAAMyB,GAC/B,MAAO,CACLrB,KAAMmB,EACNvB,OACAyB,QAEJ,CAEO,IAAMC,EAA8B,8BAapC,IAAMC,EAAc,cAapB,IAAMC,EAA4B,4BAalC,IAAMC,EACX,qCAMK,SAASC,EAAgBC,GAC9B,MAAO,CACL3B,KAAMyB,EACNE,kBAEJ,CAEO,IAAMC,EAA4B,4BC9N1BC,ICIWC,EDJXD,EAbf,WAAgD,IAA1BE,EAAU,uDAAG,CAAC,EAAGC,EAAM,uCAC3C,OAAQA,EAAOhC,OACRmB,EACIc,OAAOC,OAAO,CAAC,EAAGH,EAAW,eACjCC,EAAOpC,KAAOoC,EAAOX,QAKjBU,CAEb,E,gBCJMI,EAAyB,qBAATC,KAGhBC,EACFC,EADgBH,EACR,IACA,KAqBCI,GAhBaT,EAgBYO,EAf/BF,EAGE,WACL,IAAMK,EAAa,CACjBC,UAAW,WAAO,GAMpB,OAJAR,OAAOS,KAAKZ,GAAQa,SAAQ,SAAC/C,GAC3B4C,EAAW5C,GAAQ,SAACgD,GAAO,OACzB,IAAIC,SAAQ,SAACC,GAAO,OAAKA,EAAQhB,EAAOlC,GAAMgD,GAAS,GAAE,CAC7D,IACOJ,CACT,EAXSV,GClBJ,IAAMiB,EAAuB,uBAM7B,SAASC,EAAcC,GAC5B,MAAO,CACLjD,KAAM+C,EACNE,UAEJ,CAEO,IAAMC,EAAsB,sBAM5B,SAASC,GAAYZ,GAC1B,MAAO,CACLvC,KAAMkD,EACNX,QAEJ,CAQA,IAGMa,GDOC,SAA6BtB,EAAQuB,GAC1C,IAAIC,EAAWxB,IACXyB,GAAU,EAEd,OAAO,SAACX,GAQN,OAPIW,IAEFD,EAASb,YACTa,EAAWxB,KAEbyB,GAAU,EAEHF,EAAOC,EAAUV,GAASY,MAAK,SAACC,GAErC,OADAF,GAAU,EACHE,CACT,GACF,CACF,CCxBqBC,CAAoB5B,GAH1B,SAACwB,EAAUK,GAAK,OAAKL,EAASM,SAASD,EAAO,IAWtD,SAASE,GAAeC,GAC7B,OAAKA,EAGL,iDAAO,WAAgBC,GAAQ,iFACC,OAA9BA,EAASf,GAAc,IAAO,SACVI,GAAaU,GAAY,KAAD,EAEb,OAFzBvB,EAAK,OACXwB,EHmBK,CACL/D,KAAMS,EACNL,SGrBqB,IACrB2D,EAASf,GAAc,IAAQ,kBACxBe,EAASZ,GAAYZ,KAAO,2CACpC,mDAND,GAFSY,GAAYW,EASvB,CC1CeE,OAbf,WAA+C,IAA1BF,EAAU,uDAAG,CAAC,EAAG9B,EAAM,uCACpCiC,EAAc,SAACC,GAAQ,OAAKjC,OAAOC,OAAO,CAAC,EAAG4B,EAAYI,EAAU,EAE1E,OAAQlC,EAAOhC,OACRkD,EACIe,EAAYjC,EAAOO,OAInBuB,CAEb,ECEeK,OAbf,WAAgD,IAA1BC,EAAU,uDAAG,CAAC,EAAGpC,EAAM,uCAC3C,OAAQA,EAAOhC,OACRC,EACIgC,OAAOC,OAAO,CAAC,EAAGkC,EAAY,CACnChE,QAAS4B,EAAO5B,UAKXgE,CAEb,ECbaC,GAAW,QAEXC,GAAmB,WAOnBC,GAAmB,CAC9BC,KAAM,IACNC,OAAQ,GAGGC,GAAe,CAC1BF,KAAM,IACNC,OAAQ,IACRE,WAAY,KAGDC,GAAmB,CAC9BJ,KAAM,IACNC,OAAQ,GAUGI,GAHG,UAGHA,GAFG,UAEHA,GANI,UAMJA,GALI,UAsBJC,GAAQ,CACnBC,YAAa,CACXnF,KAAM,eACNoF,YAAa,oDACbC,SAAS,EACTC,KAAM,gBAERC,mBAAoB,CAClBvF,KAAM,+BACNoF,YAAa,6CACbC,SAAS,EACTC,KAAM,iBAIGE,GACC,CACVxF,KAAM,cACNoF,YAAa,+CACbC,SAAS,GAKAI,GAAgB,CAC3BC,YAAa,gBACbC,IAAK,QAIMC,GAAsB,CACjCC,KAAM,QACN1F,KAAM,WACN2F,WAAY,cAGDC,GAAmB,CAC9B,sCAAuC,SACvC,kCAAmC,SACnC,gDAAiD,QACjD,oCAAqC,WACrC,0CAA2C,YAIhCC,GACF,cADEA,GAED,eAFCA,GAGD,eAGNC,GAAc,UAAMD,GAAe,eAE5BE,GAAS,CACpBC,UAAW,CACTC,KAAM,IACNC,YAAY,KAAD,OAAOJ,GAAc,YAAID,GAAc,OAClDM,aAAa,KAAD,OAAOL,GAAc,YAAID,GAAe,SClG3CO,GAAgB,SAACC,EAAOC,GACnC,IAAMC,EAAY,CAAC,EAInB,OAHAF,EAAMzD,SAAQ,SAAC4D,GACbD,EAAUC,GAAOF,EAASE,EAC5B,IACOD,CACT,EAOaE,GAAS,SAACxG,EAAMyG,GAC3B,OAAQzG,GACN,IAAK,OACH,MAAO,CAACqE,GAAU,QAAQqC,KAAK,KACjC,IAAK,WACH,IAAKD,EACH,MAAM,IAAIE,MAAM,2BAElB,MAAO,CAACtC,GAAU,YAAaoC,GAAIC,KAAK,KAC1C,IAAK,QACH,IAAKD,EACH,MAAM,IAAIE,MAAM,uBAElB,MAAO,CAACtC,GAAU,QAASoC,GAAIC,KAAK,KACtC,QACE,MAAM,IAAIC,MAAM,oBAEtB,EAQaC,GAAS,SAACC,EAAGC,EAAGC,GAAG,OAAKA,EAAIC,QAAQH,KAAOC,CAAE,EAsB7CG,GAAiB,SAACC,EAAKC,GAClC,IAAO,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QAAS,EAAG,CACnB,IAAMC,EAAQ,IAAIC,OAAOrF,OAAOS,KAAKyE,GAAWT,KAAK,KAAM,MAE3D,OAAOQ,EAAIK,QAAQF,GAAO,SAACG,GACzB,OAAOL,EAAUK,EACnB,GACF,CACE,OAAON,CAEX,E,UCrDeO,GAdM,WAAH,IAAIC,EAAI,uDAAGlB,GAAO,QAASmB,EAAQ,uDAAG,CAAC,EAAC,OACxDC,aAAKF,GAAMG,OAAM,WACf,IAAMC,EAAQ,iBAAaJ,EAAKK,OAAO,IAGvC,GAAIL,IAASlB,GAAO,QAClB,MAAM,IAAIG,MAAM,4BAAD,OACee,EAAI,6IAAqII,EAAQ,MAIjL,OAAO,IAAIjF,SAAQ,SAACC,GAAO,OAAKA,EAAQ6E,EAAS,GACnD,GAAG,E,4BCrBCK,GAA6B,qBAAXC,OAMXC,GAAY,WACvB,GAAIF,GACF,MAAO,CAAC,EAEV,IACE,IAAMG,EAAkBF,OAAOG,aAAaC,QAAQ/D,IACpD,OAAwB,OAApB6D,EACK,CAAC,EAEHG,KAAKC,MAAMJ,EAIpB,CAHE,MAAOK,GAEP,OADAC,QAAQC,MAAMF,GACP,CAAC,CACV,CACF,EAMaG,GAAY,SAAChF,GACxB,IAAIqE,GAGJ,IACE,IAAM9D,EAAWjC,OAAOC,OAAOgG,KAAavE,GAGxCO,EAAS0E,eAAe,4BACnB1E,EAAS2E,iBAElB,IAAMV,EAAkBG,KAAKQ,UAAU5E,GACvC+D,OAAOG,aAAaW,QAAQzE,GAAkB6D,EAGhD,CAFE,MAAOK,GACPC,QAAQC,MAAMF,EAChB,CACF,EAOaQ,GAAkB,SAACC,GAC9B,IAAMC,EAAS,CAAC,EAChB,IAAK,IAAI3C,KAAO0C,EACVA,EAAIL,eAAerC,IAAQ0C,EAAI1C,KACjC2C,EAAO3C,GAAO0C,EAAI1C,IAGtB,OAAO2C,CACT,E,QC+LeC,GAtDO,SAACpJ,EAAMoF,GAC3B,IAAMxB,EA/LyC,CAC/CyF,SAAU,CACRC,IAAK,GACLzJ,KAAM,CAAC,GAET+B,gBAAiB,CACf0H,IAAK,GACLC,KAAM,CAAC,EACPlJ,QAAS,CAAC,EACVmJ,SAAU,GACVC,OAAQ,CAAC,EACTC,SAAU,CAAC,GAEbC,KAAM,CACJL,IAAK,GACLzJ,KAAM,CAAC,EACP+J,SAAU,CAAC,EACX3J,KAAM,CAAC,EACP4J,KAAM,CAAC,EACPC,MAAO,CAAC,EACRJ,SAAU,CAAC,EACXK,UAAW,CAAC,EACZC,QAAS,KACTC,QAAS,KACTC,QAAS,CAAC,EACVC,KAAM,CAAC,EACPxE,WAAY,CAAC,EACbyE,SAAU,CAAC,EACXC,OAAQ,CAAC,EACTC,QAAS,CAAC,EACVC,KAAM,CAAC,EACPC,MAAO,CAAC,EACRC,aAAc,CAAC,EACfC,YAAa,CAAC,EACdC,aAAc,CAAC,EACfC,gBAAiB,CAAC,EAClBC,WAAY,CAAC,EACbC,iBAAkB,CAAC,GAErBC,SAAU,CACRzB,IAAK,CAAC,OAAQ,OAAQ,aAAc,mBACpCzJ,KAAM,CACJG,KAAM,WACN0F,KAAM,QACNC,WAAY,aACZ/D,gBAAiB,qBAEnB8H,SAAU,CAAC,GAEbsB,KAAM,CACJ1B,IAAK,GACL2B,QAAS,CAAC,EACVC,QAAS,CAAC,GAEZpB,MAAO,CACLR,IAAK,GACLzJ,KAAM,CAAC,EACPQ,SAAS,GAEXmF,IAAK,CACH8D,IAAK,GACLzJ,KAAM,CAAC,EACP4J,OAAQ,CAAC,EACT0B,QAAS,CAAC,GAEZC,mBAAmB,EACnBC,kBAAkB,GAqIlB,GANa,SAATrL,EACF4D,EAAM0H,WAAa,OACVtL,EAAKuL,SACd3H,EAAM0H,WAAatL,EAAKuL,SA1HN,SAACvL,GACrB,IAAKA,EACH,MAAM,IAAI4G,MAAM,iCAElB,GAAa,SAAT5G,EAEF,OAAO,EAET,IAAKwL,MAAMC,QAAQzL,EAAK0L,SAAWF,MAAMC,QAAQzL,EAAK2L,OAIpD,KAHoB,qBAATtJ,MACTqG,QAAQC,MAAM,0BAA2B3I,GAErC,IAAI4G,MACR,0GAGJ,OAAO,CACT,CA4GOgF,CAAc5L,GACjB,OAAO4D,EAYT,GATA5D,EAAK2L,MAAM/I,QAnFG,SAACgB,GAAK,OAAK,SAAC+F,GAC1B,IAAQjD,EAAOiD,EAAPjD,GACJ9C,EAAM+F,KAAK9J,KAAK6G,KAGpB9C,EAAM+F,KAAKL,IAAIuC,KAAKnF,GACpB9C,EAAM+F,KAAK9J,KAAK6G,GAAMiD,EAAK9J,KAC3B+D,EAAM+F,KAAKC,SAASlD,GAAMiD,EAAKmC,WAAanC,EAAK9J,KACjD+D,EAAM+F,KAAK1J,KAAKyG,GAAMiD,EAAK1J,KAC3B2D,EAAM+F,KAAKG,MAAMpD,GAAMiD,EAAKG,MAC5BlG,EAAM+F,KAAKI,UAAUrD,GAAMiD,EAAKI,UAC5B3D,GAAcuD,EAAKI,WAAW,kBAAM,CAAI,IACxC,CAAC,EACLnG,EAAM+F,KAAKE,KAAKnD,GAAMiD,EAAKE,MAAQ,GAEnCjG,EAAM+F,KAAKQ,KAAKzD,GAAMiD,EAAKQ,KAC3BvG,EAAM+F,KAAKhE,WAAWe,GAAMiD,EAAKhE,WACjC/B,EAAM+F,KAAKS,SAAS1D,GAAMiD,EAAKS,SAC/BxG,EAAM+F,KAAKY,KAAK7D,GAAMiD,EAAKY,KAC3B3G,EAAM+F,KAAKa,MAAM9D,GAAMiD,EAAKa,MAC5B5G,EAAM+F,KAAKe,YAAYhE,GAAMiD,EAAKoC,aAClCnI,EAAM+F,KAAKgB,aAAajE,GAAMiD,EAAKqC,cACnCpI,EAAM+F,KAAKiB,gBAAgBlE,GAAMiD,EAAKsC,iBACtCrI,EAAM+F,KAAKkB,WAAWnE,GAAMiD,EAAKkB,WACjCjH,EAAM+F,KAAKmB,iBAAiBpE,GAAMiD,EAAKuC,mBAAqB,GAC9D,CAAE,CA0DmBC,CAAQvI,IAC3B5D,EAAK0L,MAAM9I,QAnDX,SAACgB,GAAK,OACN,YAAyB,IAAtB2H,EAAM,EAANA,OAAQa,EAAM,EAANA,OACH1F,EAzDW,SAAC6E,EAAQa,GAAM,MAAK,CAACb,EAAQa,GAAQzF,KAAK,IAAK,CAyDrD0F,CAAad,EAAQa,GAC5BxI,EAAMoH,KAAK1B,IAAIgD,SAAS5F,KAG5B9C,EAAMoH,KAAK1B,IAAIuC,KAAKnF,GACpB9C,EAAMoH,KAAKC,QAAQvE,GAAM6E,EACzB3H,EAAMoH,KAAKE,QAAQxE,GAAM0F,EAC3B,CAAE,CA0CiBG,CAAQ3I,IACvB5D,EAAK+J,YACP/J,EAAK+J,UAAUnH,QArGC,SAACgB,GAAK,OAAK,SAACyF,GAC9B,IAAQ3C,EAAO2C,EAAP3C,GACJ9C,EAAMyF,SAASxJ,KAAK6G,KAGxB9C,EAAMyF,SAASC,IAAIuC,KAAKnF,GACxB9C,EAAMyF,SAASxJ,KAAK6G,GAAM2C,EAASxJ,KACrC,CAAE,CA8FyB2M,CAAY5I,IAC/BA,EAAMyF,SAASC,IAAIjC,SACrBzD,EAAMyF,SAASpD,KAAOjG,EAAKyM,mBAAqB7I,EAAMyF,SAASC,IAAI,GACnE1F,EAAMyF,SAASI,OAAS7F,EAAMyF,SAASpD,OAGvCjG,EAAKkM,kBAKP,GAJAtI,EAAMhC,gBAAgB0H,IAAMpH,OAAOS,KAAK3C,EAAKkM,mBAC7CtI,EAAMhC,gBAAgB2H,KAAOvJ,EAAKkM,kBAG9B9G,EAAoB,CAEtBxB,EAAMhC,gBAAgB4H,SAAW5F,EAAMhC,gBAAgB0H,IAEvC1F,EAAM+F,KAAKL,IACnB1G,SAAQ,SAAC8J,GACV9I,EAAMhC,gBAAgB0H,IAAIgD,SAASI,KACtC9I,EAAMhC,gBAAgBvB,QAAQqM,IAAU,EAE5C,GACF,KAAO,CAAC,IACyD,EAD1D,eACe1M,EAAKkM,kBAA4B,SAAES,UAAQ,IAA/D,2BAAiE,CAAC,IAAvDC,EAAK,QACdhJ,EAAMhC,gBAAgBvB,QAAQuM,EAAMlG,KAAM,CAC5C,CAAC,+BACH,CAUF,OAPI1G,EAAK6J,MACP7J,EAAK6J,KAAKjH,QAnEC,SAACgB,GAAK,OAAK,SAAC4B,GACzB,IAAQkB,EAAOlB,EAAPkB,GACR9C,EAAM4B,IAAI8D,IAAIuC,KAAKnF,GACnB9C,EAAM4B,IAAI3F,KAAK6G,GAAMlB,EAAI3F,IAC3B,CAAE,CA+DoBgN,CAAOjJ,IAEvB5D,EAAK8M,QACP9M,EAAK8M,OAAOlK,QA5DC,SAACgB,GAAK,OAAK,SAACkG,GAG3BlG,EAAMkG,MAAMR,IAAIuC,KAAK/B,GACrBlG,EAAMkG,MAAMjK,KAAKiK,GAASA,CAC5B,CAAE,CAuDsBiD,CAASnJ,IAGxBA,CACT,E,iBCnPaoJ,GAAQ,CAMnBC,UAAW,SAACpN,GAAI,OAAKmN,GAAME,QAAQZ,SAASzM,EAAK,EAMjDqN,MAAO,kBAAMhL,OAAOS,KAAKwK,GAAY,EAMrCC,SAAU,kBACRJ,GAAME,QAAQG,QACZ,SAACC,EAAQC,GAAI,OACXrL,OAAOC,OAAOmL,EAAO,eAAIC,EAAOJ,GAAYI,GAAMrI,SAAU,GAC9D,CAAC,EACF,GAQQsI,GAAkB,SAACC,GAC9B,IAEIC,EAFE3I,EAAQ,CAAC,EAGf,IACE2I,EAAY,IAAIhO,IAAI+N,GAAOE,SAASC,SAASC,MAAMC,YAIrD,CAHE,MAAOC,GAEP,OADArF,QAAQsF,KAAK,mDACNjJ,CACT,CAQA,OANA,aAAI2I,GAAW9K,SAAQ,oCAAE/C,EAAI,KAAEyB,EAAK,YAClC0L,GAAMC,UAAUpN,GACXkF,EAAMlF,GAAkB,SAAVyB,GAA8B,MAAVA,GAA2B,KAAVA,EACpD,IAAI,IAGHyD,CACT,ECFakJ,GAAoB,SAACrK,GAChC,IAAMsK,EAAoB/F,KAM1B,OALAjG,OAAOS,KAAKuL,GAAmBtL,SAAQ,SAAC4D,GACjC5C,EAAM4C,WACF0H,EAAkB1H,EAE7B,IACO2H,KAAUvK,EAAOsK,EAC1B,EAYaE,GAAuB,SAACpO,EAAMqO,EAAYjJ,GACrD,IAAMxB,EAAQqK,GAAkB7E,GAAcpJ,EAAMoF,IAQpD,OAPIiJ,IAEGzK,EAAMyF,SAASC,IAAIgD,SAAS1I,EAAMyF,SAASI,UAC9C7F,EAAMyF,SAASI,OAAS7F,EAAMyF,SAASpD,OAIpCrC,CACT,EASa0K,GAA0B,SAACC,GAAW,IAAD,IAC1C3K,EAAQqK,GAjFyB,CACvCO,UAAW,CAAC,EACZzJ,MAAOiI,GAAMI,WACbqB,YAAY,EACZC,MAAO,OACPC,WAAYtJ,GAAoBH,QAChC0J,oBAAoB,EACpB1L,QAAS,CACPV,OAAO,EACP6G,UAAU,EACVM,MAAM,GAERtJ,QAAS,CACPmC,OAAO,EACPqM,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,QAASjH,OAAOkH,WAAazK,GAAaC,WAC1CuF,MAAM,EACNkF,YAAY,EACZC,SAAS,EACTC,yBAA0B,MAE5BC,QAAS,CACPC,eAAe,EACfN,SAAS,EACTG,SAAS,EACTlK,oBAAoB,GAEtBlE,KAAM,CAAC,IAmDHwO,EAAkB,CAAC,EASvB,OAR+B,KAAd,QAAb,EAAAnB,EAAMiB,eAAO,aAAb,EAAeL,WAA+C,IAA1BvL,EAAM4L,QAAQL,UACpDO,EAAyB,SAAI,IAGA,KAAd,QAAb,EAAAnB,EAAMiB,eAAO,aAAb,EAAeG,WAA+C,IAA1B/L,EAAM4L,QAAQF,UACpDI,EAAyB,SAAI,GAGxB,6BACF9L,GAAK,IACRmB,MAAM,6BAAMnB,EAAMmB,OAAUyI,MAC5BkB,MAAOH,EAAMG,OAAS9K,EAAM8K,MAC5BrO,QAAQ,0CAAMuD,EAAMvD,SAAYkO,EAAMlO,SAAYqP,GAClDF,QAAQ,6BAAM5L,EAAM4L,SAAYjB,EAAMiB,UAE1C,EAkCeI,GAzBS,WAAiB,IAAhBrB,EAAK,uDAAG,CAAC,EAC1BsB,EAAmBvB,GAAwBC,GACjD3F,GAAU,CACRmC,SAAU,CAERrB,SAAU,CAAE/D,YAAY,EAAMD,MAAM,EAAO1F,MAAM,MAIrD,IAAMoF,EACJyK,EAAiBL,QAAQpK,oBACzByK,EAAiB9K,MAAMK,mBAEnB0K,EAAgB1B,GACpBG,EAAMvO,KACS,SAAfuO,EAAMvO,KACNoF,GAGF,OAAO,6BACFyK,GACAC,EAEP,ECxHaC,GAAyB,yBAM/B,SAASC,GAAqB3G,GACnC,MAAO,CACLpJ,KAAM8P,GACN1G,WAEJ,CAEO,IAAM4G,GAA0B,0BAMhC,SAAShN,GAAcC,GAC5B,MAAO,CACLjD,KAAMgQ,GACN/M,UAEJ,CAMO,IAAMgN,GAAiB,SAAC7G,GAC7B,OAAIA,EAASI,SAAWJ,EAASpD,KACxBQ,GAAO,QAETA,GAAO,WAAY4C,EAASI,OACrC,EAiEO,SAAS0G,GAAiBC,GAC/B,wDAAO,WAAgBpM,EAAUqM,GAAQ,+FACK,GADL,EACUA,IAAzC/E,EAAU,EAAVA,WAAYjC,EAAQ,EAARA,SAAUmG,EAAO,EAAPA,QAASzK,EAAK,EAALA,OAEnCqL,GAAcA,IAAe/G,EAASI,OAAM,oDAI7B,SAAf6B,EAAqB,iBASiC,OARxDtH,EAASf,IAAc,IAEjBwK,EAAMyC,GAAe,CACzBjK,KAAMoD,EAASpD,KACfwD,OAAQ2G,IAGJhL,EACJoK,EAAQpK,oBAAsBL,EAAMK,mBAAmB,EAAD,OACjCsC,GAAa+F,GAAKhK,MAAK,SAACzD,GAAI,OACjDoO,GAAqBpO,GAAM,EAAOoF,EAAmB,IACrD,KAAD,GAFKjB,EAAQ,QAMLkF,SAASI,OAAS2G,EAC3BpM,EAASjE,EAAUoE,IACnBH,EAASf,IAAc,IAAQ,wBAE/Be,EAASgM,GAAqBI,IAAa,4CAE9C,qDA7BD,EA8BF,CCtJO,IAAME,GAAsB,sBAM5B,SAASC,GAAkBC,GAChC,MAAO,CACLvQ,KAAMqQ,GACNE,cAEJ,CAEO,IAAMC,GAAwB,wBAe9B,IAAMC,GAAsB,sBAM5B,SAASC,GAAkBC,GAChC,MAAO,CACL3Q,KAAMyQ,GACNE,cAEJ,CAEO,IAAMC,GAA2B,2BAMjC,SAASC,GAAsB5N,GACpC,MAAO,CACLjD,KAAM4Q,GACN3N,UAEJ,CAEO,IAAM6N,GAAoB,oBAkB1B,SAASC,GAAaC,GAC3B,wDAAO,WAAgBjN,EAAUqM,GAAQ,yFAGH,GAHG,EACVA,IAArB/E,EAAU,EAAVA,WAAY3B,EAAI,EAAJA,KAEpB3F,EAASuM,GAAkBU,IAER,SAAf3F,IAAyB2F,GAAWtH,EAAKO,QAAQ+G,GAAO,iBAEvB,OADnCjN,EAAS8M,IAAsB,IACzBrD,EAAMhH,GAAO,QAASwK,GAAQ,EAAD,OACZvJ,GAAa+F,GAAK,KAAD,EAAlCyD,EAAQ,OACdlN,EArBG,CACL/D,KAAM8Q,GACN/Q,KAmB2B,CAAE0G,GAAIuK,EAAQjR,KAAMkR,KAC7ClN,EAAS8M,IAAsB,IAAQ,4CAE1C,qDAZD,EAaF,CC5DeK,OAzBf,WAAoD,IAA5BC,EAAY,uDAAG,CAAC,EAAGnP,EAAM,uCAC/C,OAAQA,EAAOhC,MACb,KAAKgQ,GACH,OAAO/N,OAAOC,OAAO,CAAC,EAAGiP,EAAc,CACrC/H,SAAUpH,EAAOiB,UAIrB,KAAKF,EACH,OAAOd,OAAOC,OAAO,CAAC,EAAGiP,EAAc,CACrC5O,MAAOP,EAAOiB,UAIlB,KAAK2N,GACH,OAAO3O,OAAOC,OAAO,CAAC,EAAGiP,EAAc,CACrCzH,KAAM1H,EAAOiB,UAIjB,QACE,OAAOkO,EAEb,ECsEenN,OAzFf,WAA8C,IAAzBoN,EAAS,uDAAG,CAAC,EAAGpP,EAAM,uCACnCiC,EAAc,SAACC,GAAQ,OAAKjC,OAAOC,OAAO,CAAC,EAAGkP,EAAWlN,EAAU,EAEzE,OAAQlC,EAAOhC,MACb,KAAKqQ,GACH,OAAOpM,EAAY,CACjB8F,QAAS/H,EAAOuO,cAIpB,KAAKC,GACH,OAAOvM,EAAY,CACjB8F,QAAS/H,EAAOqP,QAAQhF,SAAS+E,EAAUrH,SACvC,KACAqH,EAAUrH,QACdN,SAAUzH,EAAOqP,QAAQjE,QACvB,SAAC3D,EAAUhD,GAAE,OACXxE,OAAOC,OAAO,CAAC,EAAGuH,EAAS,eACxBhD,EAAKzE,EAAOsP,YACb,GACJF,EAAU3H,YAKhB,KAAKgH,GACH,OAAOxM,EAAY,CACjB+F,QAAShI,EAAO2O,cAIpB,KAAKb,GACH,OAAO7L,EAAY,CACjB8F,QAAS,KACTC,QAAS,OAIb,KAAK8G,GACH,MAAqB9O,EAAOjC,KAApB0G,EAAE,EAAFA,GAAI1G,EAAI,EAAJA,KACZ,OAAOkE,EAAY,CACjBgG,QAAShI,OAAOC,OAAO,CAAC,EAAGkP,EAAUnH,QAAQ,eAC1CxD,GAAK,IAERyD,KAAMjI,OAAOC,OAAO,CAAC,EAAGkP,EAAUlH,KAAK,eACpCzD,EAAK1G,EAAKmK,OAEbC,SAAUlI,OAAOC,OAAO,CAAC,EAAGkP,EAAUjH,SAAS,eAC5C1D,EAAK1G,EAAKoK,WAEbzE,WAAYzD,OAAOC,OAAO,CAAC,EAAGkP,EAAU1L,WAAW,eAChDe,EAAK1G,EAAK2F,aAEb0E,OAAQnI,OAAOC,OAAO,CAAC,EAAGkP,EAAUhH,OAAO,eACxC3D,EAAK1G,EAAKqK,SAEbC,QAASpI,OAAOC,OAAO,CAAC,EAAGkP,EAAU/G,QAAQ,eAC1C5D,EAAK1G,EAAKsK,UAGbI,YAAaxI,OAAOC,OAAO,CAAC,EAAGkP,EAAU3G,YAAY,eAClDhE,EAAK1G,EAAKC,OAEb0K,aAAczI,OAAOC,OAAO,CAAC,EAAGkP,EAAU1G,aAAa,eACpDjE,EAAK1G,EAAKgM,gBAEbpB,gBAAiB1I,OAAOC,OAAO,CAAC,EAAGkP,EAAUzG,gBAAgB,eAC1DlE,EAAK1G,EAAKiM,mBAEb1B,KAAMrI,OAAOC,OAAO,CAAC,EAAGkP,EAAU9G,KAAK,eACpC7D,EAAK1G,EAAKuK,OAEbC,MAAOtI,OAAOC,OAAO,CAAC,EAAGkP,EAAU7G,MAAM,eACtC9D,EAAK1G,EAAKwK,QAEbC,aAAcvI,OAAOC,OAAO,CAAC,EAAGkP,EAAU5G,aAAa,eACpD/D,EAAK1G,EAAKwR,gBAEb3G,WAAY3I,OAAOC,OAAO,CAAC,EAAGkP,EAAUxG,WAAW,eAChDnE,EAAK1G,EAAKyR,gBAKjB,QACE,OAAOJ,EAEb,EC/FaK,GAAuB,uBCQpC,IAAMC,GAAoB,CACxBhM,WDFsC,ECGtCD,KDHsC,ECItC1F,KDJsC,GCOlC4R,GAAkB,SAACC,GAAa,ODPE,ICQtCA,CAA2C,EAEvCC,GAAqB,SAACD,GAAa,OAAuB,IAAlBA,CAAuB,EAsCtDE,OApCf,WAAsD,IAA7BC,EAAa,uDAAG,CAAC,EAAG/P,EAAM,uCACjD,GAAQA,EAAOhC,OACRyR,GAAL,CACE,IAAMO,EAAiB,6BAClBD,EAActI,UACdzH,EAAOiQ,SAGNC,EAAoBjQ,OAAOkQ,OAAOH,GAGxC,GAAIE,EAAkBE,MAAMP,IAE1B,OAAO,6BACFE,GAAa,IAChBtI,SAAS,gBAAMiI,MAKnB,IAAK,IAAM1R,KAAQgS,EACbL,GAAgBK,EAAkBhS,MACpCgS,EAAkBhS,IAAQ,GAI9B,OAAO,6BACF+R,GAAa,IAChBtI,SAAUuI,GAEd,CAEE,OAAOD,CAEb,ECtCeM,OAbf,WAAsD,IAA7BxC,EAAa,uDAAG,CAAC,EAAG7N,EAAM,uCACjD,OAAQA,EAAOhC,OACR8P,GACI7N,OAAOC,OAAO,CAAC,EAAG2N,EAAe,CACtCrG,OAAQxH,EAAOoH,WAKVyG,CAEb,ECbayC,GAAoB,oBAe1B,IAAMC,GAAoB,oBCkBlBC,OA/Bf,WAA4C,IAAxBC,EAAQ,uDAAG,CAAC,EAAGzQ,EAAM,uCACjCiC,EAAc,SAACC,GAAQ,OAAKjC,OAAOC,OAAO,CAAC,EAAGuQ,EAAUvO,EAAU,EAMlEwO,EAAe,SAACnM,GAAG,OACvBvE,EAAO2Q,OAAOvF,QAAO,SAACC,EAAQuF,GAE5B,OADAvF,EAAOuF,GAAS5Q,EAAOuE,GAChB8G,CACT,GAAG,CAAC,EAAG,EAET,OAAQrL,EAAOhC,MACb,KAAKsS,GACH,OAAOrO,EAAY,CACjBuF,OAAQvH,OAAOC,OAAO,CAAC,EAAGuQ,EAASjJ,OAAQkJ,EAAa,aAI5D,KAAKH,GACH,OAAOtO,EAAY,CACjBiH,QAASjJ,OAAOC,OAAO,CAAC,EAAGuQ,EAASvH,QAASwH,EAAa,cAI9D,QACE,OAAOD,EAEb,EC/BaI,GAAiC,iCAOvC,SAASC,GAA4BC,EAAoBvJ,GAC9D,MAAO,CACLxJ,KAAM6S,GACNE,mBAAoBxH,MAAMC,QAAQuH,GAC9BA,EACA,CAACA,GACLvJ,SAEJ,CAEO,IAAMwJ,GACX,mCAYK,IAAMC,GACX,0CAaK,IAAMC,GACX,oCAMK,SAASC,GAA+BC,GAC7C,MAAO,CACLpT,KAAMkT,GACNE,cAEJ,CC8DeC,OA/Gf,WAAoE,IAApCC,EAAoB,uDAAG,CAAC,EAAGtR,EAAM,uCACzDiC,EAAc,SAACC,GAAQ,OAC3BjC,OAAOC,OAAO,CAAC,EAAGoR,EAAsBpP,EAAU,EAM9CwO,EAAe,SAACnM,GAAG,OACvBvE,EAAO+Q,mBAAmB3F,QAAO,SAACC,EAAQkG,GAExC,OADAlG,EAAOkG,GAAqBvR,EAAOuE,GAC5B8G,CACT,GAAG,CAAC,EAAG,EAET,OAAQrL,EAAOhC,MACb,KAAK6S,GACH,OAAO5O,EAAY,CACjBuF,OAAQvH,OAAOC,OACb,CAAC,EACDoR,EAAqB9J,OACrBkJ,EAAa,aAKnB,KAAKM,GACH,OAAO/O,EAAY,CACjBwF,SAAUxH,OAAOC,OACf,CAAC,EACDoR,EAAqB7J,SACrBiJ,EAAa,eAKnB,KAAKO,GACH,IAAMO,EAAe,gBAAQF,EAAqBlT,SAOlD,OALAoT,EAAgBxR,EAAOuR,oBAAqB,EAC5CD,EAAqBhK,KAAKtH,EAAOuR,mBAAmB7G,SAAS/J,SAC3D,SAACgK,GAAK,OAAM6G,EAAgB7G,EAAMlG,KAAM,CAAI,IAGvCxC,EAAY,CACjBsF,SAAS,GAAD,oBAAM+J,EAAqB/J,UAAQ,CAAEvH,EAAOuR,oBACpDnT,QAASoT,IAeb,KAAKN,GACH,IAAMM,EAAe,gBAAQF,EAAqBlT,SAC5CqT,EACJzR,EAAOoR,YAAYhM,OAASkM,EAAqB/J,SAASnC,OACxDgM,EAAcpR,EAAOoR,YAEzB,GAAIK,GAAeH,EAAqBjK,IAAIjC,OAAS,EAAG,CACtD,IAAMsM,EAA2BN,EAAYO,QAC3C,SAACC,GAAU,OAAMN,EAAqB/J,SAAS8C,SAASuH,EAAW,IAErEF,EAAyB/Q,SAAQ,SAACkR,GAChCL,EAAgBK,IAA2B,EAC3CP,EAAqBhK,KAAKuK,GAAyBnH,SAAS/J,SAC1D,SAACgK,GAAK,OAAM6G,EAAgB7G,EAAMlG,KAAM,CAAI,GAEhD,GACF,KAAO,CACL,IAAMqN,EAA4BR,EAAqB/J,SAASoK,QAC9D,SAACC,GAAU,OAAMR,EAAY/G,SAASuH,EAAW,IAI7CG,EAAuB,SAAvBA,EAAwBrK,GAC5B4J,EAAqBhK,KAAKI,GAAMgD,SAAS/J,SAAQ,SAACgK,GAChD6G,EAAgB7G,EAAMlG,KAAM,EACT,oBAAfkG,EAAM3M,MACR+T,EAAqBpH,EAAMlG,GAE/B,GACF,EAEAqN,EAA0BnR,SAAQ,SAACqR,GACjCR,EAAgBQ,IAA4B,EAC5CD,EAAqBC,GACrBZ,EAAcA,EAAYO,QACxB,SAAClN,GAAE,OAAMA,EAAGwN,WAAWD,EAAyB,GAEpD,GACF,CAEA,OAAO/P,EAAY,CACjBsF,SAAU6J,EACVhT,QAASoT,IAIb,QACE,OAAOF,EAEb,EClDeY,OAvDf,WAAoD,IAA5BC,EAAY,uDAAG,CAAC,EAAGnS,EAAM,uCAC/C,OAAQA,EAAOhC,MACb,KAAKS,EACH,OAAOwB,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrC5R,MAAOP,EAAO5B,UAIlB,KAAKG,EACH,OAAO0B,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrCnF,cAAehN,EAAO5B,UAI1B,KAAKF,EACH,OAAO+B,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrCpF,YAAa/M,EAAO5B,UAIxB,KAAKC,EACH,OAAO4B,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrClF,cAAejN,EAAO5B,UAI1B,KAAKQ,EACH,OAAOqB,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrCjF,QAASlN,EAAO5B,UAIpB,KAAKc,EACH,OAAOe,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrC9E,QAASrN,EAAO5B,UAIpB,KAAKmB,EACH,OAAOU,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrCjK,KAAMlI,EAAO5B,UAIjB,KAAKqB,EACH,OAAOQ,OAAOC,OAAO,CAAC,EAAGiS,EAAc,CACrC7E,yBAA0BtN,EAAOL,kBAIrC,QACE,OAAOwS,EAEb,EClCMC,GACJ,SAACC,EAAcrU,EAAMuG,GAAG,OACxB,WAAmC,IAAlC5C,EAAK,uDAAG0Q,EAAcrS,EAAM,uCAC3B,MAAmB,qBAARuE,GAAuBvE,EAAOhC,OAASA,EACzCgC,EAAOuE,GAET5C,CACT,CAAE,EAeJ,IAAM2Q,GAAkBC,YAAgB,CAEtCzP,QACAvC,SACAsH,SACA5G,WACAyG,QACAoB,YACA1B,YACA7D,OACA5D,mBACAvB,WAEAmP,QAAS6E,GAAc,MACvB/I,WAAY+I,GAAc,MAC1BrJ,KAAMqJ,GAAc,CAAC,GAErB7F,UAAW6F,GAAc,CAAC,EAAGtT,EAAmB,aAChDG,KAAMmT,GAAc,CAAC,EAAGrT,EAAa,QACrCyN,WAAY4F,IAAc,EAAM1T,EAAoB,cACpD+N,MAAO2F,GAAc,OAAQvT,EAAc,SAC3C6N,WAAY0F,IAAc,EAAMzT,EAAoB,cACpDwK,kBAAmBiJ,IACjB,EACA5S,EACA,qBAEFmN,mBAAoByF,IAClB,EACA9S,EACA,sBAEF8J,iBAAkBgJ,IAChB,EACAxS,EACA,sBAOW4S,GAHK,SAAC7Q,EAAO3B,GAAM,OAChCsS,GA/CF,WAA+C,IAArB3Q,EAAK,uDAAG,CAAC,EAAG3B,EAAM,uCAC1C,OAAIA,EAAOhC,OAASH,EACXoC,OAAOC,OAAO,CAAC,EAAGyB,EAAO3B,EAAOjC,MAElC4D,CACT,CA0CkB8Q,CAAiB9Q,EAAO3B,GAASA,EAAQ,E,mBCzFrD0S,GAAa,SAAC/Q,GAAK,OAAKA,EAAM+F,KAAKL,GAAI,EAWhCsL,GAA0BC,aACrC,CAACF,GAXsB,SAAC/Q,GAAK,OAAKA,EAAM+F,KAAKI,SAAU,EAC/B,SAACnG,GAAK,OAAKA,EAAMyF,SAASI,MAAO,EAGrC,SAAC7F,GAAK,OAAKA,EAAM0H,UAAW,IAQhD,SAACgG,EAASwD,EAAehP,EAAgBwF,GACvC,MAAmB,SAAfA,GAA0BxF,EAGvBM,GACLkL,GACA,SAACL,GAAM,OAAM6D,EAAc7D,GAAQnL,EAAe,IAJ3C,CAAC,CAMZ,IAMWiP,GAAqBF,aAChC,CAACF,GAAYC,KACb,SAACtD,EAAS0D,GAAoB,OAC5B1D,EAAQsC,QAAO,SAAC3C,GAAM,OAAM+D,EAAqB/D,EAAO,GAAC,IAMhDgE,GAAoBJ,aAC/B,CAACE,GAlCiB,SAACnR,GAAK,OAAKA,EAAM+F,KAAKE,IAAK,IAmC7C,SAACyH,EAAS4D,GACR,IAAMC,EAAc,CAAC,EAQrB,OAPA7D,EAAQ1O,SAAQ,SAACqO,GACfiE,EAASjE,GAAQrO,SAAQ,SAACiQ,GACnBsC,EAAYtC,KACfsC,EAAYtC,IAAS,EAEzB,GACF,IACO3Q,OAAOS,KAAKwS,EACrB,IC1BWC,IDgCgCP,aAC3C,CAACE,GAnD6B,SAACnR,GAAK,OAAKA,EAAM+F,KAAKmB,gBAAiB,EAEzC,SAAClH,GAAK,OAAKA,EAAMhC,gBAAgB0H,GAAI,IAkDjE,SAACgI,EAAS+D,EAAsBrC,GAC9B,IAAMsC,EAA0B,CAAC,EAcjC,OAZItC,EAAmB3L,OAAS,GAC9BiK,EAAQ1O,SAAQ,SAACqO,GACfoE,EAAqBpE,GAAQrO,SAAQ,SAAC4Q,GAElCA,IACC8B,EAAwB9B,KAEzB8B,EAAwB9B,IAAqB,EAEjD,GACF,IAEKtR,OAAOS,KAAK2S,EACrB,IClDgC,SAACC,EAAMjU,GACvC,IAAMkU,EArBqB,SAAClU,GAC5B,QAAKA,GAGE,IAAIiG,OAAO,IAAD,OAAKkO,GAAanU,GAAM,KAAK,KAChD,CAgBqBoU,CAAcpU,GAC3BqU,EAAUJ,EAAKK,MAAMJ,GAE3B,OAAOlU,GAASqU,EACZJ,EAAK/N,QAAQgO,EAbS,aAamB,KAbL,SAcpCD,CACN,GAOaE,GAAe,SAACtO,GAC3B,OAAOA,EAAIK,QAAQ,wBAAyB,OAC9C,EAQaqO,GAAoB,SAACN,EAAMO,GACtC,OAAIA,GACK,IAAIvO,OAAOkO,GAAaK,GAAc,MAAMC,KAAKR,EAI5D,ECrDaS,GAA4B,SAACpS,GAAK,OAC7CA,EAAMvD,QAAQkP,wBAAyB,EAC5B0G,GAA0B,SAACrS,GAAK,OAAKA,EAAMhC,gBAAgB2H,IAAK,EAShE2M,GAAe,SAACJ,EAAa1J,GACxC,SAAK0J,IAAgB1J,IAGd,IAAI7E,OAAOkO,GAAarJ,GAAS,MAAM2J,KAAKD,EACrD,EAKMK,GAAa,SAACC,GAAQ,MAAuB,oBAAlBA,EAASnW,IAA2B,EAKxDoW,GAAa,SAAbA,EACXP,EACAvM,GAGI,IAFJ+M,EAAa,uDAAG,WAChBhJ,EAAM,uDAAG,CAAC,EAEJ8I,EAAW7M,EAAK+M,GACtB,IAAKF,EACH,OAAO,EAGT,IAEyC,EAFnCG,EAAgB,GAAG,eAEDH,EAASzJ,UAAQ,IAAzC,2BAA2C,CAAC,IAAjC6J,EAAS,QAClB,GAAIL,GAAWK,GAAY,CAGzB,IAAMC,EAAQP,GAAaM,EAAUxW,KAAKH,KAAMiW,GAC5CW,GACFF,EAAc1K,KAAK,6BACd2K,GAAS,IACZxW,KAAK,6BACAwW,EAAUxW,MAAI,IACjB0W,iBAAkBtB,GAChBoB,EAAUxW,KAAKH,KACfiW,OAKV,KAAO,CAIL,IACW,EADLW,EAAQJ,EAAWP,EAAavM,EAAMiN,EAAU9P,GAAI4G,GAC1D,GAAImJ,EACFF,EAAc1K,KAAK,6BACd2K,GAAS,IACZE,iBAAkBtB,IACI,QAApB,EAAA9H,EAAOkJ,EAAU9P,WAAG,aAApB,EAAsB7G,OAAQ,GAC9BiW,KAIR,CACF,CAAC,+BAED,SAAIS,EAAclP,OAAS,GAAK6O,GAAaE,EAASvW,KAAMiW,MAC1DxI,EAAOgJ,GAAc,6BAChBF,GAAQ,IACXM,iBAAkBtB,GAAmBgB,EAASvW,KAAMiW,GACpDnJ,SAAU4J,KAEL,EAIX,EASaI,GAAkC,SAC7CC,EACAd,GAEA,IAAKc,EACH,MAAO,CAAC,EAEV,IAAMC,EAAe,CAAC,EAEtB,OADAR,GAAWP,EAAac,EAAsB,WAAYC,GACnDA,CACT,EClGMC,GAAgB,SAAClT,GAAK,OAAKA,EAAM4B,IAAI2F,OAAQ,EAKtC4L,GAAalC,aACxB,CAACI,GARgB,SAACrR,GAAK,OAAKA,EAAM4B,IAAI3F,IAAK,EACxB,SAAC+D,GAAK,OAAKA,EAAM4B,IAAIiE,MAAO,EAODqN,KAC9C,SAAClE,EAAQoE,EAASC,EAAWC,GAAU,OACrCtE,EAAOuE,OAAOC,KAAI,SAAC1Q,GAAE,MAAM,CACzBA,KACA7G,KAAMmX,EAAQtQ,GACd+C,OAAQ4N,QAAQJ,EAAUvQ,IAC1ByE,QAASkM,QAAQH,EAAWxQ,IAC7B,GAAE,IAMM4Q,GAAczC,aACzB,CAACI,GAAmB6B,KACpB,SAAClE,EAAQsE,GAAU,MAAM,CACvBK,MAAO3E,EAAOvL,OACd8D,QAASyH,EAAOgB,QAAO,SAAClN,GAAE,OAAKwQ,EAAWxQ,EAAG,IAAEW,OAChD,IAMUmQ,GAAmB3C,aAAe,CAjC3B,SAACjR,GAAK,OAAKA,EAAM+F,KAAKE,IAAK,IAiCe,SAACqL,GAG7D,IAFA,IAAMuC,EAAS,CAAC,EAEhB,MAAqBvV,OAAOkQ,OAAO8C,GAAS,eAAE,CAAzC,IACuB,EADjBwC,EAAM,oBACKA,GAAM,IAA1B,2BAA4B,CAAC,IAAlBC,EAAK,QACdF,EAAOE,GAASF,EAAOE,GAAS,GAAK,CACvC,CAAC,+BACH,CAEA,OAAOF,CACT,ICrCM9C,GAAa,SAAC/Q,GAAK,OAAKA,EAAM+F,KAAKL,GAAI,EAcvCsO,GAAyB,SAAChU,GAAK,OAAKA,EAAMhC,gBAAgBvB,OAAQ,EAMlEwX,GAAyChD,aAC7C,CAAC+C,GAAwB3B,KACzB,SAAC6B,EAAqBC,GACpB,IAAMzK,EAAS,IAAI0K,IACnB,IAAK,IAAM/G,KAAU6G,EACfA,EAAoB7G,IAAWA,KAAU8G,GAC3C,uBACKA,EAAoB9G,GAAQ5G,QAAM,aAClC0N,EAAoB9G,GAAQ3G,UAC/B1H,SAAQ,SAACqO,GAAM,OAAK3D,EAAO2K,IAAIhH,EAAO,IAG5C,OAAO3D,CACT,IAMW4K,GAAqBrD,aAChC,CAACF,GAnCmB,SAAC/Q,GAAK,OAAKA,EAAM4B,IAAI2F,OAAQ,EAmCrBmM,GArCV,SAAC1T,GAAK,OAAKA,EAAM+F,KAAKE,IAAK,IAsC7C,SAACyH,EAAS4F,EAAYiB,EAAUjD,GAAQ,OACtC9O,GAAckL,GAAS,SAACL,GACtB,OAAyB,IAArBkH,EAAShN,WAGT+J,EAASjE,GAAQ5J,SAEX6N,EAASjE,GAAQmH,MAAK,SAAC5S,GAAG,OAAK0R,EAAW1R,EAAI,IAG1D,GAAE,IAMO6S,GAAkBxD,aAC7B,CACEF,GA1DwB,SAAC/Q,GAAK,OAAKA,EAAM+F,KAAKD,QAAS,EA4DvDwO,GACAtD,GA1DgB,SAAChR,GAAK,OAAKA,EAAM+F,KAAK1J,IAAK,EAEnB,SAAC2D,GAAK,OAAKA,EAAMmH,SAASrB,QAAS,EAO/B,SAAC9F,GAAK,OAAKA,EAAM+F,KAAKmB,gBAAiB,EAqDnEmL,GACAD,GACA4B,GACAC,GAnE+B,SAACjU,GAAK,OAAKA,EAAMhC,gBAAgB8H,QAAS,IAsE3E,SACE4H,EACAgH,EACAC,EACAvD,EACAjK,EACAyN,EACAnD,EACAuB,EACA6B,EACAX,EACAY,EACAC,GAAuB,OAEvBvS,GAAckL,GAAS,SAAC5K,GACtB,IAAIkS,EACFD,EAAwBtD,EAAqB3O,IAEzCmS,GACHf,EAAoBpR,KACpBgS,EAAoCI,IAAIpS,GAEvCqS,GAAsC,EAC1C,GAAIN,EAAwB,CAC1B,IAAMO,EAAkB,uBACnBpC,EAAqB6B,EAAuB/R,IAAI2D,QAAM,aACtDuM,EAAqB6B,EAAuB/R,IAAI4D,UAGnDyO,EADmB,oBAAjBhO,EAASrE,GAETA,IAAO+R,EAAuB/R,KAC7BA,EAAGwN,WAAW,GAAD,OAAIuE,EAAuB/R,GAAE,OAG1C2O,EAAqB3O,GAAI4F,SAASmM,EAAuB/R,MACzDsS,EAAmB1M,SAAS5F,EAEnC,CACA,MAAO,CACL4R,EAAiB5R,GACjB6R,EAAgB7R,GAChBsO,EAAqBtO,GACrBiS,EAAwBjS,GACxB8R,EAAazN,EAASrE,IACtBmS,EACAD,EACAG,GACAX,KAAKf,QACT,GAAE,IAMO4B,GAAoBpE,aAC/B,CAACE,GAAoBsD,KACrB,SAAC/G,EAAS4H,GACR,OAAO5H,EAAQsC,QAAO,SAAClN,GAAE,OAAMwS,EAAaxS,EAAG,GACjD,IAMWyS,GAAqBtE,aAChC,CAACoE,GA7HkB,SAACrV,GAAK,OAAKA,EAAM+F,KAAKG,KAAM,EAF7B,SAAClG,GAAK,OAAKA,EAAMkG,MAAMR,GAAI,EACtB,SAAC1F,GAAK,OAAKA,EAAMkG,MAAMzJ,OAAQ,IA+HtD,SAACiR,EAAS8H,EAAWC,EAAUC,GAC7B,IAAKA,EACH,MAAO,GAET,IAC4B,EADtBC,EAAkB,CAAC,EAAE,eACNjI,GAAO,IAA5B,2BAA8B,CAAC,IAApBL,EAAM,QACfsI,EAAgBH,EAAUnI,KAAW,CACvC,CAAC,+BACD,OAAOoI,EAASzF,QAAO,SAAC4F,GAAO,OAAKD,EAAgBC,EAAQ,GAC9D,IAMWC,GAAkB5E,aAC7B,CAnJiB,SAACjR,GAAK,OAAKA,EAAMoH,KAAK1B,GAAI,EAmJ9B+O,GAlJQ,SAACzU,GAAK,OAAKA,EAAMoH,KAAKC,OAAQ,EAC9B,SAACrH,GAAK,OAAKA,EAAMoH,KAAKE,OAAQ,IAkJnD,SAACwO,EAASR,EAAcS,EAAaC,GAAW,OAC9CxT,GAAcsT,GAAS,SAACG,GACtB,IAAMtO,EAASoO,EAAYE,GACrBzN,EAASwN,EAAYC,GAC3B,OAAOxC,QAAQ6B,EAAa3N,IAAW2N,EAAa9M,GACtD,GAAE,ICpKS0N,GAHM,SAACC,EAAcnS,GAAQ,OAC1ChC,GAAiBmU,IAAiBnS,CAAS,E,qBCEvCoS,GAAa,SAACpW,GAAK,OAAKA,EAAMoH,KAAK1B,GAAI,EACvC2Q,GAAiB,SAACrW,GAAK,OAAKA,EAAMoH,KAAKC,OAAQ,EAC/CiP,GAAiB,SAACtW,GAAK,OAAKA,EAAMoH,KAAKE,OAAQ,EAC/CiP,GAA0B,SAACvW,GAAK,OAAKA,EAAM+F,KAAKmB,gBAAiB,EAsB1DsP,GAAqBvF,aAChC,CA3BiB,SAACjR,GAAK,OAAKA,EAAM+F,KAAKL,GAAI,EA6BzC0Q,GACA3B,GACA4B,GACAC,GACAlE,GACAmE,GA7B2B,SAACvW,GAAK,OAAKA,EAAMhC,gBAAgBvB,OAAQ,IAgCtE,SACEiR,EACAoI,EACAR,EACAS,EACAC,EACAnB,EACApD,EACAC,GAEA,IAAM+E,EAAkB,CACtBX,QAAS,GACTzO,QAAS,CAAC,EACVC,QAAS,CAAC,GASNoP,EAAiB,SAAjBA,EAAkB3S,GACtB+R,EAAQ9W,SAAQ,SAACiX,GACf,IAAMtO,EAAS5D,EAAKA,EAAKN,OAAS,GAElC,GAAIsS,EAAYE,KAAYtO,EAA5B,CAGA,IAAMa,EAASwN,EAAYC,GAE3B,GAAKvE,EAAwBlJ,GAA7B,CAKA,IAAMmO,EACuB,OAA3B9B,IACCpD,EAAqB9J,GAAQe,SAASmM,EAAuB/R,MAC7D2O,EAAqBjJ,GAAQE,SAASmM,EAAuB/R,IAE5DwS,EAAa9M,GAEfkO,EAAe3S,EAAK6S,OAAOpO,IAClBzE,EAAKN,OAAS,IAAMkT,GApEb,SAAChP,EAAQa,EAAO,GAAoC,IAAjCsN,EAAO,EAAPA,QAASzO,EAAO,EAAPA,QAASC,EAAO,EAAPA,QACvDxE,EAAK,CAAC6E,EAAQa,GAAQzF,KAAK,KAC5B+S,EAAQpN,SAAS5F,KACpBgT,EAAQ7N,KAAKnF,GACbuE,EAAQvE,GAAM6E,EACdL,EAAQxE,GAAM0F,EAElB,CA+DUqO,CAAW9S,EAAK,GAAIyE,EAAQiO,EAb9B,CALA,CAoBF,GACF,EAcA,OAXI/I,EAAQ8G,MAAK,SAACnH,GAAM,OAAKiI,EAAajI,EAAO,KAI/CK,EAAQ1O,SAAQ,SAACqO,GACViI,EAAajI,IAChBqJ,EAAe,CAACrJ,GAEpB,IAGKoJ,CACT,IAOWK,GAAkB7F,aAC7B,CACEmF,GACAP,GACAQ,GACAC,GACAE,KAEF,SAACV,EAASiB,EAAchB,EAAaC,EAAaS,GAAe,OAC/DX,EACG9F,QAAO,SAAClN,GAAE,OAAMiU,EAAajU,EAAG,IAChC8T,OAAOH,EAAgBX,SACvBtC,KAAI,SAAC1Q,GAAE,MAAM,CACZA,KACA6E,OAAQoO,EAAYjT,IAAO2T,EAAgBpP,QAAQvE,GACnD0F,OAAQwN,EAAYlT,IAAO2T,EAAgBnP,QAAQxE,GACpD,GAAE,IAOIkU,GAA0B/F,aACrC,CAAC6F,GAAiBP,GAAyBnE,KAC3C,SAAC6E,EAAcxF,EAAsBoD,GACnC,IAAMqC,EAAY,CAAC,EAgBnB,OAf+B,OAA3BrC,GACFoC,EAAajY,SAAQ,SAACoI,GAAU,IAAD,IAEO,QAAlC,EAACqK,EAAqBrK,EAAKO,eAAO,OAAjC,EAAmCe,SAClCmM,EAAuB/R,KAES,QAAlC,EAAC2O,EAAqBrK,EAAKoB,eAAO,OAAjC,EAAmCE,SAClCmM,EAAuB/R,MAGzBoU,EAAU9P,EAAKtE,IAAMsE,EAEzB,IAGK8P,CACT,ICjJWC,GAAgBlG,aAC3B,CAACoE,GAAmBE,GAND,SAACvV,GAAK,OAAKA,EAAM+F,KAAKG,KAAM,IAO/C,SAACwH,EAAS+H,EAAUD,GAClB,IAAKC,EAAShS,OACZ,MAAO,GAGT,IAC4B,EADtB2T,EAAa,CAAC,EAAE,eACD1J,GAAO,IAA5B,2BAA8B,CAAC,IAApBL,EAAM,QACTnH,EAAQsP,EAAUnI,GACnB+J,EAAWlR,KACdkR,EAAWlR,GAAS,IAEtBkR,EAAWlR,GAAO+B,KAAKoF,EACzB,CAEA,+BACA,OAAOoI,EAASjC,KAAI,SAACoC,GAAO,OAAKwB,EAAWxB,EAAQ,GACtD,IAOWyB,GAAcpG,aACzB,CAACoE,GAAmByB,GAAiBK,GAAe5B,KACpD,SAAC7H,EAAS5F,EAAOsP,EAAY3B,GAC3B,IAAKA,EAAShS,OACZ,MAAO,CAAC,EAIV,IAG4B,EAHtB6T,EAAW,CAAC,EAElB,eACqB5J,GAAO,IAA5B,2BAA8B,CAC5B4J,EADe,SACI,EACrB,CAEA,mCACwB,EADxB,eACmBxP,GAAK,IAAxB,2BAA0B,CAAC,IAAhBV,EAAI,QACbkQ,EAASlQ,EAAKO,QAAQM,KAAKb,EAAKoB,OAClC,CAEA,+BACA,IAAK,IAAIrF,EAAI,EAAGA,EAAIiU,EAAW3T,OAAQN,IAAK,CAAC,IACH,EADE,eACnBiU,EAAWjU,EAAI,IAAE,IAAxC,2BAA0C,CAAC,IACL,EAD3BoU,EAAQ,uBACMH,EAAWjU,IAAE,IAApC,2BAAsC,CAAC,IAA5BqU,EAAQ,QACjBF,EAASC,GAAUtP,KAAKuP,EAC1B,CAAC,+BACH,CAAC,+BACH,CAOA,IAJA,IAAMC,EAAkBC,KAAiBJ,GAGnCK,EAAY,CAAC,EACVC,EAAO,EAAGA,EAAOH,EAAgBhU,OAAQmU,IAAQ,CAAC,IACf,EADc,eACnCH,EAAgBG,IAAK,IAA1C,2BAA4C,CAC1CD,EADe,SACKC,CACtB,CAAC,+BACH,CAEA,OAAOD,CACT,IChEIE,GAAc,SAAC7X,GAAK,OAAKA,EAAM+F,KAAK9J,IAAK,EACzC6b,GAAkB,SAAC9X,GAAK,OAAKA,EAAM+F,KAAKC,QAAS,EACjD+R,GAAsB,SAAC/X,GAAK,OAAKA,EAAM+F,KAAKD,QAAS,EACrDkS,GAA6B,SAAChY,GAAK,OAAKA,EAAMhC,gBAAgB8H,QAAS,EAEhEyQ,GAA0B,SAACvW,GAAK,OAAKA,EAAM+F,KAAKmB,gBAAiB,EACxE+Q,GAAc,SAACjY,GAAK,OAAKA,EAAM+F,KAAK1J,IAAK,EACzC6b,GAAqB,SAAClY,GAAK,OAAKA,EAAM+F,KAAKe,WAAY,EAOvDqR,GAAsB,SAACnY,GAAK,OAAKA,EAAMmH,SAASrB,QAAS,EASlDsS,GAAgBnH,aAC3B,CAAC,SAACjR,GAAK,OAAKA,EAAMpB,MAAMmJ,KAAK,IAC7B,eAACA,EAAK,uDAAG,GAAE,OACTA,EAAM0B,QAAO,SAACC,EAAQ3D,GAEpB,OADA2D,EAAO3D,EAAKjD,IAAMiD,EACX2D,CACT,GAAG,CAAC,EAAE,IAMG2O,GAAgBpH,aAC3B,CACEE,GA5BmB,SAACnR,GAAK,OAAKA,EAAM+F,KAAKM,OAAQ,EALjC,SAACrG,GAAK,OAAKA,EAAM+F,KAAKE,IAAK,EAO1B,SAACjG,GAAK,OAAKA,EAAM4B,IAAIiE,MAAO,EA8B7C0Q,GA7B6B,SAACvW,GAAK,OAAKA,EAAMhC,gBAAgB6H,MAAO,EA+BrE,SAAC7F,GAAK,OAAKA,EAAMhC,gBAAgB2H,IAAI,IAEvC,SACE+H,EACA4K,EACAhH,EACA+B,EACA5B,EACA8G,EACAvF,GAEA,IAAMwF,EAAyBla,OAAOS,KAAKwZ,GAAuBvI,QAChE,SAACJ,GAAiB,OAAK2I,EAAsB3I,EAAkB,IAE3D6I,EAAgCD,EAAuBE,SAAQ,SAAC5V,GAAE,OACtEkQ,EAAqBlQ,GAAIiG,SAASyK,KAAI,SAACxK,GAAK,OAAKA,EAAMlG,EAAE,GAAC,IAG5D,OAAON,GAAckL,GAAS,SAACL,GAC7B,GAAIA,IAAWiL,EACb,OAAO,EAET,IAAMK,EAAerH,EAASjE,GAAQmH,MAAK,SAAC5S,GAAG,OAAKyR,EAAUzR,EAAI,IAC5DgX,EAAwBJ,EAAuB9P,SAAS2E,GACxDwL,EACJJ,EAA8B/P,SAAS2E,IACtCoE,EAAqBpE,IACpBoE,EAAqBpE,GAAQmH,MAC3B,SAACxW,GAAe,OAAKua,EAAsBva,EAAgB,IAEjE,OACEyV,QAAQkF,IACRlF,QAAQoF,IACRpF,QAAQmF,EAEZ,GACF,IAMWE,GAAkB7H,aAC7B,CAACE,GAvEoB,SAACnR,GAAK,OAAKA,EAAM+F,KAAKK,OAAQ,EAuEdqO,KACrC,SAAC/G,EAASqL,EAAazD,GAAY,OACjC9S,GACEkL,GACA,SAACL,GAAM,OAAKA,IAAW0L,IAAgBzD,EAAajI,EAAO,GAC5D,IAMQ2L,GAAe/H,aAC1B,CAxFoB,SAACjR,GAAK,OAAKA,EAAM+K,UAAW,EAwFhC8M,GAAaC,KAC7B,SAAC/M,EAAYkO,EAAUC,GAAY,OAAMnO,EAAakO,EAAWC,CAAY,IAMlEC,GAAclI,aACzB,CACEE,GACA6H,GACAf,GACAC,GACAzD,GACAuD,GACAD,GACAzD,GACA6D,GACA5B,KAEF,SACE7I,EACA0L,EACAjS,EACAkS,EACA/D,EACAgE,EACA5E,EACAC,EACAC,EACAnD,GAAoB,OAEpB/D,EACG6F,MAAK,SAACgG,EAAGC,GACR,OAAIJ,EAAUG,GAAKH,EAAUI,IACnB,EAENJ,EAAUG,GAAKH,EAAUI,GACpB,EAEF,CACT,IACChG,KAAI,SAAC1Q,GAAE,MAAM,CACZA,KACA7G,KAAMmd,EAAUtW,GAChBzG,KAAM8K,EAASrE,GACfvB,KAAM2U,GAAamD,EAAgBvW,GAAKqE,EAASrE,IACjDoE,iBAAkBuK,EAAqB3O,GACvCgD,SAAUwP,EAAaxS,GACvBiS,wBAAyBtB,QAAQ6F,EAAwBxW,IACzD2W,aAAchG,QAAQiB,EAAiB5R,IACvC4W,YAAa/E,EAAgB7R,GAC7B6W,aAAclG,QAAQmB,EAAazN,EAASrE,KAC7C,GAAE,IAQI8W,GAAoB3I,aAC/B,CACEE,GACA6H,GACAf,GACAC,GACAzD,GACAuD,GACAD,GACAzD,GACA6D,GACA5B,KAEF,SACE7I,EACA0L,EACAjS,EACAkS,EACA/D,EACAgE,EACA5E,EACAC,EACAC,EACAnD,GAAoB,OAEpB/D,EAAQjE,QAAO,SAACnE,EAAKxC,GAanB,OAZAwC,EAAIxC,GAAM,CACRA,KACA7G,KAAMmd,EAAUtW,GAChBzG,KAAM8K,EAASrE,GACfvB,KAAM2U,GAAamD,EAAgBvW,GAAKqE,EAASrE,IACjDoE,iBAAkBuK,EAAqB3O,GACvCgD,SAAUwP,EAAaxS,GACvBiS,wBAAyBtB,QAAQ6F,EAAwBxW,IACzD2W,aAAchG,QAAQiB,EAAiB5R,IACvC4W,YAAajG,QAAQkB,EAAgB7R,IACrC6W,aAAclG,QAAQmB,EAAazN,EAASrE,MAEvCwC,CACT,GAAG,CAAC,EAAE,IAMG+M,GAA0BpB,aACrC,CAAC,SAACjR,GAAK,OAAKA,EAAMhC,gBAAgB2H,IAAI,EAAEiU,KACxC,SAAC5G,EAAsBjL,GACrB,IAAKiL,EACH,MAAO,CAAC,EAEV,IAAK,IAAMpD,KAAqBoD,EAAsB,CACpDA,EAAqBpD,GAAmBxT,KAAI,gBACvC2L,EAAM6H,IACT,IACkE,EADlE,eACkBoD,EAAqBpD,GAAmB7G,UAAQ,IAApE,2BAAsE,CAAC,IAA5DC,EAAK,QACdA,EAAM5M,KAAI,gBAAQ2L,EAAMiB,EAAMlG,IAChC,CAAC,+BACH,CACA,OAAOkQ,CACT,IAMW6G,GAAkB5I,aAAe,CAACkI,KAAc,SAACpR,GAAK,OACjEA,EAAM0B,QAAO,SAAUnE,EAAKwU,GAC1B,IAAMlX,EAAMkX,EAAKzd,KAKjB,OAJKiJ,EAAIL,eAAerC,KACtB0C,EAAI1C,GAAO,IAEb0C,EAAI1C,GAAKqF,KAAK6R,GACPxU,CACT,GAAG,CAAC,EAAE,IAOKyU,GAAmB9I,aAC9B,CAACE,GAAoB6H,KACrB,SAACtL,EAAS0L,GACR,IAAMY,EAAgB,CAAC,EACjBC,EAAMC,aAAOnQ,SAASoQ,MACzBC,OAAO,OACPC,KAAK,QAAS,uBAYjB,OAXAJ,EACGK,UAAU,QACVle,KAAKsR,GACL6M,QACAH,OAAO,QACPzI,MAAK,SAACtE,GAAM,OAAK+L,EAAU/L,EAAO,IAClCmN,MAAK,SAAUnN,GACd,IAAMoN,EAAQC,KAAKC,QAAUD,KAAKC,UAAUF,MAAQ,EACpDT,EAAc3M,GAAUoN,CAC1B,IACFR,EAAIW,SACGZ,CACT,IAgCWa,GAAc5J,aACzB,CAACE,GAAoB4I,GAvRD,SAAC/Z,GAAK,OAAKA,EAAM6K,UAAW,EAuRMoN,KACtD,SAACvK,EAASsM,EAAenP,EAAY1D,GACnC,OAAO3E,GAAckL,GAAS,SAACL,GAC7B,IAAMyN,EAAWjQ,EAAa,GAAK,GAC7BkQ,EA7Bc,SAACC,EAAY7T,GACrC,GAAI6T,EACF,OAAQ7T,GACN,IAAK,kBACH,MAAO,CAAE8T,EAAG,GAAIC,EAAG,IACrB,IAAK,OACH,MAAO,CAAED,EAAG,GAAIC,EAAG,IACrB,QACE,MAAO,CAAED,EAAG,GAAIC,EAAG,IAGzB,OAAQ/T,GACN,IAAK,kBACH,MAAO,CAAE8T,EAAG,GAAIC,EAAG,IACrB,IAAK,OACH,MAAO,CAAED,EAAG,GAAIC,EAAG,IACrB,QACE,MAAO,CAAED,EAAG,GAAIC,EAAG,IAEzB,CAUsBC,CAAWtQ,EAAY1D,EAASkG,IAC1C+N,EAAYvQ,EAAamP,EAAc3M,GAAU,EAEjD7B,EAAasP,EAAWM,GADdvQ,EAAa,EAAI,GAEjC,MAAO,CACLwQ,SAAUxQ,EACV4P,MAAOjP,EAAyB,EAAZuP,EAAQE,EAC5BK,OAAQR,EAAuB,EAAZC,EAAQG,EAC3BK,YAAa/P,EAAa4P,GAAa,EAAI,EAC3CI,YAAahQ,EAAa,EAC1BsP,WAEJ,GACF,IAOWW,GAAkBxK,aAC7B,CACEoE,GACA2D,GACAf,GACAC,GACAJ,GACA+C,GA3TiB,SAAC7a,GAAK,OAAKA,EAAM+F,KAAKG,KAAM,EA6T7CmR,KAEF,SACE3J,EACA0L,EACAjS,EACAkS,EACAH,EACAwC,EACAlG,EACAmG,GAAQ,OAERjO,EAAQ8F,KAAI,SAAC1Q,GAAE,qBACbA,KACA7G,KAAMmd,EAAUtW,GAChBkD,SAAUkT,EAAapW,GACvBvB,KAAM2U,GAAamD,EAAgBvW,GAAKqE,EAASrE,IACjDzG,KAAM8K,EAASrE,GACfoD,MAAOsP,EAAU1S,GACjB8U,KAAM+D,EAAS7Y,IACZ4Y,EAAS5Y,GAAG,GACd,IAOM8Y,GAA0B3K,aACrC,CACEmH,GACAP,GApVe,SAAC7X,GAAK,OAAKA,EAAMoH,KAAK1B,GAAI,EAsVzCuS,GArVmB,SAACjY,GAAK,OAAKA,EAAMoH,KAAKC,OAAQ,EAC9B,SAACrH,GAAK,OAAKA,EAAMoH,KAAKE,OAAQ,IAwVnD,SAACS,EAAOkR,EAAUnD,EAAS3O,EAAU4O,EAAaC,GAChD,IAC4B,EADtB6F,EAAY,CAAC,EAAE,eACA/F,GAAO,IAA5B,2BAA8B,CAAC,IAApBG,EAAM,QACTtO,EAASoO,EAAYE,GACrBzN,EAASwN,EAAYC,GACF,eAArB9O,EAASQ,IAAiD,SAArBR,EAASqB,KAC3CqT,EAAUrT,KACbqT,EAAUrT,GAAU,IAEtBqT,EAAUrT,GAAQP,KAAKgR,EAAStR,IAEpC,CAAC,+BACD,OAAOkU,CACT,IAMWC,GAA+C7K,aAC1D,CACE,SAACjR,GAAK,aAA2C,QAA3C,EAAKA,EAAMvD,QAAQkP,gCAAwB,aAAtC,EAAwC7I,EAAE,EACrDsV,GACA/F,KAEF,SAAC0J,EAA0BC,EAAYhJ,GACrC,IAAM6B,EAAyBkH,EAC3B/I,EAAqB+I,GACrB,KAQJ,OAPgBlH,EAAsB,uBAC9BA,EAAuBpO,QAAM,aAAKoO,EAAuBnO,UAC7D,IACmB+C,QAAO,SAACC,EAAQ2D,GAErC,OADA3D,EAAO2D,GAAU2O,EAAW3O,GACrB3D,CACT,GAAG,CAAC,EAEN,ICzZIuS,GAAiB,SAACjc,GAAK,OAAKA,EAAM+F,KAAKK,OAAQ,EAI/C8V,GAAY,SAAC3C,EAAGC,GAAC,OAAMD,EAAEtd,MAAQsd,GAAG4C,cAAc3C,EAAEvd,MAAQud,EAAG,EAKxD4C,GAAwBnL,aACnC,CAACgL,KACD,SAACrP,GAAW,OAAK6G,QAAQ7G,EAAY,IAM1ByP,GAAyBpL,aACpC,CACEgL,GACAjD,GACA,SAAChZ,GAAK,OAAKA,EAAM+F,KAAK1J,IAAI,EAC1B,SAAC2D,GAAK,OAAKA,EAAM+F,KAAKE,IAAI,EAC1B,SAACjG,GAAK,OAAKA,EAAM4B,IAAI3F,IAAI,EACzB,SAAC+D,GAAK,OAAKA,EAAMyF,QAAQ,EACzB,SAACzF,GAAK,OAAKA,EAAM+F,KAAKS,QAAQ,EAC9B,SAACxG,GAAK,OAAKA,EAAM+F,KAAKU,MAAM,EAC5B,SAACzG,GAAK,OAAKA,EAAM+F,KAAKW,OAAO,EAC7B,SAAC1G,GAAK,OAAKA,EAAM+F,KAAKQ,IAAI,EAC1B,SAACvG,GAAK,OAAKA,EAAM+F,KAAKhE,UAAU,EAChC,SAAC/B,GAAK,OAAKA,EAAM+F,KAAKY,IAAI,EAC1B,SAAC3G,GAAK,OAAKA,EAAM+F,KAAKa,KAAK,EAC3B,SAAC5G,GAAK,OAAKA,EAAM+F,KAAKc,YAAY,EAClC,SAAC7G,GAAK,OAAKA,EAAM+F,KAAKe,WAAW,EACjC,SAAC9G,GAAK,OAAKA,EAAM+F,KAAKgB,YAAY,EAClC,SAAC/G,GAAK,OAAKA,EAAM+F,KAAKiB,eAAe,EACrC,SAAChH,GAAK,OAAKA,EAAM+F,KAAKkB,UAAU,IAElC,SACE6B,EACAsQ,EACAjS,EACAmK,EACAgL,EACA7W,EACA8W,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAKpU,GAA2C,IAAjCxK,OAAOS,KAAKoI,GAAU1D,QAIrCqZ,EAAiBhU,IACfxK,OAAO6e,QAAQL,EAAiBhU,IAAS9J,SAAQ,YAAmB,IAAD,oBAAhB4D,EAAG,KAAElF,EAAK,KACtC,kBAAVA,IACTof,EAAiBhU,GAAQlG,GAAOwa,KAAKC,MAAc,IAAR3f,GAAe,IAE9D,IAEe,CACfoF,GAAIgG,EACJ7M,KAAMmd,EAAUtQ,GAChBzM,KAAM8K,EAAS2B,GACf7C,KAAM,aAAIqL,EAASxI,IAChB0K,KAAI,SAACO,GAAK,OAAKuI,EAASvI,EAAM,IAC9BR,KAAK2I,IACRzW,SAAUA,EAASxJ,KAAKwJ,EAASI,QACjC9D,WAAY4a,EAAe7T,GAC3B7B,WAAYiW,EAAepU,GAC3BvC,KAAMmW,EAAU5T,GAChBtC,SAAU+V,EAAczT,GACxBnC,KAAMiW,EAAS9T,GACflC,MAAOiW,EAAU/T,GACjBjC,aAAciW,EAAiBhU,GAC/BhC,YAAaiW,EAAiBjU,GAC9B/B,aAAciW,EAAkBlU,GAChC9B,gBAAiBiW,EAAoBnU,GACrCrC,OAAQ+V,EAAW1T,GACnBpC,QAAS+V,EAAY3T,KA7Bd,IAiCX,ICpEWwU,GAA8BrM,aACzC,CACEwK,GACA3E,GAb0B,SAAC9W,GAAK,OAAKA,EAAMgL,kBAAmB,EACzC,SAAChL,GAAK,eAAKyT,QAAmB,QAAZ,EAACzT,EAAMpB,aAAK,OAAO,QAAP,EAAX,EAAamJ,aAAK,WAAP,EAAX,EAAoBtE,OAAQ,EAJ7C,SAACzD,GAAK,OAAKA,EAAMmB,MAAMC,WAAY,IAqB5D,SAAC2G,EAAOD,EAAOkD,EAAoBuS,EAAeC,GAAe,OAC/DzV,EAAMtE,OAAS,IAAMqE,EAAMrE,O9BWI,M8BV9BuH,IACAuS,GACDC,CAAe,IAONC,GAAgBxM,aAC3B,CACEwK,GACA3E,GACAvB,GACA+H,KAEF,SAACvV,EAAOD,EAAOoB,EAAQwU,GACrB,OAAIA,EACK,KAGF,CAAE3V,QAAOD,QAAOoB,SACzB,IAMWyU,GAAkB,SAAClhB,EAAQ,GAAD,IAAIoE,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAM,OACrDrE,EAAUoE,EAAOC,CAAO,EAMb8c,GAAe3M,aAC1B,CA1DwB,SAACjR,GAAK,OAAKA,EAAMvD,QAAQ8O,OAAQ,EA0DrC6Q,GAzDC,SAACpc,GAAK,OAAKA,EAAMvD,QAAQ8J,IAAK,EAG3B,SAACvG,GAAK,OAAKA,EAAM4K,SAAU,IAuDnD,SAACiT,EAAgBC,EAAoBC,EAAoBnT,GACvD,IAAQoT,EAA6BpT,EAA7BoT,KAAMC,EAAuBrT,EAAvBqT,IAAKxD,EAAkB7P,EAAlB6P,MAAOa,EAAW1Q,EAAX0Q,OAC1B,IAAKb,IAAUa,EACb,MAAO,CAAC,EAIV,IAAM4C,EAAqBP,GAAgBE,EAAgB9c,IACrDod,EAAyBR,GAC7BG,EACAld,IAEIwd,EAAyBT,GAC7BI,EACA9c,IAUF,MAAO,CACL+c,OACAC,MACAI,WAAY5D,EACZ6D,YAAahD,EACbA,SACAb,MAXAA,EACAyD,EACAC,EACAC,EASAG,c9B7D4B,I8B8D5Bxd,aAAcmd,EACdtd,iBAAkBud,EAClBld,iBAAkBmd,EAEtB,IAMWI,GAAevN,aAAe,CAAC,SAACjR,GAAK,OAAKA,EAAM1C,IAAI,IAAG,SAACA,GAAI,uBACpEA,EAAI,I,8EClHMmhB,I,YAAAA,GC+DA,SAAwB/N,EAAcgO,GACnD,IAAMC,EACJra,OAAOsa,sCAAwCC,IAC3CC,EAAQC,YACZC,GACAtO,EACAiO,EAAiBM,YAAgBC,OAcnC,MATiB,SAAbR,GACFI,EAAM1e,SAASF,GAAeud,GAAcqB,EAAMrS,cAhEnB,SAACqS,GAClC,IAAMK,EAAaC,KAAM,kBAAM3B,GAAcqB,EAAMrS,WAAW,IAC9DqS,EAAMO,UACJF,GAAW,SAACG,GACVR,EAAM1e,SAASF,GAAeof,GAChC,IAEJ,CA4DEC,CAAoBT,GACpBA,EAAMO,WAAU,YAvDc,SAACrf,GAE/B,MAMIA,EAAMvD,QADL+iB,GAJQ,EAAXpU,YACa,EAAbC,cACa,EAAbC,cACwB,EAAxBK,yBACoB,mBAEtB3G,GAAU,CACRe,KAAM,CACJD,SAAUT,GAAgBrF,EAAM+F,KAAKD,WAEvCqB,SAAU,CACRrB,SAAU9F,EAAMmH,SAASrB,UAE3BL,SAAU,CACRI,OAAQ7F,EAAMyF,SAASI,QAEzBK,MAAO,CACLzJ,QAASuD,EAAMkG,MAAMzJ,SAEvBmF,IAAK,CACH2F,QAASvH,EAAM4B,IAAI2F,SAErBsD,WAAY7K,EAAM6K,WAClBpO,QAAS+iB,EACT1U,MAAO9K,EAAM8K,MACbC,WAAY/K,EAAM+K,WAClB5J,MAAOnB,EAAMmB,OAEjB,CAyBIse,CAAwBX,EAAMrS,WAChC,IAEOqS,CACT,E,4BC9EaY,GAAiB,SAACC,EAAOC,GACpC,MAAwBC,wBAASC,GAAU,oBAApC1jB,EAAI,KAAE2jB,EAAO,KACpB,EAKIC,aAASL,EAAOC,GAJlBK,EAAe,EAAfA,gBACMC,EAAS,EAAf9jB,KACA2I,EAAK,EAALA,MACAzF,EAAO,EAAPA,QASF,OANA6gB,qBAAU,gBACUL,IAAdI,GACFH,EAAQG,EAEZ,GAAG,CAACA,IAEG,CAAED,kBAAiB7jB,OAAM2I,QAAOzF,UACzC,E,gFCbA,GAAqCgF,OAAO0F,SAApCoW,GAAI,GAAJA,KAAMC,GAAQ,GAARA,SAAUC,GAAQ,GAARA,SAClBC,GAAoBjd,GAAe+c,GAAU,CACjD,sBAAuB,KAGnBG,GAAqEJ,GAErEK,GAA0B,WAAbH,GAAwB,OAAS,MAE9CI,GAAS,IAAIC,KAAc,CAC/BC,IAAI,GAAD,OAAKH,GAAU,aAAKD,IAAM,OAAGD,GAAiB,WACjDX,QAAS,CACPiB,WAAW,KAITC,GAAWC,aAAe,CAE9BH,IAAI,GAAD,OAAKL,GAAiB,WACzBS,aAGIC,GAAYC,cAChB,YAAgB,IAAbvB,EAAK,EAALA,MACKwB,EAAaC,aAAkBzB,GAErC,MACsB,wBAApBwB,EAAWE,MACc,iBAAzBF,EAAWG,SAEf,GACAZ,GACAI,IAGWS,GAAS,IAAIC,KAAa,CACrCC,mBAAmB,EACnBC,KAAMT,GACNU,MAAO,IAAIC,KACXC,eAAgB,CACdlC,MAAO,CACLmC,YAAa,OAEfC,OAAQ,CACND,YAAa,U,kBCnDNE,GAAkB,SAAH,GAAsB,IAAhBjZ,EAAQ,EAARA,SAChC,OACE,eAACkZ,GAAA,EAAc,CAACV,OAAQA,GAAO,SAC7B,qCAAGxY,KAGT,E,kBCPamZ,GAAWC,aAAG,oJAadC,GAAeD,aAAG,sxBAwClBE,GAAuBF,aAAG,sIAS1BG,GAAeH,aAAG,iI,mBCzDhBI,GANS,SAAH,OAAMC,EAAS,EAATA,UAAS,OAClC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,mKACJ,ECCKwf,I,OAAc,SAAChlB,GAC1B,IAAMilB,EAAMC,mBAIZ,OAHAzC,qBAAU,WACRwC,EAAIE,QAAUnlB,CAChB,IACOilB,EAAIE,OACb,GAOaC,GAAkB,SAACpgB,GAC9B,IAAMigB,EAAMC,mBAgBZ,OAdAzC,qBAAU,WACR,IAAM4C,EAAc,SAACC,GACfL,EAAIE,UAAYF,EAAIE,QAAQI,SAASD,EAAMxa,SAC7C9F,GAEJ,EAIA,OAFAqH,SAASmZ,iBAAiB,QAASH,GAAa,GAEzC,WACLhZ,SAASoZ,oBAAoB,QAASJ,GAAa,EACrD,CACF,GAAG,CAACrgB,EAAUigB,IAEPA,CACT,EC/BMS,GAAqB,CAAC,QAAS,OAAQ,SAAU,OAKjDC,GAAa,SAAH,GAcT,IAEDC,EAfJzd,EAAM,EAANA,OACA0d,EAAS,EAATA,UACAC,EAAQ,EAARA,SACAza,EAAQ,EAARA,SACAyZ,EAAS,EAATA,UAAU,EAAD,EACTiB,iBAAS,MAAG,KAAI,EAChBC,EAAa,EAAbA,cACA5d,EAAQ,EAARA,SACAvE,EAAI,EAAJA,KACAoiB,EAAS,EAATA,UAAU,EAAD,EACTC,yBAAiB,MAAG,QAAO,EAC3BC,EAAO,EAAPA,QACApnB,EAAO,EAAPA,QAEMqnB,EAAOviB,EAEb,EAAgDse,oBAAS,GAAM,oBAAxDkE,EAAgB,KAAEC,EAAmB,KAEtCC,EAAgBb,GAAmB1a,SACvCkb,EAAkBM,eAEhBN,EAAkBO,oBAClB,QAEEC,EAAoB,WACxB9f,OAAOG,aAAa4f,WAAW,yBACjC,EAEAlE,qBAAU,WACRiE,GACF,GAAG,IAEH,IAgBME,EAAaxB,GAAgBsB,GAEnC,OAAO3nB,EACL,gBAAC,GAAO,CAACgnB,UAAWA,EAAU,UAC5B,0BACE,aAAYF,EACZ,YAAWC,EACXhB,UAAW+B,KAAW/B,EAAW,CAC/B,iCAAiC,EACjC,wCAAyC3c,IAE3C,kBAAiB6d,EACjB5d,SAAUA,EACV+d,QAASA,EACTW,aA9Bc,WACqC,OAAnD/f,aAAaC,QAAQ,0BACvB4e,EAAYmB,YAAW,WACrBngB,OAAOG,aAAaW,QAAQ,0BAA0B,GACtD4e,GAAoB,EACtB,GAAG,KAEHA,GAAoB,EAExB,EAsBMU,aApBc,WAClBC,aAAarB,GACbU,GAAoB,EACtB,EAkBMrB,IAAK2B,EAAW,UAEfR,GAAQ,eAACA,EAAI,CAACtB,UAAU,kBACxBmB,GACC,uBACEnB,UAAW+B,KACT,0BACA,CACE,mCAAoCR,GACpC,2BAAD,OAC0BE,IAC3B,SAEDN,OAIN5a,KAED,IACN,EAEM6b,GAAU,SAAH,GAAmD,IAA7C7b,EAAQ,EAARA,SAAS,EAAD,EAAE0a,UAAWoB,OAAS,MAAG,KAAI,EACtD,MAAyB,kBAAdA,EACF,eAAC,IAAMC,SAAQ,UAAE/b,IAGtB,eAAC8b,EAAS,CAACrC,UAAU,2BAA0B,SAAEzZ,GAGvD,EAeAsa,GAAW0B,aAAe,CACxBlf,QAAQ,EACR0d,UAAW,KACXC,SAAU,KACVza,SAAU,KACV2a,cAAe,KACf5d,UAAU,EACVvE,KAAM,KACNoiB,UAAW,KACXE,QAAS,KACTpnB,SAAS,GAGI4mB,ICpIAA,GDoIAA,GExHA2B,GAZE,SAAH,OAAMxC,EAAS,EAATA,UAAS,OAC3B,sBAAKA,UAAWA,EAAWC,QAAQ,cAAa,SAC9C,uBACEvf,EAAE,sDACF+hB,KAAK,OACLC,SAAS,UACTC,OAAO,UACPC,YAAY,OAEV,ECOOC,GAhBM,SAAH,OAAM7C,EAAS,EAATA,UAAS,OAC/B,sBAAKA,UAAWA,EAAWC,QAAQ,cAAa,SAC9C,+BACE,uBAAMvf,EAAE,sCACR,uBAAMA,EAAE,kCACR,uBAAMA,EAAE,gCACR,uBAAMA,EAAE,oCACR,uBAAMA,EAAE,gDACR,uBAAMA,EAAE,gDACR,uBAAMA,EAAE,4CACR,uBAAMA,EAAE,oDACR,uBAAMA,EAAE,qJAEN,ECPOoiB,GANG,SAAH,OAAM9C,EAAS,EAATA,UAAS,OAC5B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,2DACJ,ECGOqiB,GANE,SAAH,OAAM/C,EAAS,EAATA,UAAS,OAC3B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,0JACJ,ECHOsiB,I,OC8GAC,aAdgB,SAACzlB,GAAK,MAAM,CACzC8K,MAAO9K,EAAM8K,MACbrO,QAASuD,EAAMvD,QAChB,IAEiC,SAAC2D,GAAQ,MAAM,CAC/CslB,sBAAuB,SAAChoB,GACtB0C,EAASzD,EAAoBe,GAC/B,EACAioB,cAAe,SAACjoB,GACd0C,EpDgBK,CACL/D,KAAMa,EACN4N,MoDlBqBpN,GACvB,EACD,GAEc+nB,EA7Fc,SAAH,GAKnB,IAJLG,EAAU,EAAVA,WACAF,EAAqB,EAArBA,sBACAC,EAAa,EAAbA,cACA7a,EAAK,EAALA,MAEQuV,EAAa/b,OAAO0F,SAApBqW,SACFE,EAAoBjd,GAAe+c,EAAU,CACjD,sBAAuB,KAGzB,OACE,qCACE,uBAAKmC,UAAU,0BAAyB,UACtC,sBAAIA,UAAU,uCAAsC,UAClD,eAAC,GAAU,CACTe,UAAW,0BACXf,UAAW,yDACX1c,UAAU,EACVvE,KAAMyjB,KAER,eAAC,KAAO,CAACa,OAAK,EAACC,GAAI,CAAEzF,SAAUE,GAAoB,SACjD,eAAC,GAAU,CACTgD,UAAW,qBACXf,UACE,yDAEF1c,UAAU,EACVvE,KAAMgkB,GACN5B,UAAU,gBAGd,eAAC,KAAO,CACNkC,OAAK,EACLC,GAAI,CAAEzF,SAAS,GAAD,OAAKE,EAAiB,wBAAwB,SAE5D,eAAC,GAAU,CACTgD,UAAW,wBACXf,UACE,yDAEF1c,UAAU,EACVvE,KAAMghB,GACNoB,UAAU,6BAIhB,sBAAInB,UAAU,wCAAuC,UACnD,eAAC,GAAU,CACTe,UAAS,oBACG,UAAVzY,EAAoB,OAAS,QAAO,UAEtC0Y,SAAS,SACThB,UACE,0DAEFkB,cAAa,gBAAW5Y,GACxBvJ,KAAM+jB,GACN3B,UAAU,eACVE,QAAS,kBAAM8B,EAAwB,UAAV7a,EAAoB,OAAS,QAAQ,IAEpE,eAAC,GAAU,CACTyY,UAAW,4BACXf,UACE,6DAEF1c,UAAU,EACVvE,KAAM8jB,GACN1B,UAAW,WACXE,QAAS,kBAAM6B,GAAsB,EAAK,EAAC,SAE1CE,GAAc,uBAAMpD,UAAU,iCAM3C,KCrFauD,GAAY9U,aACvB,CAVsB,SAACjR,GAAK,OAAKA,EAAMV,QAAQV,KAAM,EAC5B,SAACoB,GAAK,OAAKA,EAAMV,QAAQmG,QAAS,EACtC,SAACzF,GAAK,OAAKA,EAAMV,QAAQyG,IAAK,IASnD,SAACigB,EAAcC,EAAiBC,GAC9B,OAAOF,GAAgBC,GAAmBC,CAC5C,ICbaC,I,OCKD,SAAH,GAA2D,IAArDC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAY5pB,EAAO,EAAPA,QAAS6pB,EAAO,EAAPA,QAASvd,EAAQ,EAARA,SAC9Cwd,EAAgB,SAACvD,GACC,KAAlBA,EAAMwD,SACRH,GAAW,EAEf,EAOA,OALAlG,qBAAU,WAER,OADA7b,OAAO4e,iBAAiB,UAAWqD,GAC5B,kBAAMjiB,OAAO6e,oBAAoB,UAAWoD,EAAe,CACpE,IAGE,uBACE/D,UAAW+B,KAAW,QAAS,CAC7B,iBAAkB9nB,IAEpBgqB,KAAK,SAAQ,UAEb,sBACE5C,QAASwC,EACT7D,UAAW+B,KAAW,YAAa,CACjC,qBAAsB9nB,MAG1B,sBACE+lB,UAAW+B,KAAW,iBAAkB,CACtC,0BAA2B9nB,IAC1B,SAEH,uBAAK+lB,UAAU,iBAAgB,UAC7B,sBAAKA,UAAU,eAAc,SAAE4D,IAC9Brd,GACCA,GAAY,sBAAKyZ,UAAU,qBAAoB,SAAE8D,WAK7D,GCrCMI,I,OAAS,SAAH,OAAM3d,EAAQ,EAARA,SAAUjD,EAAQ,EAARA,SAAU+d,EAAO,EAAPA,QAAS8C,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAI,OACvD,uBAAMpE,UAAU,eAAc,SAC5B,yBACEA,UAAW+B,KACT,cAAc,gBAAD,OACGoC,GAAI,uBACJC,IAElB9gB,SAAUA,EACV+d,QAASA,EAAQ,SAEhB9a,KAEE,GAGT2d,GAAO3B,aAAe,CACpBjf,UAAU,EACV8gB,KAAM,UACN/C,QAAS,KACT8C,KAAM,WAUOD,ICpCAA,GDoCAA,G,UE+BAG,GA1DK,SAAH,GAA8C,IAazDpM,EAAOa,EAbUwL,EAAM,EAANA,OAAQhc,EAAK,EAALA,MAAOic,EAAS,EAATA,UAAWC,EAAM,EAANA,OACzCC,EAAkB,CACtBC,IAAKC,KACLlN,IAAKmN,MAEDC,EAAWL,GAAUC,EAAgBH,GAGrC7M,EAAMlQ,SAASud,cAAc,mBAC7BC,EAAQtN,EAAIuN,WAAWC,YAAYxN,EAAIyN,WAAU,IACvDH,EAAMI,UAAUtT,IAAI,QAAQ,cAAD,OAAgBvJ,GAAS,0BAIpD,IAAM8c,EAAWC,SAASd,EAAUtM,QAAUoN,SAASd,EAAUzL,QAYjE,GAXIsM,IACFnN,EAAQsM,EAAUtM,MAA4B,EAApBsM,EAAUe,QACpCxM,EAASyL,EAAUzL,OAA6B,EAApByL,EAAUgB,QACtCR,EAAMS,aAAa,UAAU,OAAD,OAASvN,EAAK,YAAIa,KAEhDiM,EAAMD,cAAc,iBAAiBW,gBAAgB,aACrDV,EACGD,cAAc,iBACdU,aAAa,YAAY,aAAD,OpD3BK,GoD2B4B,SAG7C,QAAXlB,EAAkB,CAEpBrM,EAAQ2C,KAAK8K,IAAIzN,EADA,KAEjBa,EAAS8B,KAAK8K,IAAI5M,EAAoBA,EAASb,EAF9B,IAGnB,CACImN,IACFL,EAAMS,aAAa,QAASvN,GAC5B8M,EAAMS,aAAa,SAAU1M,IAG/B,IAAM6M,EAAQpe,SAASqe,cAAc,SAGnCD,EAAME,UAFO,QAAXvB,EAGA,0EAGa,gKAKjBS,EAAMe,QAAQH,GAIdd,EAASE,EAAO,iBADW,QAAXT,EAAmB,CAAEyB,IAAK,iBAAezI,GAIzD7F,EAAIuN,WAAWgB,YAAYjB,EAC7B,ECjEekB,I,OCqDAhD,aAZgB,SAACzlB,GAAK,MAAM,CACzC+mB,UAAW/mB,EAAMpB,MAAM+nB,MAAQ,CAAC,EAChClqB,QAASuD,EAAMvD,QACfqO,MAAO9K,EAAM8K,MACd,IAEiC,SAAC1K,GAAQ,MAAM,CAC/CsoB,SAAU,SAAChrB,GACT0C,EAAS5D,EAAkBkB,GAC7B,EACD,GAEc+nB,EA5CK,SAAH,GAAiD,IAA3CsB,EAAS,EAATA,UAAWjc,EAAK,EAALA,MAAO4d,EAAQ,EAARA,SAAUjsB,EAAO,EAAPA,QACjD,OAAKA,EAAQ0O,UAIX,eAAC,GAAK,CACJkb,WAAY,kBAAMqC,GAAS,EAAM,EACjCtC,MAAM,gCACN3pB,QAASA,EAAQ2O,YAAY,SAE7B,uBAAKoX,UAAU,wBAAuB,UACpC,eAAC,GAAM,CACLqB,QAAS,WACPgD,GAAY,CAAEC,OAAQ,MAAOhc,QAAOic,cACpC2B,GAAS,EACX,EAAE,0BAIJ,eAAC,GAAM,CACL7E,QAAS,WACPgD,GAAY,CAAEC,OAAQ,MAAOhc,QAAOic,cACpC2B,GAAS,EACX,EAAE,+BArBD,IA4BX,K,SChCaC,GAAY1X,aACvB,CAPe,SAACjR,GAAK,OAAKA,EAAMpB,KAAM,EAO3B2W,GANQ,SAACvV,GAAK,OAAKA,EAAMkG,MAAMjK,IAAK,IAO/C,WAAkBwZ,EAAUmT,GAAe,IAAxC7gB,EAAK,EAALA,MAAO4e,EAAI,EAAJA,KACR,IAAK5e,IAAU4e,IAAS5e,EAAMtE,SAAWgS,EAAShS,OAChD,MAAO,GAET,IAIwB,EAJhBgX,EAAkBkM,EAAlBlM,MAAOa,EAAWqL,EAAXrL,OAETuN,EAAS,CAAC,EAAE,eAEC9gB,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QACPG,EAAQH,EAAK+iB,cAAgB/iB,EAAKG,MAExC,GAAIA,EAAO,CACT,IAAM6iB,EAAQF,EAAO3iB,KAAW2iB,EAAO3iB,GAAS,CAAC8iB,KAAWA,MAExDjjB,EAAKmV,EAAInV,EAAKuV,OAASyN,EAAM,KAC/BA,EAAM,GAAKhjB,EAAKmV,EAAInV,EAAKuV,QAGvBvV,EAAKmV,EAAInV,EAAKuV,OAASyN,EAAM,KAC/BA,EAAM,GAAKhjB,EAAKmV,EAAInV,EAAKuV,OAE7B,CACF,CAAC,+BAED,OAAO7F,EAASjC,KAAI,SAAC1Q,EAAIK,GACvB,IAAM8lB,EAAeJ,EAAO/lB,IAAO,CAAC,EAAG,GACjComB,EAAYL,EAAOpT,EAAStS,EAAI,KAAO,CAC3C8lB,EAAa,GACbA,EAAa,IAETE,EAAYN,EAAOpT,EAAStS,EAAI,KAAO,CAC3C8lB,EAAa,GACbA,EAAa,IAETG,GAASF,EAAU,GAAKD,EAAa,IAAM,EAC3CI,GAAOJ,EAAa,GAAKE,EAAU,IAAM,EACzCG,EAAsC,EAA1BlM,KAAKmM,IAAI9O,EAAOa,GAElC,MAAO,CACLxY,KACA7G,KAAM2sB,EAAU9lB,GAChBmY,GAAIqO,EAAY7O,IAAU,EAC1BS,EAAGkO,EACH3O,MAAO6O,EACPhO,OAAQ8B,KAAKmM,IAAIF,EAAMD,EAAO,GAElC,GACF,IClDWI,GAAwBvY,aACnC,CAAC6F,KACD,SAAChP,GACC,IAGwB,EAHlB2hB,EAAc,CAAC,EACfC,EAAc,CAAC,EAAE,eAEJ5hB,GAAK,IAAxB,2BAA0B,CAAC,IAAhBV,EAAI,QACRqiB,EAAYriB,EAAKoB,UACpBihB,EAAYriB,EAAKoB,QAAU,IAG7BihB,EAAYriB,EAAKoB,QAAQP,KAAKb,EAAKO,QAE9B+hB,EAAYtiB,EAAKO,UACpB+hB,EAAYtiB,EAAKO,QAAU,IAG7B+hB,EAAYtiB,EAAKO,QAAQM,KAAKb,EAAKoB,OACrC,CAAC,+BAED,MAAO,CAAEihB,cAAaC,cACxB,IAUIC,GAAkB,SAAlBA,EAAmBtc,EAAQuc,EAAaC,GAW5C,OAVKA,EAAQxc,KACXwc,EAAQxc,IAAU,EAEduc,EAAYvc,IACduc,EAAYvc,GAAQrO,SAAQ,SAACqO,GAAM,OACjCsc,EAAgBtc,EAAQuc,EAAaC,EAAQ,KAK5CA,CACT,EAOaC,GAAiB7Y,aAC5B,CAACuY,GAxDoB,SAACxpB,GAAK,OAAKA,EAAM+F,KAAKK,OAAQ,IAyDnD,WAA+BiH,GAAY,IAAxCoc,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YACd,IAAKrc,EACH,MAAO,CAAC,EAGV,IAAM0c,EAAc,CAAC,EAMrB,OALAJ,GAAgBtc,EAAQoc,EAAaM,GAErCA,EAAY1c,IAAU,EACtBsc,GAAgBtc,EAAQqc,EAAaK,GAE9BA,CACT,I,sCCnDaC,GAdG,SAAC/tB,EAAM+tB,GAAS,IAAEC,EAAM,uDAAG,GAAE,OAC7C3rB,OAAOS,KAAKirB,GAAa,CAAC,GAAGvgB,QAAO,SAACygB,EAASC,GAC5C,IAAMzsB,EAAQssB,EAAUG,GAExB,MAAqB,kBAAVzsB,GAAuC,kBAAVA,EAChC,GAAN,OAAUwsB,EAAO,YAAIjuB,EAAI,aAAKyB,EAAQ,GAAK,OAAK,OAAGysB,GAG/C,GAAN,OAAUD,EAAO,YAAIjuB,EAAI,aAAKkuB,EAAQ,aAAKzsB,EAAQ,IAAIkG,QACrD,MACA,KAEJ,GAAG3H,IAASguB,EAAS,IAAMA,EAAS,GAAI,EChB7BG,GAAQ,CAEnBhuB,KAAM,kjBACNiuB,SACE,kjBAEFvoB,KAAM,gKAENC,WACE,qGACF/D,gBACE,8bAEFssB,OACE,mPACF1jB,MACE,oPAaW2jB,GAVE,SAAH,OAAM/H,EAAS,EAATA,UAAWjhB,EAAI,EAAJA,KAAI,OACjC6oB,GAAM7oB,GACJ,sBACEihB,UAAWwH,GAAU,qBAAsB,CAAEzoB,QAAQihB,GACrDC,QAAQ,YAAW,SAEnB,uBAAMvf,EAAGknB,GAAM7oB,OAEf,IAAK,ECxBLipB,GAAYC,eACfxP,GAAE,SAAC/X,GAAC,OAAKA,EAAE+X,CAAC,IACZC,GAAE,SAAChY,GAAC,OAAKA,EAAEgY,CAAC,IACZwP,MAAMC,MAKHC,GAAc,YAKdC,GAAgB,SAACntB,GAAK,OAAKotB,WAAWptB,GAAOqtB,QAAQ,EAAG,EAUjDC,GAAa,WACxB,IAAQ9hB,EAAWwR,KAAK/P,MAAhBzB,OAERwR,KAAKuQ,GAAG/hB,OAASwR,KAAKuQ,GAAGC,WACtB5Q,UAAU,mBACVle,KAAK8M,GAAQ,SAAChD,GAAK,OAAKA,EAAMpD,EAAE,IAEnC,IAAMqoB,EAAczQ,KAAKuQ,GAAG/hB,OACzBqR,QACAH,OAAO,QACPC,KAAK,QAAS,kBACd+Q,GAAG,YAAa1Q,KAAK2Q,sBACrBD,GAAG,WAAY1Q,KAAK4Q,qBAEvB5Q,KAAKuQ,GAAG/hB,OAAOqiB,OAAO3Q,SAEtBF,KAAKuQ,GAAG/hB,OAASwR,KAAKuQ,GAAG/hB,OAAOsiB,MAAML,GAEtCzQ,KAAKuQ,GAAG/hB,OACLmR,KAAK,KAAK,SAACnX,GAAC,OAAKA,EAAE+X,CAAC,IACpBZ,KAAK,KAAK,SAACnX,GAAC,OAAKA,EAAEgY,CAAC,IACpBb,KAAK,UAAU,SAACnX,GAAC,OAAKA,EAAEoY,MAAM,IAC9BjB,KAAK,SAAS,SAACnX,GAAC,OAAKA,EAAEuX,KAAK,GACjC,EAKagR,GAAiB,WAC5B,MAGI/Q,KAAK/P,MAAK,IAFZC,UAAa7J,oBAAY,MAAG,EAAC,EAC7BmI,EAAM,EAANA,OAGFwR,KAAKuQ,GAAGS,eACLC,WAAW,6BACXC,SAASlR,KAAKmR,UACd1D,MAAM,YAAY,cAAD,OAAgBpnB,EAAY,QAEhD2Z,KAAKuQ,GAAGa,WAAapR,KAAKuQ,GAAGS,eAC1BpR,UAAU,wBACVle,KAAK8M,GAAQ,SAAChD,GAAK,OAAKA,EAAMpD,EAAE,IAEnC,IAAMipB,EAAkBrR,KAAKuQ,GAAGa,WAC7BvR,QACAH,OAAO,MACPC,KAAK,QAAS,uBACdA,KAAK,WAAW,SAACtU,GAAI,6BAAqBA,EAAK9J,KAAI,IAEtD8vB,EACG5D,MAAM,UAAW,GACjBwD,WAAW,qBACXC,SAASlR,KAAKmR,UACd1D,MAAM,UAAW,KAEpBzN,KAAKuQ,GAAGa,WACLP,OACApD,MAAM,UAAW,KACjBwD,WAAW,oBACXC,SAASlR,KAAKmR,UACd1D,MAAM,UAAW,GACjBvN,SAEHF,KAAKuQ,GAAGa,WAAapR,KAAKuQ,GAAGa,WAAWN,MAAMO,GAE9CrR,KAAKuQ,GAAGa,WAAWna,MAAK,SAACzO,GAAC,OAAKA,EAAEjH,IAAI,IAAEoe,KAAK,KAAM,EACpD,EAKM2R,GAAkB,SAACC,GAAS,OAChCA,EACG5R,KAAK,SAAS,SAACtU,GAAI,OAAKA,EAAK0U,MAAQ,CAAC,IACtCJ,KAAK,UAAU,SAACtU,GAAI,OAAKA,EAAKuV,OAAS,CAAC,IACxCjB,KAAK,KAAK,SAACtU,GAAI,OAAMA,EAAK0U,MAAQ,IAAM,CAAC,IACzCJ,KAAK,KAAK,SAACtU,GAAI,OAAMA,EAAKuV,OAAS,IAAM,CAAC,IAC1CjB,KAAK,MAAM,SAACtU,GAEX,MAAkB,SAAdA,EAAK1J,MAAiC,oBAAd0J,EAAK1J,KACxB,EAEF0J,EAAKuV,OAAS,CACvB,GAAG,EAED4Q,GAAsB,SAACD,GAAS,OACpCA,EACG5R,KAAK,QAAS,IACdA,KAAK,SAAU,IACfA,KAAK,KAAK,SAACtU,GAAI,OAAMA,EAAK0U,MAAQ,KAAO,CAAC,IAC1CJ,KAAK,KAAM,EAAG,EAKN8R,GAAY,SAAUC,GACjC,MAYI1R,KAAK/P,MAXPoO,EAAW,EAAXA,YACAgR,EAAW,EAAXA,YACA7kB,EAAgB,EAAhBA,iBACAmnB,EAAU,EAAVA,WACAC,EAAY,EAAZA,aACA9kB,EAAiB,EAAjBA,kBACA+kB,EAAoB,EAApBA,qBACAC,EAAoB,EAApBA,qBACAzkB,EAAK,EAALA,MACA0kB,EAAS,EAATA,UACAhlB,EAAgB,EAAhBA,iBAGIilB,EAAoB,SAACrf,GAAM,OACjB,OAAdof,GAAsBD,EAAqBnf,EAAQ,EAQrD,GANI+e,EAAQ,WACV1R,KAAKuQ,GAAGljB,MAAQ2S,KAAKuQ,GAAG0B,UACrBrS,UAAU,kBACVle,KAAK2L,GAAO,SAAChC,GAAI,OAAKA,EAAKjD,EAAE,KAG7B4X,KAAKuQ,GAAGljB,MAAb,CAIA,IAAM6kB,EAAclS,KAAKuQ,GAAGljB,MACtB8kB,EAAanS,KAAKuQ,GAAGljB,MAAMwS,QAAQH,OAAO,KAC1C0S,EAAYpS,KAAKuQ,GAAGljB,MAAMwjB,OAE1BwB,EAAWrS,KAAKuQ,GAAGljB,MACtByjB,MAAMqB,GACNrB,MAAMsB,GACN9c,QAAO,SAACjK,GAAI,MAAqB,qBAATA,CAAoB,IAE3CqmB,EAAQ,WACVS,EACGxS,KAAK,WAAY,KACjBA,KAAK,QAAS,iBACdA,KAAK,aAAa,SAACtU,GAAI,0BAAkBA,EAAKkV,EAAC,aAAKlV,EAAKmV,EAAC,QAC1Db,KAAK,WAAW,SAACtU,GAAI,OAAKA,EAAKjD,EAAE,IACjCkqB,QACC,6BACA,SAACjnB,GAAI,MAAmB,eAAdA,EAAK1J,IAAqB,IAErC2wB,QAAQ,uBAAuB,SAACjnB,GAAI,MAAmB,SAAdA,EAAK1J,IAAe,IAC7D2wB,QAAQ,uBAAuB,SAACjnB,GAAI,MAAmB,SAAdA,EAAK1J,IAAe,IAC7D+uB,GAAG,QAAS1Q,KAAKuS,iBACjB7B,GAAG,YAAa1Q,KAAKwS,qBACrB9B,GAAG,WAAY1Q,KAAKyS,oBACpB/B,GAAG,QAAS1Q,KAAKwS,qBACjB9B,GAAG,OAAQ1Q,KAAKyS,oBAChB/B,GAAG,UAAW1Q,KAAK0S,mBAEtBP,EACGxS,KAAK,UAAW,GAChBsR,WAAW,cACXC,SAASlR,KAAKmR,UACdxR,KAAK,UAAW,GAEnBwS,EACGzS,OAAO,QACPC,KACC,SACA,SAACtU,GAAI,qDAA6CA,EAAK1J,KAAI,IAG/DwwB,EACGzS,OAAO,QACPC,KAAK,QAAS,sCACd+Q,GAAG,YAAa1Q,KAAK2S,gCACrBC,KAAKpB,IAGRW,EACGzS,OAAO,QACPC,KAAK,QAAS,uBACdA,KAAK,KAAK,SAACtU,GAAI,OAAKwnB,GAAUxnB,EAAKxE,KAAK,IAE3CsrB,EACGzS,OAAO,QACPC,KAAK,QAAS,uBACd1I,MAAK,SAAC5L,GAAI,OAAKA,EAAK9J,IAAI,IACxBoe,KAAK,cAAe,UACpBA,KAAK,KAAM,GACXA,KAAK,MAAM,SAACtU,GAAI,OAAKA,EAAKwV,UAAU,IAEvCuR,EACGnB,WAAW,cACXC,SAASlR,KAAKmR,UACd1D,MAAM,UAAW,GACjBvN,SAGHgS,EAAYjB,WAAW,cAAcxD,MAAM,UAAW,MAEtDzN,KAAKuQ,GAAGljB,MAAQ2S,KAAKuQ,GAAG0B,UAAUrS,UAAU,mBAI5C8R,EACE,QACA,mBACA,aACA,eACA,oBACA,uBACA,cACA,cACA,YACA,yBAGFW,EACGC,QAAQ,yBAAyB,SAACjnB,GAAI,OAAKsmB,EAAWtmB,EAAKjD,GAAG,IAC9DkqB,QAAQ,2BAA2B,SAACjnB,GAAI,OAAKumB,EAAavmB,EAAKjD,GAAG,IAClEkqB,QACC,iCACA,SAACjnB,GAAI,OACHyB,GACA+kB,EAAqBxmB,EAAKjD,KAC1BoC,EAAiBnD,UAAU,IAE9BirB,QACC,gCACA,SAACjnB,GAAI,OAAK2mB,EAAkB3mB,EAAKjD,KAAqB,SAAdiD,EAAK1J,IAAe,IAE7D2wB,QACC,kCACA,SAACjnB,GAAI,OAAK2mB,EAAkB3mB,EAAKjD,KAAqB,eAAdiD,EAAK1J,IAAqB,IAEnE2wB,QACC,+BACA,SAACjnB,GAAI,OAAK2mB,EAAkB3mB,EAAKjD,KAAOupB,EAAWtmB,EAAKjD,GAAG,IAE5DkqB,QACC,iCACA,SAACjnB,GAAI,OAAK2mB,EAAkB3mB,EAAKjD,KAAOwpB,EAAavmB,EAAKjD,GAAG,IAE9DkqB,QACC,wBACA,SAACjnB,GAAI,OAAKgT,IAAgBgR,EAAYhkB,EAAKjD,GAAG,IAIhDspB,EAAQ,qBACVW,EAASC,QACP,wBACA,SAACjnB,GAAI,OAAK0B,IAAqB4kB,EAAWtmB,EAAKjD,GAAG,IAIlDspB,EAAQ,WACVW,EACGpB,WAAW,gBACXC,SAASlR,KAAKmR,UACdxR,KAAK,aAAa,SAACtU,GAAI,0BAAkBA,EAAKkV,EAAC,aAAKlV,EAAKmV,EAAC,QAC1DkQ,GAAG,OAAO,WACT,IAEE2B,EAASxZ,MAAK,SAACgG,EAAGC,GAAC,OAAKD,EAAEiU,MAAQhU,EAAEgU,KAAK,GAEzC,CADA,MAAO3oB,GACP,CAEJ,IAEFgoB,EAAW3S,OAAO,sBAAsBoT,KAAKtB,IAE7CY,EACG1S,OAAO,sBACPyR,WAAW,aACXC,UAAS,SAAC7lB,GAAI,OAAMA,EAAKsV,SAAW,IAAM,GAAG,IAC7CiS,KAAKtB,IACRe,EACG7S,OAAO,uCACP8S,QACC,+CACA,SAACjnB,GAAI,OAAKb,EAAiBnD,YAAcwqB,EAAqBxmB,EAAKjD,GAAG,IAEvE6oB,WAAW,aACXC,UAAS,SAAC7lB,GAAI,OAAMA,EAAKsV,SAAW,IAAM,GAAG,IAC7CiS,KAAKpB,IAGRa,EACG7S,OAAO,wBACPiO,MAAM,oBAAoB,SAACpiB,GAAI,OAAMA,EAAKsV,SAAW,MAAQ,OAAO,IACpE8M,MACC,aACA,SAACpiB,GAAI,MACH,oBAAaA,EAAKyV,WAAU,gBAAQzV,EAAK+U,SAAW,EAAC,wBAC5C/U,EAAK+U,SAAW,GAAE,IAAG,IAIpCiS,EACG7S,OAAO,wBACPvI,MAAK,SAAC5L,GAAI,OAAKA,EAAK9J,IAAI,IACxBksB,MAAM,oBAAoB,SAACpiB,GAAI,OAAMA,EAAKsV,SAAW,QAAU,KAAK,IACpE8M,MAAM,WAAW,SAACpiB,GAAI,OAAMA,EAAKsV,SAAW,EAAI,CAAC,IA/KtD,CAiLF,EAKaoS,GAAY,SAAUrB,GACjC,MACE1R,KAAK/P,MADC7C,EAAK,EAALA,MAAOiR,EAAW,EAAXA,YAAagR,EAAW,EAAXA,YAAa0C,EAAS,EAATA,UAAWiB,EAAoB,EAApBA,qBAG9CC,EAAoB,SAAC1X,GAAM,OACjB,OAAdwW,GAAsBiB,EAAqBzX,EAAQ,EAQrD,GANImW,EAAQ,WACV1R,KAAKuQ,GAAGnjB,MAAQ4S,KAAKuQ,GAAG2C,UACrBtT,UAAU,kBACVle,KAAK0L,GAAO,SAACV,GAAI,OAAKA,EAAKtE,EAAE,KAG7B4X,KAAKuQ,GAAGnjB,MAAb,CAIA,IAAM+lB,EAAcnT,KAAKuQ,GAAGnjB,MACtBgmB,EAAapT,KAAKuQ,GAAGnjB,MAAMyS,QAAQH,OAAO,KAC1C2T,EAAYrT,KAAKuQ,GAAGnjB,MAAMyjB,OAC1ByC,EAAWtT,KAAKuQ,GAAGnjB,MAAM0jB,MAAMsC,GAAYtC,MAAMuC,GAEnD3B,EAAQ,QAAS,YAAa,0BAChC0B,EAAW1T,OAAO,QAClB4T,EACG9T,OAAO,QACPG,KAAK,cAAc,SAACjT,GAAI,MACE,eAAzBA,EAAK6mB,WAAW5xB,KACZsxB,EAAkBvmB,EAAKtE,IAAG,6EAG1B6qB,EAAkBvmB,EAAKtE,IAAG,4DAEA,IAGlCgrB,EACGzT,KAAK,WAAW,SAACjT,GAAI,OAAKA,EAAKtE,EAAE,IACjCuX,KAAK,QAAS,iBAEjByT,EACGzT,KAAK,UAAW,GAChBsR,WAAW,cACXC,SAASlR,KAAKmR,UACdxR,KAAK,UAAW,GAEnB0T,EACGpC,WAAW,cACXC,SAASlR,KAAKmR,UACd1D,MAAM,UAAW,GACjBvN,SAGHiT,EAAYlC,WAAW,cAAcxD,MAAM,UAAW,MAEtD6F,EACG9T,OAAO,QACPyR,WAAW,gBACXC,SAASlR,KAAKmR,UACdqC,UAAU,KAAK,SAAU9mB,GAExB,IAAIyb,EAAUzb,EAAK+mB,QAAyB3D,GAAUpjB,EAAK+mB,QAjX7BvqB,QAAQgnB,GAAaC,IAkX7CuD,EAAWlU,aAAOQ,MAAML,KAAK,MAAQwI,EAC3C,OAAOwL,aAAgBD,EAAUvL,EACnC,IAEFnI,KAAKuQ,GAAGnjB,MAAQ4S,KAAKuQ,GAAG2C,UAAUtT,UAAU,mBAI5C8R,EACE,QACA,cACA,cACA,YACA,yBAGF4B,EACGhB,QACC,6BACA,SAAC5lB,GAAI,MACsB,eAAzBA,EAAK6mB,WAAW5xB,OAA0BsxB,EAAkBvmB,EAAKtE,GAAG,IAEvEkqB,QACC,mCACA,SAAC5lB,GAAI,MACsB,eAAzBA,EAAK6mB,WAAW5xB,MAAyBsxB,EAAkBvmB,EAAKtE,GAAG,IAEtEkqB,QAAQ,iCAAiC,SAAC5lB,GAAI,OAC7CumB,EAAkBvmB,EAAKtE,GAAG,IAE3BkqB,QACC,wBACA,SAAC5lB,GAAI,OACHA,GACA2R,KACEgR,EAAY3iB,EAAKO,UAAYoiB,EAAY3iB,EAAKoB,QAAQ,GAlFhE,CAqFF,E,oBChaa8lB,GAAU,SAAH,GAMb,IALL7K,EAAS,EAATA,UACA8K,EAAO,EAAPA,QACAC,EAAa,EAAbA,cACAC,EAAS,EAATA,UAAU,EAAD,EACTC,sBAAc,OAAO,EAEfpxB,EAAOqxB,eACVvD,GAAG,QAAQ,SAACpI,GACX,IAAM4L,EAAY5L,EAAM4L,UAGpBC,GAAmBD,KAIvB1U,aAAOqU,EAAQ1L,SAASxI,KAAK,YAAauU,GAC1CJ,GAAiBA,EAAcI,GACjC,IACCxD,GAAG,MAAOqD,GAEVK,YAAYA,MAYf,OAVKJ,GAEHpxB,EAAK0S,QAAO,kBAAM,CAAK,IAGzBkK,aAAOuJ,EAAUZ,SACdyK,KAAKhwB,GAEL8tB,GAAG,gBAAiB,MAEhB,CACL9tB,OACAmmB,YACA8K,UAEJ,EAKaQ,GAASC,KAOTC,GAAW,SAAH,OAAMhU,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGgU,EAAC,EAADA,EAAC,OAChCjU,IAAM8T,GAAO9T,GAAKC,IAAM6T,GAAO7T,GAAKgU,IAAMH,GAAOG,CAAE,EASxCL,GAAqB,SAAH,OAAM5T,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGgU,EAAC,EAADA,EAAC,OACzCrH,SAAS5M,EAAIC,EAAIgU,IAAMC,MAAMlU,EAAIC,EAAIgU,IAAa,IAANjU,GAAiB,IAANC,GAAiB,IAANgU,CAAS,EAQjEE,GAAmB,SAACC,GAC/B,IAAMT,EAAYU,aAAcD,EAAKd,QAAQ1L,SAC7C,OAAOgM,GAAmBD,GAAaG,GAASQ,GAAgBX,EAClE,EASMW,GAAkB,SAACX,GAAS,OAEhCG,GAAOS,WAAWZ,EAAU3T,GAAK,GAAI2T,EAAU1T,GAAK,GAAGuU,MAAMb,EAAUM,EAAE,EA4I9DQ,GAAwB,SAACL,EAAMT,GAA6B,IAAlBhD,EAAQ,uDAAG,EAC1DnI,EAAYvJ,aAAOmV,EAAK5L,UAAUZ,SAGlC8M,EAAQZ,GAAOS,WAAWZ,EAAU3T,GAAI2T,EAAU1T,GAAGuU,MAAMb,EAAUM,GAEvD,qBAATzwB,MAOTmtB,EAEEnI,EAAUkI,WAAW,QAAQC,SAASA,GADtCnI,GAEF6J,KAAK+B,EAAK/xB,KAAKsxB,UAAWe,GAR1BN,EAAK5L,UAAUZ,QAAQ+M,OAASD,CASpC,EAkBaE,GAAqB,SAAH,GAUxB,IATLC,EAAM,EAANA,OACAC,EAAK,EAALA,MACAC,EAAS,EAATA,UACAC,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aAAa,EAAD,EACZC,iBAAS,MAAG,EAAC,MACbC,qBAAa,MAAG,EAAC,MACjBC,mBAAW,MAAG,GAAG,EAEbb,EAAQV,GAAOG,EACfjU,EAAI8T,GAAO9T,EACXC,EAAI6T,GAAO7T,EAGTqV,EAASN,EAAaE,EACtBK,EAASR,EAAYE,EAGrBO,EAAcrT,KAAKmM,IAAI6G,EAAWI,GAoBxC,GAjBAf,EAAQrS,KAAK8K,IAAIuI,EAAaF,GAG1BR,IAEFN,EAAQrS,KAAKmM,IAAI8G,EAAeZ,IAIlCxU,GAAK6U,EAAO7U,EACZC,GAAK4U,EAAO5U,EAGZD,GAAyC,IAAnC+U,EAAYE,EAAcT,GAChCvU,GAA2C,IAArC+U,EAAaE,EAAeV,GAG9BM,EAAO,CAET,IACMW,EAAaT,EAAaE,EAAeV,EAGzCkB,EAA+B,GAAfR,EAGhBS,EAPaZ,EAAYE,EAAcT,EAGT,GAAdS,EAIkCH,EAAM9U,EAAI,EAC5D4V,EAAqBH,EAAaC,EAAgBZ,EAAM7U,EAAI,EAMlED,GAAK2V,EAAqBnB,EAC1BvU,GAAK2V,EAAqBpB,EAG1BxU,GAR6B2V,EAAqBV,EAQtBF,EAAYM,EACxCpV,GAR6B2V,EAAqBV,EAQtBF,EAAaK,CAC3C,CAGA,MAAO,CAAErV,GAAIA,GAAK,EAAGC,GAAIA,GAAK,EAAGgU,EAAGO,EACtC,EChVMqB,I,OAAiBC,OAAOC,aAAa,OAO9BC,GAAuB,SAACtf,GAAI,OACvCA,EAAK/N,QAAQ,iBAAiB,GAAD,OAAKktB,GAAc,aAAKA,IAAkB,EASnEI,GAAU,SAAH,GAAkD,IAA5CtmB,EAAS,EAATA,UAAWumB,EAAU,EAAVA,WAAY10B,EAAO,EAAPA,QAASkV,EAAI,EAAJA,KACzCqM,EAAuDpT,EAAvDoT,KAAMC,EAAiDrT,EAAjDqT,IAAKxD,EAA4C7P,EAA5C6P,MAAOa,EAAqC1Q,EAArC0Q,OAAQ+C,EAA6BzT,EAA7ByT,WAAYtd,EAAiB6J,EAAjB7J,aACxCqwB,EAAUD,EAAWnT,KAAOjd,EAAe0Z,EAAQ,EACnD4W,EAAQF,EAAWlT,IAAM3C,EAAS,EAClCgW,EAAUF,EAAUD,EAAWnT,KAAOK,EAAa8S,EAAWnT,KAC9DuT,EAAUF,EAAQF,EAAWlT,IAAMkT,EAAW7V,OAAS6V,EAAWlT,IAClEhD,EAAIqW,EAAUtT,EAAOmT,EAAW1W,MAAQ,EACxCS,EAAIqW,EAAUtT,EAEpB,OACE,sBACEuE,UAAW+B,KAAW,mBAAoB,CACxC,4BAA6B9nB,EAC7B,0BAA2B20B,EAC3B,wBAAyBC,IAE3BlJ,MAAO,CAAEyG,UAAU,aAAD,OAAe3T,EAAC,eAAOC,EAAC,QAAQ,SAElD,sBAAKsH,UAAU,yBAAwB,SAAEyO,GAAqBtf,MAGpE,EAEAuf,GAAQnM,aAAe,CACrBna,UAAW,CAAC,EACZumB,WAAY,CAAC,EACb10B,SAAS,EACTkV,KAAM,IAGOuf,IChDcM,GCDdN,GFiDAA,GGhBFO,I,OAAS,kDACpB,WAAY9mB,GAAQ,IAAD,EAqBE,OArBF,qBACjB,cAAMA,IA0MR+mB,mBAAqB,WACnB,EAAKC,iBACP,EAAE,EAKFC,kBAAoB,WAClB,IAAM7K,EAAY,EAAKpc,MAAMoc,UACvBtM,EAAQsM,EAAUtM,MAA4B,EAApBsM,EAAUe,QACpCxM,EAASyL,EAAUzL,OAA6B,EAApByL,EAAUgB,QAC5C,EAAKkD,GAAGhR,IAAII,KAAK,UAAU,OAAD,OAASI,EAAK,YAAIa,GAC9C,EAAE,EAKFuW,iBAAmB,WACjB,EAAK5G,GAAGhR,IAAII,KAAK,UAAW,KAC9B,EAAE,EAiLFyX,yBAA2B,SAACC,GAAc,OACxCA,EAAetuB,OAAS,EAAC,qBACPsuB,EAAetuB,QAC7BsuB,EAAe,EAAG,EAAD,EAOvB9E,gBAAkB,SAACjK,EAAOjd,GACN,oBAAdA,EAAK1J,KACP,EAAKsO,MAAMqnB,+BAA+BjsB,EAAKjD,KAE/C,EAAK6H,MAAMsnB,eAAelsB,EAAKjD,IAC/B,EAAK6H,MAAMunB,eAAensB,IAE5Bid,EAAMmP,iBACR,EAAE,EAKFC,iBAAmB,WACjB,EAAKznB,MAAMsnB,eAAe,MAE1B,EAAKtnB,MAAM0nB,iBACb,EAAE,EAOFnF,oBAAsB,SAAClK,EAAOjd,GAC5B,EAAK4E,MAAM2nB,oBAAoBvsB,EAAKjD,IACpCiD,GAAQ,EAAKwsB,YAAYvP,EAAOjd,EAAKC,SACvC,EAAE,EAOFqlB,qBAAuB,SAACrI,EAAOjd,GACzBA,GACF,EAAKysB,SAAS,CACZC,YAAa1sB,EAAK9J,OAItB,IAAQw2B,EAAgB,EAAKzyB,MAArByyB,YACF7J,EAAY7e,SAASud,cAAc,0BAAD,OACZvhB,EAAK9J,KAAI,OAGjCw2B,GAAe7J,GACjBA,EAAUjB,UAAUtT,IAAI,8BAE5B,EAAE,EAOFiX,oBAAsB,SAACtI,EAAOjd,GAC5B,IAAQ0sB,EAAgB,EAAKzyB,MAArByyB,YACF7J,EAAY7e,SAASud,cAAc,0BAAD,OACZvhB,EAAK9J,KAAI,OAGjCw2B,GAAe7J,GACjBA,EAAUjB,UAAU/M,OAAO,+BAGzB7U,GACF,EAAKysB,SAAS,CACZC,iBAAa3S,GAGnB,EAAE,EAOFuN,+BAAiC,SAACrK,EAAOjd,GACvC,IAAMgsB,EAAiB,EAAKpnB,MAAM4hB,qBAAqBxmB,EAAKjD,IAC5D,GAAIivB,EAAgB,CAClB,IAAMW,EAAQ,EAAKZ,yBAAyBC,GAE5C,EAAKQ,YAAYvP,EAAO0P,EAC1B,CACA1P,EAAMmP,iBACR,EAAE,EAMFhF,mBAAqB,WACnB,EAAKxiB,MAAM2nB,oBAAoB,MAC/B,EAAKK,aACP,EAAE,EAOFvF,kBAAoB,SAACpK,EAAOjd,GACZ,KAEVid,EAAMwD,SACR,EAAKyG,gBAAgBjK,EAAOjd,GAFf,KAIXid,EAAMwD,UACR,EAAK4L,mBACL,EAAKjF,qBAET,EAtgBE,EAAKntB,MAAQ,CACX4yB,QAAS,CAAEn2B,SAAS,GACpBg2B,iBAAa3S,GAEf,EAAK+S,aAAe,EAAKA,aAAaC,KAAK,iBAC3C,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAAK,iBAEjD,EAAKE,aAAeC,IAAMC,YAC1B,EAAKC,OAASF,IAAMC,YACpB,EAAKE,WAAaH,IAAMC,YACxB,EAAKG,SAAWJ,IAAMC,YACtB,EAAKI,SAAWL,IAAMC,YACtB,EAAKK,UAAYN,IAAMC,YACvB,EAAKM,cAAgBP,IAAMC,YAE3B,EAAKrH,SAAW,IAChB,EAAK4H,OAAS,IACd,EAAKC,UAAY,GACjB,EAAKC,UAAY,EAAE,CACrB,CA2lBC,OA3lBA,8CAED,WACEjZ,KAAKkZ,mBACLlZ,KAAKiX,kBAELjX,KAAK2U,KAAOf,GAAQ,CAClB7K,UAAW/I,KAAKyY,OAChB5E,QAAS7T,KAAK0Y,WACd5E,cAAe9T,KAAKmY,aACpBpE,UAAW/T,KAAKqY,kBAGlBrY,KAAKmZ,oBACLnZ,KAAKoZ,0BACLpZ,KAAKqZ,SAEDrZ,KAAK/P,MAAMioB,QACblY,KAAK6X,YAAY,KAAM,KAAM7X,KAAK/P,MAAMioB,SAExClY,KAAKiY,aAET,GAAC,kCAED,WACEjY,KAAKsZ,4BACP,GAAC,gCAED,SAAmBC,GACjBvZ,KAAKqZ,OAAOE,EACd,GAEA,oBAGA,WAAwB,IAAD,OAAhBA,EAAS,uDAAG,CAAC,EACVC,EAAcxZ,KAAK/P,MAAnBupB,UACF9H,EAAU,WAAH,2BAAO9iB,EAAK,yBAALA,EAAK,uBAAK,EAAK8iB,QAAQ9iB,EAAO2qB,EAAW,EAAKtpB,MAAO,EAEzE,GAAIyhB,EAAQ,iBAAkB,cAAe,sBAAuB,CAElE,GAAI6H,EAAUnW,qBAAuBpD,KAAK/P,MAAMmT,mBAI9C,OAHAqO,GAAUmB,KAAK5S,KAAM0R,QACrBqB,GAAUH,KAAK5S,KAAM0R,GAKvB,GAAI6H,EAAUE,cAAgBzZ,KAAK/P,MAAMwpB,cAClCzZ,KAAK/P,MAAMmT,mBAId,OAHAqO,GAAUmB,KAAK5S,KAAM0R,QACrBqB,GAAUH,KAAK5S,KAAM0R,GAMzB1R,KAAKiX,iBACP,CAEIvF,EAAQ,SAAU,eACpBpB,GAAWsC,KAAK5S,MAChB+Q,GAAe6B,KAAK5S,OAIpB0R,EACE,QACA,cACA,cACA,YACA,yBAGFqB,GAAUH,KAAK5S,KAAM0R,GAIrBA,EACE,QACA,cACA,cACA,mBACA,aACA,eACA,oBACA,uBACA,YACA,uBACA,qBAGFD,GAAUmB,KAAK5S,KAAM0R,GAGnBA,EAAQ,QAAS,QAAS,SAAU,YAAa,eACnD1R,KAAK0Z,YAEL1Z,KAAK2Z,mBAAmBH,EAE5B,GAEA,qBAIA,SAAQvpB,EAAO2pB,EAASC,GACtB,OACED,GACAC,GACA5pB,EAAM6J,MAAK,SAACggB,GAAI,OAAKF,EAAQE,KAAUD,EAAQC,EAAK,GAExD,GAEA,8BAGA,WACE9Z,KAAKuQ,GAAK,CACRhR,IAAKC,aAAOQ,KAAKyY,OAAOtQ,SACxB0L,QAASrU,aAAOQ,KAAK0Y,WAAWvQ,SAChC+K,UAAW1T,aAAOQ,KAAK2Y,SAASxQ,SAChC8J,UAAWzS,aAAOQ,KAAK4Y,SAASzQ,SAChCqI,WAAYhR,aAAOQ,KAAK6Y,UAAU1Q,SAClC6I,eAAgBxR,aAAOQ,KAAK8Y,cAAc3Q,SAE9C,GAEA,6BAIA,WACsB,qBAATpkB,KAETic,KAAK/P,MAAM8pB,kBAAkBC,IAG7Bha,KAAK/P,MAAM8pB,kBACT/Z,KAAKsY,aAAanQ,QAAQ8R,wBAGhC,GAEA,qCAGA,WAGMrwB,OAAOswB,gBACTla,KAAKma,eACHna,KAAKma,gBACL,IAAIvwB,OAAOswB,eAAela,KAAKgX,oBACjChX,KAAKma,eAAeC,QAAQpa,KAAKsY,aAAanQ,UAE9Cve,OAAO4e,iBAAiB,SAAUxI,KAAKgX,oBAGzCptB,OAAO4e,iBAAiB,cAAexI,KAAKkX,mBAC5CttB,OAAO4e,iBAAiB,aAAcxI,KAAKmX,iBAC7C,GAEA,wCAGA,WAEMvtB,OAAOswB,eACTla,KAAKma,eAAeE,UAAUra,KAAKsY,aAAanQ,SAEhDve,OAAO6e,oBAAoB,SAAUzI,KAAKgX,oBAG5CptB,OAAO6e,oBAAoB,cAAezI,KAAKkX,mBAC/CttB,OAAO6e,oBAAoB,aAAczI,KAAKmX,iBAChD,GAEA,0BA4BA,SAAajD,GACX,IAAWa,EAAgBb,EAAnBM,EAAUjU,EAAS2T,EAAT3T,EAAGC,EAAM0T,EAAN1T,EAGrBR,KAAKuQ,GAAGsD,QAAQvB,QACd,+CACA,GAIEtS,KAAKuQ,GAAGa,YACVpR,KAAKuQ,GAAGa,WAAW3D,MAAM,aAAa,SAACjlB,GACrC,IAAM8xB,EAAU9Z,GAAKhY,EAAEgY,EAAIhY,EAAEoY,OAAS,GAAKmU,EAC3C,MAAM,cAAN,OAAqBuF,EAAO,MAC9B,IAIFta,KAAKiY,cAGLjY,KAAKmZ,kBAAkBjF,GACvB,IAAMqG,EJ/JoB,SAAC5F,GAC7B,IAAMI,EAAQJ,EAAK/xB,KAAK43B,cAClB1F,EAAYH,EAAK/xB,KAAK63B,kBAC5B,MAAO,CACL3F,UAAW,CACT4F,KAAM5F,EAAU,GAAG,GACnB6F,KAAM7F,EAAU,GAAG,GACnB8F,KAAM9F,EAAU,GAAG,GACnB+F,KAAM/F,EAAU,GAAG,IAErBC,MAAO,CAAE+F,KAAM/F,EAAM,GAAIgG,KAAMhG,EAAM,IAEzC,CImJoBiG,CAAehb,KAAK2U,MAGpC3U,KAAK/P,MAAMgrB,aAAa,CACtBlG,QACAxU,IACAC,IACA0a,SAAS,EACTjK,YAAY,EACZkK,UAAU,EACVC,SAAUb,EAAQxF,MAAM+F,KACxBO,SAAUd,EAAQxF,MAAMgG,MAE5B,GAEA,6BAGA,WACE/a,KAAKuQ,GAAGsD,QAAQvB,QACd,+CACA,EAEJ,GAEA,+BAOA,SAAkB4B,GAChB,IAAWa,GAAUb,GAAaQ,GAAiB1U,KAAK2U,OAAhDH,EAER,EAMIxU,KAAK/P,MAAMC,UAAS,IALtB7J,oBAAY,MAAG,EAAC,MAChBH,wBAAgB,MAAG,EAAC,MACpBK,wBAAgB,MAAG,EAAC,MACpBwZ,MAAOub,OAAU,MAAG,EAAC,MACrB1a,OAAQ2a,OAAW,MAAG,EAAC,EAGzB,EACEvb,KAAK/P,MAAMoc,UAAS,IADdtM,MAAOyb,OAAU,MAAG,EAAC,MAAE5a,OAAQ6a,OAAW,MAAG,EAAC,EAGhDC,EAAoBr1B,EAAe0uB,EACnC4G,GAAsBz1B,EAAmBK,GAAoBwuB,EAC7D6G,EAAS5b,KAAK+Y,OAGdqC,EAAW1Y,KAAK8K,IACpB8N,GAAcE,GAAc,GAC5BD,GAAeE,GAAe,KJxON,SAAC9G,EAAK,GAA2B,IAAxBG,EAAS,EAATA,UAAWC,EAAK,EAALA,MAChD,GAAID,EAAW,CACb,IAAQ4F,EAA2B5F,EAA3B4F,KAAMC,EAAqB7F,EAArB6F,KAAMC,EAAe9F,EAAf8F,KAAMC,EAAS/F,EAAT+F,KAC1BlG,EAAK/xB,KAAK63B,gBAAgB,CACxB,CAACC,EAAMC,GACP,CAACC,EAAMC,IAEX,CAEA,GAAI9F,EAAO,CACT,IAAQ+F,EAAe/F,EAAf+F,KAAMC,EAAShG,EAATgG,KACdpG,EAAK/xB,KAAK43B,YAAY,CAACM,EAAMC,GAC/B,CACF,CI8NIc,CAAe7b,KAAK2U,KAAM,CACxBG,UAAW,CACT4F,MAAOgB,EAAoBE,EAC3BhB,KAAMY,EAAaI,EAASD,EAC5BhB,MAAOiB,EACPf,KAAMY,EAAcG,GAEtB7G,MAAO,CACL+F,KAAM9a,KAAKgZ,UAAYoC,EACvBL,KAAM/a,KAAKiZ,YAGjB,GAEA,gCAIA,SAAmBO,GAEbA,EAAU0B,WAKU,IAApB1B,EAAUsC,MJ5Lc,SAC9BnH,EACAT,GAGI,IAKAM,EAAGjU,EAAGC,EAPV0Q,EAAQ,uDAAG,EACXiK,EAAQ,wDAEFpS,EAAYvJ,aAAOmV,EAAK5L,UAAUZ,SAClCA,EAAUuM,GAAiBC,GAC3BoH,EACmB,qBAAhB7H,EAAU3T,GAA4C,qBAAhB2T,EAAU1T,EA+BzD,GA5BoB,qBAATzc,OAETmtB,EAAW,GAGTiK,GAEF3G,EAAIrM,EAAQqM,GAAKN,EAAUM,GAAK,GAChCjU,EAAI4H,EAAQ5H,GAAK2T,EAAU3T,GAAK,GAChCC,EAAI2H,EAAQ3H,GAAK0T,EAAU1T,GAAK,KAGhCgU,EAAIN,EAAUM,GAAKrM,EAAQqM,EAC3BjU,EAAI2T,EAAU3T,GAAK4H,EAAQ5H,EAC3BC,EAAI0T,EAAU1T,GAAK2H,EAAQ3H,GAIzBub,IAEFhT,EAAU6J,KAAK+B,EAAK/xB,KAAKsxB,UAAWG,IACpCtL,EAAU6J,KAAK+B,EAAK/xB,KAAKo5B,YAAazb,EAAIiU,EAAGhU,EAAIgU,IAInDzL,EAAU6J,KAAK+B,EAAK/xB,KAAKq5B,QAASzH,GAG9BtD,EAAU,CAEZ,IAAM+D,EAAQP,GAAiBC,GAG/B5L,EAAU6J,KAAK+B,EAAK/xB,KAAKsxB,UAAWW,GAAgB1M,IAGpD6M,GAAsBL,EAAMM,EAAO/D,EACrC,CACF,CIgJIgL,CACElc,KAAK2U,KACL,CAAEpU,EAAGiZ,EAAUjZ,EAAGC,EAAGgZ,EAAUhZ,EAAGgU,EAAGgF,EAAUzE,OAC/CyE,EAAUvI,WAA6B,GAAhBjR,KAAKmR,SAAiB,EAC7CqI,EAAU2B,UATVnb,KAAK0Z,YAWT,GAEA,uBAGA,WACE,MAAqD1Z,KAAK/P,MAAlDC,EAAS,EAATA,UAAWmc,EAAS,EAATA,UAAWhO,EAAW,EAAXA,YAAahR,EAAK,EAALA,MAC5BiuB,EAAoCprB,EAA3C6P,MAA2Bwb,EAAgBrrB,EAAxB0Q,OACZ4a,EAAoCnP,EAA3CtM,MAA2B0b,EAAgBpP,EAAxBzL,OAG3B,GAAK0a,GAAeE,EAApB,CAKA,IAAMpG,EAAS,CAAE7U,EAAGrQ,EAAU7J,aAAcma,EAAG,GAGzC6U,EAAQhX,EACVhR,EAAM8uB,MAAK,SAAC9wB,GAAI,OAAKA,EAAKjD,KAAOiW,CAAW,IAC5C,KAGE6V,EAAYiB,GAAmB,CACnCC,SACAC,QACAC,UAAWgG,EACX/F,WAAYgG,EACZ/F,YAAagG,EACb/F,aAAcgG,EACd/F,UAAW,GACXC,cAAe3V,KAAK/P,MAAMmT,mBACtBpD,KAAK/P,MAAMupB,UAAUzE,MACrB,GACJa,YAAa5V,KAAK/P,MAAMmT,mBAAqB,IAAO,KAIhDgZ,EAAmB7H,GAASG,GAAiB1U,KAAK2U,OAGxDK,GACEhV,KAAK2U,KACLT,EACAkI,EAAmB,EAAIpc,KAAKmR,UAC5B,EAjCF,CAmCF,GAEA,yBAwIA,SAAY7I,EAAOrR,GAAqB,IAAfiO,EAAO,uDAAG,CAAC,EAClClF,KAAK8X,SAAS,CACZI,QAAQ,cACNzB,WAAYnO,GAASA,EAAMxa,OAAOmsB,wBAClChjB,KAAMA,EACNlV,SAAS,GACNmjB,IAGT,GAEA,yBAGA,WACMlF,KAAK1a,MAAM4yB,QAAQn2B,SACrBie,KAAK8X,SAAS,CACZI,QAAQ,6BACHlY,KAAK1a,MAAM4yB,SAAO,IACrBn2B,SAAS,KAIjB,GAEA,oBAGA,WACE,MACEie,KAAK/P,MADCC,EAAS,EAATA,UAAW1B,EAAM,EAANA,OAAQ6tB,EAAY,EAAZA,aAAcC,EAAoB,EAApBA,qBAEzC,EAA4CpsB,EAApCyT,kBAAU,MAAG,EAAC,IAAsBzT,EAApB0T,mBAAW,MAAG,EAAC,EAEvC,OACE,uBACEkE,UAAU,2BACVG,IAAKjI,KAAKsY,aACVnP,QAASnJ,KAAK0X,iBAAiB,UAE/B,sBACEtvB,GAAG,iBACH0f,UAAU,4BACV/H,MAAO4D,EACP/C,OAAQgD,EACRqE,IAAKjI,KAAKyY,OAAO,SAEjB,qBACErwB,GAAG,eACH0f,UAAW+B,KAAW,wBAAyB,CAC7C,iCAAkCwS,IAEpCpU,IAAKjI,KAAK0Y,WAAW,UAErB,gCACG,CACC,YACA,mBACA,2BACA,qBACA5f,KAAI,SAAC1Q,GAAE,OACP,yBACEA,GAAE,mBAAcA,GAEhB0f,UAAS,8BAAyB1f,GAClC2f,QAAQ,YACRwU,KAAK,IACLC,KAAK,IACLC,YAAY,cACZC,YAAY,IACZC,aAAa,IACbC,OAAO,OAAM,SAEb,uBAAMp0B,EAAE,iCAVHJ,EAWE,MAGb,oBAAG0f,UAAU,6BAA6BG,IAAKjI,KAAK6Y,YACpD,oBAAG/Q,UAAU,4BAA4BG,IAAKjI,KAAK2Y,WACnD,oBACEvwB,GAAG,QACH0f,UAAU,4BACVG,IAAKjI,KAAK4Y,gBAIhB,qBACE9Q,UAAW+B,KAAW,kCAAmC,CACvD,2CAA4Crb,EAAOzF,OACnD,sDACGuzB,IAELrU,IAAKjI,KAAK8Y,gBAEZ,eAAC,GAAO,cAAC5oB,UAAWA,GAAe8P,KAAK1a,MAAM4yB,YAGpD,KAAC,EAlnBmB,CAASpB,cAsnBlBkD,GAAwB,CACnC1W,KAAM,EACNC,IAAK,EACLsZ,MAAO,KACPC,OAAQ,KACR/c,MAAO,KACPa,OAAQ,MAIJmc,GAAa,GACbC,GAAa,GACbC,GAAiB,CAAC,EA+CTlS,gBA7CgB,SAACzlB,EAAO43B,GAAQ,qBAC7C7e,YAAa/Y,EAAM+F,KAAKK,QACxBwE,UAAWgT,GAAa5d,GACxBk0B,UAAW1V,GAAaxe,GACxBg3B,qBAAsBh3B,EAAM4L,QAAQC,cACpC/D,MAAO9H,EAAMpB,MAAMkJ,OAAS2vB,GAC5BhL,UAAWzsB,EAAMvD,QAAQkP,yBACzBob,UAAW/mB,EAAMpB,MAAM+nB,MAAQgR,GAC/BnwB,kBAAmBxH,EAAMwH,kBACzBC,iBAAkBzH,EAAMyH,iBACxByB,OAAQyf,GAAU3oB,GAClB+pB,YAAaD,GAAe9pB,GAC5B+H,MAAO/H,EAAMpB,MAAMmJ,OAAS2vB,GAC5BxyB,iBAAkBlF,EAAMmH,SAASrB,SACjCumB,WAAYhU,GAAcrY,GAC1BssB,aAAcxT,GAAgB9Y,GAC9BusB,qBAAsB3Q,GAAwB5b,GAC9CwsB,qBAAsB1Q,GAA6C9b,GACnE0tB,qBAAsB1W,GAAwBhX,GAC9C+2B,aAAc/2B,EAAMvD,QAAQmC,MAC5Bif,eAAgB7d,EAAMvD,QAAQ8O,QAC9B4oB,YAAan0B,EAAMvD,QAAQ8J,KAC3BuX,mBAAoB1B,GAAsBpc,IACvC43B,EAAQ,IAGqB,SAACx3B,EAAUw3B,GAAQ,qBACnD5F,+BAAgC,SAAC6F,GAC/Bz3B,EhD7pBK,CACL/D,KAAMiT,GACNM,kBgD2pB6CioB,GAC/C,EACA5F,eAAgB,SAACrlB,GACfxM,EAASgN,GAAaR,GACxB,EACA0lB,oBAAqB,SAACtlB,GACpB5M,EAAS2M,GAAkBC,GAC7B,EACAynB,kBAAmB,SAAC7pB,GAClBxK,EtEpkBG,SAAyBwK,GAC9B,MAAO,CACLvO,KAAMc,EACNyN,YAEJ,CsE+jBa+mB,CAAgB/mB,GAC3B,EACA+qB,aAAc,SAAC/G,GACbxuB,EAAS/C,EAAWuxB,GACtB,GACGgJ,EAAQ,GAGEnS,CAA6CgM,IChtBtDqG,GAA2B,WAAO,IAAD,IAC/BrzB,EAAeH,OAAOG,aAAaC,QAAQ/D,IACjD,OAA+B,QAA/B,EAAOgE,KAAKC,MAAMH,UAAa,OAAU,QAAV,EAAxB,EAA0BgB,gBAAQ,WAAV,EAAxB,EAAoCI,MAC7C,EAOakyB,GAAsB,WACjC,IAAMC,EAAUC,eAiChB,MAAO,CACL5F,gBAhCsB6F,uBAAY,WAClC,IAAMruB,EAAMsuB,aAAah2B,GAAOC,UAAUC,MAC1C21B,EAAQ/vB,KAAK4B,EACf,GAAG,CAACmuB,IA8BF9F,eA5BqBgG,uBACrB,SAACpe,GACC,IAAM5X,EAAiB41B,KAEjBjuB,EAAMsuB,aAAah2B,GAAOC,UAAUG,aAAc,CACtD61B,WAAYl2B,EACZY,GAAIgX,EAAKhX,KAEXk1B,EAAQ/vB,KAAK4B,EACf,GACA,CAACmuB,IAmBDK,yBAhB+BH,uBAC/B,SAACpe,GACC,IAAM5X,EAAiB41B,KAEjBjuB,EAAMsuB,aAAah2B,GAAOC,UAAUE,YAAa,CACrD81B,WAAYl2B,EACZY,GAAIgX,EAAKhX,KAEXk1B,EAAQ/vB,KAAK4B,EACf,GACA,CAACmuB,IAQL,EC9CeM,IJJc9G,GIIDC,GJHnB,SAAC9mB,GACN,MACEotB,KADM1F,EAAe,EAAfA,gBAAiBH,EAAc,EAAdA,eAAgBmG,EAAwB,EAAxBA,yBAGzC,OACE,eAAC7G,GAAS,cACRa,gBAAiBA,EACjBH,eAAgBA,EAChBmG,yBAA0BA,GACtB1tB,GAGV,GKda4tB,I,OC0GA9S,aAhBgB,SAACzlB,GAAK,MAAM,CACzC+H,MAAO0T,GAAgBzb,GACvBw4B,eAAgBx4B,EAAMvD,QAAQ8O,QAC9BT,MAAO9K,EAAM8K,MACbrO,QAAS6gB,GAA4Btd,GACtC,IAEiC,SAACI,GAAQ,MAAM,CAC/Cq4B,UAAW,WACTr4B,EAAS3C,EAAW,eAAe,GACrC,EACAi7B,OAAQ,WACNt4B,E1EuFK,CACL/D,KAAMsB,EACNqN,oB0EzFkC,GACpC,EACD,GAEcya,EAlGgB,SAAH,GAQrB,IAPLkT,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACA7wB,EAAK,EAALA,MACA0wB,EAAS,EAATA,UACAC,EAAM,EAANA,OACAF,EAAc,EAAdA,eACA/7B,EAAO,EAAPA,QAEA,EAA8CojB,oBAAS,GAAM,oBAAtDgZ,EAAe,KAAEC,EAAkB,KACpCC,EAAmC,IAAjBhxB,EAAMtE,OAEtB4uB,EAAoB0F,KAApB1F,gBAWR,OARAlS,qBAAU,WACR,IAAM6Y,EAAQvU,YAAW,WACvBqU,GAAmB,EACrB,GAAG,MAEH,OAAO,kBAAMnU,aAAaqU,EAAO,CACnC,GAAG,IAGD,uCACGv8B,GACC,uBACE+lB,UAAW+B,KAAW,QAAS,mBAAoB,CACjD,oCAAqCiU,IACpC,UAEH,qBAAIhW,UAAU,0BAAyB,kDAGvC,qBAAGA,UAAU,6BAA4B,iCACnB,6BAAIza,EAAMtE,SAAW,+GAI3C,eAAC,GAAM,CAACogB,QAAS6U,EAAO,8BACxB,eAAC,GAAM,CAAC9R,KAAK,YAAY/C,QAAS4U,EAAW9R,KAAK,QAAO,sCAK5DoS,GAAmBF,GAClB,uBACErW,UAAW+B,KAAW,QAAS,mBAAoB,CACjD,oCAAqCiU,IACpC,UAEH,qBAAIhW,UAAU,0BAAyB,+CAGvC,oBAAGA,UAAU,6BAA4B,iIAM5CoW,GAAcC,GACb,uBACErW,UAAW+B,KACT,QACA,mBACA,gCACA,CACE,oCAAqCiU,IAEvC,UAEF,qBAAIhW,UAAU,0BAAyB,wCAGvC,oBAAGA,UAAU,6BAA4B,mBAAKmW,EAAY,uFAC1D,eAAC,GAAM,CAAC9U,QAAS,kBAAMwO,GAAiB,EAAC,6BAKnD,KCtFMnvB,I,OAAI,kCAcK+1B,GAZK,SAAH,OAAMzW,EAAS,EAATA,UAAW/lB,EAAO,EAAPA,QAAO,OACvC,uBACE+lB,UAAW+B,KAAW/B,EAAW,wBAAyB,CACxD,iCAAkC/lB,IAEpCgmB,QAAQ,iBAAgB,UAExB,uBAAMvf,EAAGA,KACT,uBAAMA,EAAGA,OACL,ECUOg2B,I,MAlBO,SAAH,OACjB1W,EAAS,EAATA,UAAU,EAAD,EACTiB,UAAWoB,OAAS,MAAG,OAAM,EAC7BsU,EAAK,EAALA,MACA9X,EAAI,EAAJA,KACA+E,EAAK,EAALA,MACA1oB,EAAK,EAALA,MAAK,OAEL,qCACE,eAACmnB,EAAS,CACRuB,MAAOA,EACP5D,UAAWwH,GAAU,2BAA4B,CAAE3I,QAAQmB,GAAW,SAEpE9kB,GAAmB,IAAVA,EAAsBA,EAARy7B,KAE1B,GCdUC,GANE,SAAH,OAAM5W,EAAS,EAATA,UAAS,OAC3B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,mFACJ,EC4COm2B,I,OA1CO,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QACvB,EAAoCzZ,oBAAS,GAAM,oBAA5C0Z,EAAU,KAAEC,EAAa,KAQhC,OACE,uBAAKhX,UAAU,YAAW,UACxB,eAAC,GAAa,CACZiB,UAAW,OACXjB,UAAWwH,GAAU,gBAAiB,CACpCvtB,SAAU88B,IAEZ77B,MAAO47B,IAERh1B,OAAOm1B,UAAUC,WAAaJ,GAC7B,uCACE,uBACE9W,UAAWwH,GAAU,eAAgB,CACnCvtB,QAAS88B,IACR,kCAIL,qBAAI/W,UAAU,UAAS,SACrB,eAAC,GAAU,CACTe,UAAU,iCACVf,UAAU,cACVkB,cAAa,sBACbniB,KAAM63B,GACNvV,QA9BQ,WAClBvf,OAAOm1B,UAAUC,UAAUC,UAAUL,GACrCE,GAAc,GACd/U,YAAW,kBAAM+U,GAAc,EAAM,GAAE,KACzC,WAiCF,G,0CCxCMI,I,OAAe,CACnBC,UAAU,EACVC,mBAAoB,CAClBC,WAAY,UACZC,UAAW,EACXC,WAAY,GAEdC,gBAAiB,SACjBC,UAAW,CACTC,gBAAgB,EAChBC,SAAU,CACRC,UAAW,GACXC,gBAAgB,EAChBC,MAAO,UACPC,UAAW,EACXC,UAAW,yBACXC,QAAS,GACTC,SAAU,CACRC,MAAO,yBACPlU,KAAM,IAERmU,kBAAmB,UACnB1U,MAAO,CACL2U,KAAM,CACJF,MAAO,yBACPlU,KAAM,OAKdqU,WAAY,CACVC,UAAW,CACT,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,WAAY,CACV,iBACA,kBACA,mBACA,mBACA,oBAEFC,gBAAiB,CACf,iBACA,kBACA,mBACA,mBACA,qBAGJC,SAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFL,KAAM,CACJF,MAAO,0BAETvf,OAAQ,KACR+f,WAAY,CACVC,MAAO,QAETC,UAAW,UACXC,OAAQ,CACNpV,MAAO,CACL2U,KAAM,CACJF,MAAO,2BAGXE,KAAM,CACJF,MAAO,2BAGXY,OAAQ,CACNtT,MAAO,QAETuT,cAAe,UACfC,aAAc,UACdvV,MAAO,CACL2U,KAAM,CACJF,MAAO,yBACPlU,KAAM,IAERiV,KAAM,QACNC,KAAM,QACN5gB,EAAG,EACH6gB,QAAS,OACTC,QAAS,UAEXthB,MAAO,KACPuhB,MAAO,CACLC,YAAY,EACZC,UAAW,yBACXh2B,MAAO,eACPi2B,UAAW,EACXC,UAAW,yBACXC,UAAW,SACXC,UAAU,EACV/B,gBAAgB,EAChBC,MAAO,UACPC,UAAW,EACXC,UAAW,yBACXC,QAAS,GACTC,SAAU,CACRC,MAAO,yBACPlU,KAAM,IAERmU,kBAAmB,UACnB1U,MAAO,CACL2U,KAAM,CACJF,MAAO,yBACPlU,KAAM,KAGV4V,cAAe,yBACfC,cAAe,GAEjBC,MAAO,CACLR,YAAY,EACZC,UAAW,yBACXh2B,MAAO,eACPi2B,UAAW,EACXC,UAAW,yBACXC,UAAW,SACXC,UAAU,EACV/B,gBAAgB,EAChBC,MAAO,UACPC,UAAW,EACXC,UAAW,yBACXC,QAAS,GACTC,SAAU,CACRC,MAAO,yBACPlU,KAAM,IAERmU,kBAAmB,UACnB1U,MAAO,CACL2U,KAAM,CACJF,MAAO,yBACPlU,KAAM,KAGV4V,cAAe,yBACfC,cAAe,GAEjBlG,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,MAIMqjB,GAAmB,6BAC3BjD,IAAY,IACfte,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAEL4M,MAAO,CACL2U,KAAM,CACJpU,KAAM,IAER1L,EAAG,KAEL6hB,YAAY,EACZriB,MAAO,IACPuhB,MAAM,6BACDpC,GAAaoC,OAAK,IACrB5V,MAAM,6BACDwT,GAAaoC,MAAM5V,OAAK,IAC3B2U,KAAK,6BACAnB,GAAaoC,MAAMjB,MAAI,IAC1BpU,KAAM,MAGViU,SAAS,6BACJhB,GAAaoC,MAAMpB,UAAQ,IAC9BjU,KAAM,IAERoW,OAAQ,IAEVN,MAAM,6BACD7C,GAAa6C,OAAK,IACrBrW,MAAM,6BACDwT,GAAa6C,MAAMrW,OAAK,IAC3B2U,KAAK,6BACAnB,GAAa6C,MAAM1B,MAAI,IAC1BpU,KAAM,MAGViU,SAAS,6BACJhB,GAAa6C,MAAM7B,UAAQ,IAC9BjU,KAAM,IAERoW,OAAQ,MAICC,GAAoB,gBAC5BpD,IAGQqD,GAAqB,6BAC7BrD,IAAY,IACfte,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELiB,MAAO,OAGIyiB,GAAuB,6BAC/BtD,IAAY,IACfte,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELiB,MAAO,OAGI0iB,GAAsB,6BAC9BN,IAAmB,IACtBvhB,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELiB,MAAO,MClQH2iB,GAAgB,CACpBvD,UAAU,EACVC,mBAAoB,CAClBC,WAAY,UACZC,UAAW,EACXC,WAAY,GAEdC,gBAAiB,SACjBC,UAAW,CACTC,gBAAgB,EAChBC,SAAU,CACRC,UAAW,GACXC,gBAAgB,EAChBC,MAAO,UACPC,UAAW,EACXC,UAAW,mBACXC,QAAS,GACTC,SAAU,CACRC,MAAO,mBACPlU,KAAM,IAERmU,kBAAmB,UACnB1U,MAAO,CACL2U,KAAM,CACJF,MAAO,mBACPlU,KAAM,OAKdqU,WAAY,CACVC,UAAW,CACT,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,WAAY,CACV,iBACA,kBACA,mBACA,mBACA,oBAEFC,gBAAiB,CACf,iBACA,kBACA,mBACA,mBACA,qBAGJC,SAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFL,KAAM,CACJF,MAAO,oBAETvf,OAAQ,KACR+f,WAAY,CACVC,MAAO,QAETC,UAAW,UACXC,OAAQ,CACNpV,MAAO,CACL2U,KAAM,CACJF,MAAO,qBAGXE,KAAM,CACJF,MAAO,qBAGXY,OAAQ,CACNtT,MAAO,SAETuT,cAAe,UACfC,aAAc,UACdvV,MAAO,CACL2U,KAAM,CACJF,MAAO,mBACPlU,KAAM,IAERiV,KAAM,QACNC,KAAM,QACN5gB,EAAG,EACH6gB,QAAS,OACTC,QAAS,UAEXthB,MAAO,KACPuhB,MAAO,CACLC,YAAY,EACZC,UAAW,mBACXh2B,MAAO,eACPi2B,UAAW,EACXC,UAAW,mBACXC,UAAW,SACXC,UAAU,EACV/B,gBAAgB,EAChBC,MAAO,UACPC,UAAW,EACXC,UAAW,mBACXC,QAAS,GACTC,SAAU,CACRC,MAAO,mBACPlU,KAAM,IAERmU,kBAAmB,UACnB1U,MAAO,CACL2U,KAAM,CACJF,MAAO,mBACPlU,KAAM,KAGV4V,cAAe,mBACfC,cAAe,GAEjBC,MAAO,CACLR,YAAY,EACZC,UAAW,mBACXh2B,MAAO,eACPi2B,UAAW,EACXC,UAAW,mBACXC,UAAW,SACXC,UAAU,EACV/B,gBAAgB,EAChBC,MAAO,UACPC,UAAW,EACXC,UAAW,mBACXC,QAAS,GACTC,SAAU,CACRC,MAAO,mBACPlU,KAAM,IAERmU,kBAAmB,UACnB1U,MAAO,CACL2U,KAAM,CACJF,MAAO,mBACPlU,KAAM,KAGV4V,cAAe,mBACfC,cAAe,GAEjBlG,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,KAIM6jB,GAAoB,6BAC5BD,IAAa,IAChB9hB,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELsjB,YAAY,EACZriB,MAAO,IACP2L,MAAO,CACL2U,KAAM,CACJpU,KAAM,IAER1L,EAAG,KAEL+gB,MAAM,6BACDoB,GAAcpB,OAAK,IACtB5V,MAAM,6BACDgX,GAAcpB,MAAM5V,OAAK,IAC5B2U,KAAK,6BACAqC,GAAcpB,MAAMjB,MAAI,IAC3BpU,KAAM,MAGViU,SAAS,6BACJwC,GAAcpB,MAAMpB,UAAQ,IAC/BjU,KAAM,IAERoW,OAAQ,IAEVN,MAAM,6BACDW,GAAcX,OAAK,IACtBrW,MAAM,6BACDgX,GAAcX,MAAMrW,OAAK,IAC5B2U,KAAK,6BACAqC,GAAcX,MAAM1B,MAAI,IAC3BpU,KAAM,MAGViU,SAAS,6BACJwC,GAAcX,MAAM7B,UAAQ,IAC/BjU,KAAM,IAERoW,OAAQ,MAICO,GAAqB,gBAC7BF,IAGQG,GAAsB,6BAC9BH,IAAa,IAChB9hB,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELiB,MAAO,OAGI+iB,GAAwB,6BAChCJ,IAAa,IAChB9hB,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELiB,MAAO,OAGIgjB,GAAuB,6BAC/BJ,IAAoB,IACvB/hB,OAAQ,IACRgb,OAAQ,CACNoG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHpjB,EAAG,IAELiB,MAAO,MC3OHijB,GAAOC,KAAsBC,MAyB7BC,GAAe,SAAC/yB,EAAOukB,EAAMyO,GACjC,MAAc,SAAVhzB,EACW,uBAATukB,EACK9kB,KAAUuzB,EAAQX,IACP,YAAT9N,EACF9kB,KAAUuzB,EAAQjB,IACP,cAATxN,EACF9kB,KAAUuzB,EAAQb,IACP,gBAAT5N,EACF9kB,KAAUuzB,EAAQZ,IAElB3yB,KAAUuzB,EAAQd,IAGd,uBAAT3N,EACK9kB,KAAUuzB,EAAQL,IACP,YAATpO,EACF9kB,KAAUuzB,EAAQT,IACP,cAAThO,EACF9kB,KAAUuzB,EAAQP,IACP,gBAATlO,EACF9kB,KAAUuzB,EAAQN,IAElBjzB,KAAUuzB,EAAQR,GAG/B,EC/EeS,GDqFAtY,aAJS,SAACzlB,GAAK,MAAM,CAClC8K,MAAO9K,EAAM8K,MACd,GAEc2a,EAvDK,SAAH,GAAsD,IAAhD3a,EAAK,EAALA,MAAM,EAAD,EAAEukB,YAAI,MAAG,GAAE,MAAEjzB,YAAI,MAAG,GAAE,MAAE0hC,cAAM,MAAG,CAAC,EAAC,EACvDE,EAAa3O,EAAK3mB,SAAS,WAC7B,CAAEu1B,YAAY,QACdne,EAEJ,OACE,sBACE0C,UAAW0b,KACT,wBAAwB,oBAAD,OACH7O,IACpB,SAEF,eAACqO,GAAI,CACHthC,KAAMA,EACN0hC,OAAQD,GAAa/yB,EAAOukB,EAAMyO,GAClCK,OAAQH,EACR7V,MAAO,CAAE1N,MAAO,OAAQa,OAAQ,QAChC8iB,kBAAkB,KAI1B,IE7CeC,GANG,SAAH,OAAM7b,EAAS,EAATA,UAAS,OAC5B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,2GACJ,ECGOo7B,GANI,SAAH,OAAM9b,EAAS,EAATA,UAAS,OAC7B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,8FACJ,ECoDOq7B,GAjDM,SAAH,GAQX,IAPLC,EAAQ,EAARA,SAAS,EAAD,EACRhwB,cAAM,MAAG,GAAE,MACX6S,YAAI,MAAG,OAAM,MACb8X,aAAK,MAAG,IAAG,MACXsF,cAAM,OAAO,MACbC,cAAM,OAAO,MACbC,aAAK,OAAQ,EAEb,EAAgC9e,oBAAS,GAAM,oBAAxCja,EAAQ,KAAEg5B,EAAW,KACtBC,GAAcj5B,GAAY+4B,EAAQnwB,EAAOswB,MAAM,EAAGH,GAASnwB,EAC3DuwB,EAAYvwB,EAAO/K,OAASo7B,EAAWp7B,OAK7C,OAFA0c,qBAAU,kBAAMye,GAAY,EAAM,GAAE,CAACpwB,IAE9BA,EAAO/K,OAAS,EACrB,uCACE,qBACE+e,UAAWwH,GAAU,gCAAiC,CACpDyU,SACAC,WACC,SAEFG,EAAWrrB,KAAI,SAACsG,EAAMklB,GAAK,OAC1B,8BACE,eAAC,GAAa,CACZthC,MAAO8gC,EAAW1kB,EAAK0kB,GAAY1kB,EACnCuH,KAAMA,EACN8X,MAAOA,KAJF6F,EAMJ,MAGRD,EAAY,EACX,0BACEvc,UAAU,uCACV,gBAAe5c,EACfie,QAAS,kBAAM+a,GAAY,EAAK,EAAC,eAE9BG,EAAS,WAEZ,QAGN,eAAC,GAAa,CAAC5F,MAAOA,GAE1B,E,qBClDa8F,GAAsB,CACjCC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,yBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,yBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,yBACRC,OAAQ,yBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,0BAGGC,GAAuB,CAClChB,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,mBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,mBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,mBACRC,OAAQ,mBACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,oBCTKE,GAnBQ,SAAH,OAAM3d,EAAS,EAATA,UAAW9kB,EAAK,EAALA,MAAO2jB,EAAI,EAAJA,KAAMvW,EAAK,EAALA,MAAOquB,EAAK,EAALA,MAAK,OAC5D,sBAAK3W,UAAWwH,GAAU,4BAA6B,CAAE3I,QAAQmB,GAAW,SAC3C,IAA9BlkB,OAAOS,KAAKrB,GAAO+F,OAClB01B,EAEA,eAAC,KAAS,CACRruB,MAAiB,SAAVA,EAAmBm0B,GAAsBiB,GAChDjkC,MAAM,EACNmkC,YAAa,EACbC,UAAW,EACXC,4BAA4B,EAC5BC,iBAAiB,EACjBC,kBAAkB,EAClBC,IAAK/iC,KAGL,ECsCOgjC,GAzDK,SAAH,GAaV,IAZLhO,EAAK,EAALA,MACA5nB,EAAK,EAALA,MACA0zB,EAAQ,EAARA,SACA9gC,EAAK,EAALA,MAAM,EAAD,EACL2jB,YAAI,MAAG,OAAM,MACb8X,aAAK,MAAG,IAAG,MACX18B,eAAO,OAAO,MACdgiC,cAAM,OAAO,MACbC,cAAM,OAAO,MACbC,aAAK,OAAQ,MACbvY,aAAK,MAAG,KAAI,EACZrd,EAAQ,EAARA,SAEM43B,EAAW/4B,MAAMC,QAAQnK,GACzBkjC,EAA8B,kBAAVljC,GAAgC,OAAVA,IAAmBijC,EAEnE,OACElkC,GACE,uCACE,qBAAI+lB,UAAU,2BAA0B,SAAEkQ,IAC1C,sBAAIlQ,UAAU,yBAAyB,aAAYkQ,EAAM,UACtDiO,GACC,eAAC,GAAY,CACXnC,SAAUA,EACVC,OAAQA,EACRC,OAAQA,EACRrd,KAAMA,EACN8X,MAAOA,EACP3qB,OAAQ9Q,EACRihC,MAAOA,KAGTgC,IAAaC,IAAe73B,GAC5B,eAAC,GAAa,CACZowB,MAAOA,EACP9X,KAAMA,EACNvW,MAAOA,EACPsb,MAAOA,GAAS1oB,EAChBA,MAAOA,IAGVkjC,GACC,eAAC,GAAc,CACbljC,MAAOA,EACP2jB,KAAMA,EACNvW,MAAOA,EACPquB,MAAOA,IAGVpwB,OAKX,E,0FCvDA83B,KAAKC,iBAAiB,SAAUC,MAChCF,KAAKC,iBAAiB,OAAQE,MAC9BH,KAAKC,iBAAiB,aAAcG,MAK7B,I,GAiCQxb,gBAJS,SAACzlB,GAAK,MAAM,CAClCw4B,eAAgBx4B,EAAMvD,QAAQ8O,QAC/B,GAEcka,EAjCa,SAAH,GAIlB,IAHL+S,EAAc,EAAdA,eAAe,EAAD,EACd/7B,eAAO,OAAO,MACdiB,aAAK,MAAG,GAAE,EAEJwjC,EAAUte,mBAEVue,EAAcC,mBAAQ,WAC1B,IAAMC,EAAWR,KAAKS,cAAc5jC,GAC9B6jC,EAAWF,EAASE,UAAYF,EAASG,YAAYD,SAC3D,OAAOA,EAAWV,KAAKY,UAAU/jC,EAAO,CAAE6jC,aAAY7jC,MAAQA,CAChE,GAAG,CAACA,IAEJ,OACE,uBACE8kB,UAAWwH,GACT,yBACA,CAAEvtB,UAAS+7B,kBACX,SACA,UAEF,qBAAIhW,UAAU,gCAA+B,wBAC7C,uBAAMA,UAAU,+BAA8B,SAC5C,sBAAKG,IAAKue,EAASQ,wBAAyB,CAAEC,OAAQR,SAI9D,ICzCeS,I,OCMA,SAAH,WACV9+B,UAAE,MAAG,GAAE,EACP++B,EAAO,EAAPA,QAAQ,EAAD,EACPt6B,eAAO,OAAO,EACd6e,EAAK,EAALA,MACA0b,EAAQ,EAARA,SAAS,EAAD,EACRtf,iBAAS,MAAG,GAAE,SAEd,uBACEA,UAAWwH,GAAUzF,KAAW,kBAAmB/B,GAAY,CAC7Djb,YACC,UAEH,wBACEzE,GAAE,gCAA2BA,GAC7B0f,UAAU,wBACVnmB,KAAK,WACL,yCAAiCwlC,GACjCA,QAASA,EACT/7B,UAAWyB,EACXu6B,SAAUA,IAEZ,wBACEtf,UAAWwH,GAAU,wBAAyB,CAC5C6X,QAASt6B,GAAWs6B,IAEtBE,QAAO,gCAA2Bj/B,GAAK,SAEtCsjB,MAEC,GCpCO4b,GCwRAvc,aApBgB,SAACzlB,EAAO43B,GAAQ,qBAC7Cn7B,QAAS2f,GAAsBpc,GAC/BiiC,SAAU5lB,GAAuBrc,GACjC8K,MAAO9K,EAAM8K,MACbqpB,YAAan0B,EAAMvD,QAAQ8J,MACxBqxB,EAAQ,IAGqB,SAACx3B,GAAQ,MAAM,CAC/C8hC,qBAAsB,SAAC70B,GACrBjN,EAASuM,GAAkBU,GAC7B,EACA80B,aAAc,SAAC1lC,GACb2D,E7FxEG,SAAoB3D,GACzB,MAAO,CACLJ,KAAMuB,EACNnB,UAEJ,C6FmEa2lC,CAAW3lC,GACtB,EACA4lC,sBAAuB,SAAC5lC,GACtB2D,EAASvD,EAAgBJ,GAC3B,EACD,GAEcgpB,EAjQE,SAAH,GAQP,IAAD,IAPJhpB,eAAO,OAAO,EACdwlC,EAAQ,EAARA,SACAn3B,EAAK,EAALA,MACAqpB,EAAW,EAAXA,YACAgO,EAAY,EAAZA,aACAD,EAAoB,EAApBA,qBACAG,EAAqB,EAArBA,sBAEQhQ,EAAoB0F,KAApB1F,gBAERlS,qBAAU,kBAAMgiB,GAAa,EAAM,GAAE,CAACF,EAAUE,IAEhDhiB,qBACE,kBAAMkiB,GAAsB,EAAM,GAClC,CAACJ,EAAUI,IAGb,IAAMC,EAAgC,UAAX,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAU5lC,MACvBkmC,EAAgC,UAAX,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAU5lC,MACvBmmC,EAAsC,gBAAX,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAU5lC,MAC7BomC,EAAevsB,GAAqB,OAAR+rB,QAAQ,IAARA,OAAQ,EAARA,EAAUn7B,YAAqB,OAARm7B,QAAQ,IAARA,OAAQ,EAARA,EAAU5lC,MAC7DqmC,EAAUjvB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAUt7B,MAC5Bg8B,EAAWlvB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAUr7B,OAC7Bg8B,EAAkBnvB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAUp7B,cACpCg8B,EAAUpvB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAU17B,MAC5Bu8B,EAAervB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAUl7B,cACjCg8B,EAAgBtmC,GAAW03B,GAAe0O,EAC1CG,EAAiBH,EAEnB57B,EAAqB,OAARg7B,QAAQ,IAARA,OAAQ,EAARA,EAAUh7B,WACtBA,IAEHA,EAAaq7B,EACT,8EACA,MAIN,IA0B4BW,EA1BGC,EAiBzBC,EAAoB,WACxBd,GAAsB,EACxB,EAWA,OACE,uCACE,eAAC,GAAY,CAAC5lC,QAASsmC,EAAerlC,MAAe,OAARukC,QAAQ,IAARA,OAAQ,EAARA,EAAU17B,OACvD,sBAAKic,UAAWwH,GAAU,oBAAqB,CAAEvtB,WAAW,SAAS,SAClEwlC,GACC,uCACE,uBAAKzf,UAAU,oCAAmC,UAChD,uBAAKA,UAAU,4BAA2B,UACxC,eAAC,GAAQ,CACPA,UAAU,0BACVjhB,KAAMkhC,IAER,qBAAIjgB,UAAU,2BAA0B,SAAEyf,EAAShmC,UAErD,eAAC,GAAU,CACTsnB,UAAU,uBACVf,UAAWwH,GAAU,kCAAmC,CACtD6Y,YAEFpf,UAAWwP,IAAMnO,SACjBvjB,KAAM88B,GACNxa,QAzCO,WAEnBqe,EAAqB,MAErB7P,GACF,IAsCa2Q,GACC,eAAC,GAAM,CACLlgC,GAAG,OACH++B,QAAS1N,EACT5sB,QAASs7B,EACTzc,MAAM,YACN0b,SAAU,SAAC9e,GACTmf,EAAanf,EAAMxa,OAAOq5B,QAC5B,OAIN,uBAAKrf,UAAU,0BAAyB,UACtC,sBAAIA,UAAU,gCAA+B,UAC3C,eAAC,GAAW,CACVkQ,MAAM,QACNh1B,OArEewlC,EAqEcjB,EAAS5lC,KApE/B,SAAjB6mC,EACK,OACmB,SAAjBA,EACF,UAGFA,MAgEOJ,GACA,eAAC,GAAW,CACVpQ,MAAM,gBACNj2B,QAAS8lC,EACTlhB,KAAK,OACL+E,MAAO6b,EAASn7B,YAChBpJ,OAnDUulC,EAmDgBhB,EAASn7B,YAlDtC,OAANm8B,QAAM,IAANA,OAAM,EAANA,EAAQ/hB,MAAM,KAAKkiB,SAqDbN,GACC,uCACE,eAAC,GAAW,CACVpQ,MAAM,iBACNj2B,QAAS8lC,EACTlhB,KAAK,OACL3jB,MAAOukC,EAASl7B,eAElB,eAAC,GAAW,CACV2rB,MAAM,oBACNj2B,QAAS8lC,EACTlhB,KAAK,OACL3jB,MAAOukC,EAASj7B,qBAItB,eAAC,GAAW,CACV0rB,MAAM,aACNrR,KAAK,OACL3jB,MA7EW,SAACulC,GAC1B,OAAa,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQr/B,QAAQ,OAAQ,GACjC,CA2EuBy/B,CAAmBpB,EAASz7B,YAEpCo8B,GACC,eAAC,GAAW,CACVlQ,MAAM,+BACN5nB,MAAOA,EACPrO,QAAS8lC,EACTlhB,KAAK,eACLqd,QAAQ,EACRD,QAAQ,EACR/gC,MAAOukC,EAASp7B,eAGpB,eAAC,GAAW,CACV6rB,MAAM,cACN5nB,MAAOA,EACPrO,QAAS+lC,GAAoBF,EAC7BjhB,KAAK,aACLqd,QAAQ,EACRD,QAAQ,EACR/gC,MAAOukC,EAASlgC,WAChB48B,MAAO,KAET,eAAC,GAAW,CACVjM,MAAM,UACNj2B,QAAS6lC,EACT5kC,MAAOukC,EAASx7B,SAElB,eAAC,GAAW,CACVisB,MAAM,WACNj2B,QAAS6lC,EACT5kC,MAAOukC,EAASv7B,UAEC,SAAlBu7B,EAAS5lC,MACR,eAAC,GAAW,CACVq2B,MAAM,QACNrR,KAAK,QACLqd,QAAQ,EACRhhC,MAAOukC,EAASh8B,OAGpB,eAAC,GAAW,CAACysB,MAAM,eAAej2B,QAASgX,QAAQxM,GAAY,SAC7D,eAAC,GAAa,CAACqyB,QAASryB,SAG3By7B,GACC,uCACE,sBACElgB,UAAU,0BACVqB,QAASsf,EAAkB,SAE3B,eAAC,GAAW,CACV/mC,KAAM6lC,EAASt7B,KAAKvK,KACpB0hC,OAAQmE,EAASt7B,KAAKm3B,OACtBzO,KAAK,cAGT,0BACE7M,UAAU,iCACVqB,QAASsf,EAAkB,UAE3B,eAAC,GAAU,CAAC3gB,UAAU,wCACtB,uBAAMA,UAAU,sCAAqC,+CAM1DmgB,GACC,uCACE,sBACEngB,UAAU,0BACVqB,QAASsf,EAAkB,SAE3B,sBACEG,IAAI,uBACJ9gB,UAAU,gCACVie,IAAG,gCAA2BwB,EAASr7B,WAG3C,0BACE4b,UAAU,iCACVqB,QAASsf,EAAkB,UAE3B,eAAC,GAAU,CAAC3gB,UAAU,wCACtB,uBAAMA,UAAU,sCAAqC,qDAYzE,IC5Pe+gB,GANM,SAAH,OAAM/gB,EAAS,EAATA,UAAS,OAC/B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,wGACJ,ECGOsgC,GANE,SAAH,OAAMhhB,EAAS,EAATA,UAAS,OAC3B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,mSACJ,ECHOugC,I,OCqFAhe,aAZgB,SAACzlB,GAAK,MAAM,CACzCiiC,SAAU5lB,GAAuBrc,GACjC8K,MAAO9K,EAAM8K,MACbrO,QAASuD,EAAMvD,QAChB,IAEiC,SAAC2D,GAAQ,MAAM,CAC/CsoB,SAAU,SAAChrB,GACT0C,EAASvD,EAAgBa,GAC3B,EACD,GAEc+nB,EA5EO,SAAH,GAAyC,IAAnCwc,EAAQ,EAARA,SAAUvZ,EAAQ,EAARA,SAAUjsB,EAAO,EAAPA,QACrCimC,EAAUjvB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAUt7B,MAC5Bg8B,EAAWlvB,QAAgB,OAARwuB,QAAQ,IAARA,OAAQ,EAARA,EAAUr7B,OAEnC,IAAKnK,EAAQ4O,gBAAmBq3B,IAAYC,EAC1C,OAAO,KAGT,IAAMF,EAAevsB,GAAqB,OAAR+rB,QAAQ,IAARA,OAAQ,EAARA,EAAUn7B,YAAqB,OAARm7B,QAAQ,IAARA,OAAQ,EAARA,EAAU5lC,MAE7DqnC,EAAsB,WAC1Bhb,GAAS,EACX,EAEA,OACE,uBAAKlG,UAAU,0BAAyB,UACtC,uBAAKA,UAAU,2BAA0B,UACvC,0BACEA,UAAU,4BACVqB,QAAS6f,EAAoB,UAE7B,eAAC,GAAQ,CAAClhB,UAAU,mCACpB,uBAAMA,UAAU,iCAAgC,qBAElD,uBAAKA,UAAU,8BAA6B,UAC1C,eAAC,GAAQ,CAACA,UAAU,4BAA4BjhB,KAAMkhC,IACtD,uBAAMjgB,UAAU,6BAA4B,SAAEyf,EAAShmC,aAG1DymC,GACC,eAAC,GAAW,CACVtmC,KAAM6lC,EAASt7B,KAAKvK,KACpB0hC,OAAQmE,EAASt7B,KAAKm3B,OACtBzO,KAAK,UAGRsT,GACC,sBAAKngB,UAAU,4BAA2B,SACxC,sBAAKA,UAAU,0CAAyC,SACtD,sBACE8gB,IAAI,uBACJ9gB,UAAU,0CACVie,IAAG,gCAA2BwB,EAASr7B,aAK/C,sBAAK4b,UAAU,8BAA6B,SAC1C,0BACEA,UAAU,qCACVqB,QAAS6f,EAAoB,UAE7B,eAAC,GAAY,CAAClhB,UAAU,4CACxB,uBAAMA,UAAU,0CAAyC,SACtDkgB,EACG,gCACA,qCAMhB,K,UCtEaiB,GAAqBxhB,aAAG,2YAmBxByhB,GAAsB,WACjC,MACEC,aAAYF,IAAmB,oBAD1BG,EAAiB,YAGxB,MAAO,CACLC,iBAAkB,SAAUC,GAC1BF,EAAkB,CAAEE,aACtB,EACAj/B,MAP+B,EAALA,MAQ1BzF,QARwC,EAAPA,QASjCk3B,MAT+C,EAALA,MAW9C,EC1BeyN,GANI,SAAH,OAAMzhB,EAAS,EAATA,UAAS,OAC7B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,yOACJ,ECGOghC,GANM,SAAH,OAAM1hB,EAAS,EAATA,UAAS,OAC/B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,0BACJ,ECGOihC,GANI,SAAH,OAAM3hB,EAAS,EAATA,UAAS,OAC7B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,6GACJ,ECGOkhC,GANY,SAAH,OAAM5hB,EAAS,EAATA,UAAS,OACrC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,6DACJ,ECGOmhC,GANE,SAAH,OAAM7hB,EAAS,EAATA,UAAS,OAC3B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,qHACJ,ECHOohC,I,OCWe,SAAH,OACzBv7B,EAAQ,EAARA,SACAw7B,EAAe,EAAfA,gBAAgB,EAAD,EACf9nC,eAAO,MAAG,CAAE8O,SAAS,GAAM,SAE3B,qCACE,sBAAIiX,UAAU,iCAAgC,UAC5C,eAAC,GAAU,CACT3c,OAAQpJ,EAAQ8O,QAChBgY,UAAS,UAAK9mB,EAAQ8O,QAAU,OAAS,OAAM,SAC/CiX,UAAW+B,KACT,uBACA,6BACA,CAAE,iCAAkC9nB,EAAQ8O,UAE9CmY,cAAa,0BAAqBjnB,EAAQ8O,SAC1ChK,KAAM8iC,GACN1gB,UAAS,UAAKlnB,EAAQ8O,QAAU,OAAS,OAAM,SAC/CsY,QAAS,kBAAM0gB,GAAiB9nC,EAAQ8O,QAAQ,IAEjDxC,MAEF,GCzBUy7B,GARS,SAAH,OAAMhiB,EAAS,EAATA,UAAS,OAClC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,6BACE,uBAAMvf,EAAE,gNAEN,E,UCJFuhC,GAAa,CACjBC,YAAa,CACXC,SAAU,CACR/V,UAAW,gBACXgW,WAAY,UACZC,QAAS,KAEXC,QAAS,CACPlW,UAAW,gBACXgW,WAAY,UACZC,QAAS,KAEXE,QAAS,CACPnW,UAAW,mBACXgW,WAAY,SACZC,QAAS,KAEXG,OAAQ,CACNpW,UAAW,mBACXgW,WAAY,SACZC,QAAS,MAGbI,YAAa,CACXN,SAAU,CACR/V,UAAW,gBACXgW,WAAY,UACZC,QAAS,KAEXC,QAAS,CACPlW,UAAW,gBACXgW,WAAY,UACZC,QAAS,KAEXE,QAAS,CACPnW,UAAW,kBACXgW,WAAY,SACZC,QAAS,KAEXG,OAAQ,CACNpW,UAAW,kBACXgW,WAAY,SACZC,QAAS,OAKFK,GAAY,SAAH,GAAkD,IAA5Cn8B,EAAQ,EAARA,SAAUo8B,EAAS,EAATA,UAAWvZ,EAAQ,EAARA,SAAU5rB,EAAK,EAALA,MACnDolC,EAAe,CACnBzZ,WAAW,gDAGb,OACE,eAAC0Z,GAAA,EAAU,CAACC,GAAItlC,EAAOulC,QAAS3Z,EAAS,SACtC,SAAC5rB,GAAK,OACL,sBACEmoB,MAAK,6BACAid,GACAX,GAAWU,GAAWnlC,IACzB,SAED+I,GACG,GAId,EAEay8B,GAAuB,SAAH,GAAuC,IAAjCxlC,EAAK,EAALA,MAAO4rB,EAAQ,EAARA,SAAU7iB,EAAQ,EAARA,SACtD,OACE,eAAC,GAAS,CACRA,SAAUA,EACVo8B,UAAU,cACVvZ,SAAUA,EACV5rB,MAAOA,GAGb,EAEaylC,GAAuB,SAAH,GAAuC,IAAjCzlC,EAAK,EAALA,MAAO4rB,EAAQ,EAARA,SAAU7iB,EAAQ,EAARA,SACtD,OACE,eAAC,GAAS,CACRA,SAAUA,EACVo8B,UAAU,cACVvZ,SAAUA,EACV5rB,MAAOA,GAGb,ECzFe0lC,GCeyB,SAAH,GAW9B,IAVLC,EAAc,EAAdA,eACAC,EAAoB,EAApBA,qBACAC,EAAiB,EAAjBA,kBACAC,EAAe,EAAfA,gBACAC,EAAoB,EAApBA,qBACAC,EAAiB,EAAjBA,kBACAC,EAAuB,EAAvBA,wBACAC,EAAmB,EAAnBA,oBACA1N,EAAc,EAAdA,eACA2N,EAAqB,EAArBA,sBAEQpC,EAAqBH,KAArBG,iBASR,OACE,gBAAC,GAAc,CACb4B,eAAgBA,EAChBpB,gBAAiByB,EACjBvpC,QAAS,CAAE8O,QAASitB,GAAiB,UAErC,eAAC,GAAoB,CAACx4B,MAAO4lC,EAAsBha,SA7BxC,IA6B2D,SACnEga,GACC,uCACE,eAAC,GAAU,CACT//B,OAAQggC,EACRtiB,UAAU,sBACVf,UAAW,+BACX1c,SAAUmgC,EACV1kC,KAAMijC,GACN7gB,UACGsiB,EAEG,KAFoB,UACjBJ,EAAoB,UAAY,SAAQ,iBAGjDhiB,QAAS,kBAAMkiB,GAAsBF,EAAkB,IAEzD,eAAC,GAAU,CACTtiB,UAAU,kBACVf,UAAW,oCACXjhB,KAAM4iC,GACNxgB,UAAU,kBACVE,QAAS,kBAAMsiB,GAAsB,EAAK,SAKlD,eAAC,GAAoB,CAACnmC,OAAQ4lC,EAAsBha,SAvDzC,IAuD4D,UACnEga,GACA,uCACE,eAAC,GAAU,CACT//B,OAAuB,OAAfigC,QAAe,IAAfA,OAAe,EAAfA,EAAiBM,SACzB7iB,UAAU,sBACVf,UAAW,+BACXjhB,KACiB,OAAfukC,QAAe,IAAfA,KAAiBM,SAAWlC,GAAeE,GAE7CzgB,UAAS,UACQ,OAAfmiB,QAAe,IAAfA,KAAiBM,SAAW,aAAe,YAE7CviB,QAAS,WAnDnBkgB,EAAiB,CACfsC,MAAOP,EAAgBhjC,GACvBwjC,SAAU,CAAEF,WAA0B,OAAfN,QAAe,IAAfA,KAAiBM,YAiDD,IAEjC,eAAC,GAAU,CACT7iB,UAAU,mBACVf,UAAW,+BACXjhB,KAAM0iC,GACNtgB,UAAS,eACTE,QAAS,kBAAMqiB,GAAoB,EAAK,IAE1C,eAAC,GAAU,CACT3iB,UAAU,kBACVf,UAAW,oCACXjhB,KAAM4iC,GACNxgB,UAAU,kBACVE,QAAS,kBAAMsiB,GAAsB,EAAK,WAOxD,EChGeI,GANG,SAAH,OAAM/jB,EAAS,EAATA,UAAS,OAC5B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,oJACJ,ECGOsjC,GANI,SAAH,OAAMhkB,EAAS,EAATA,UAAS,OAC7B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,iRACJ,ECHOujC,GC0FAhhB,aAvBgB,SAACzlB,GAAK,MAAM,CACzC0mC,iBAAkB1mC,EAAMkG,MAAMR,IAAIjC,OAClCkiC,eAAgB3lC,EAAM4L,QAAQL,QAC9BV,WAAY7K,EAAM6K,WAClBpO,QAASuD,EAAMvD,QACfkqC,cAAelzB,QAAQ8B,GAAmBvV,GAAOyD,QAClD,IAEiC,SAACrD,GAAQ,MAAM,CAC/CwmC,oBAAqB,SAAClpC,GACpB0C,EAAS5D,EAAkBkB,GAC7B,EACAmpC,eAAgB,SAACnpC,GjH9DZ,IAAsBjB,EiH+DzB2D,GjH/DyB3D,EiH+DHgX,QAAQ/V,GjH9DzB,CACLrB,KAAMC,EACNG,YiH6DF,EACA8nC,gBAAiB,SAAC9nC,GAChB2D,EjHyBG,SAAuB3D,GAC5B,MAAO,CACLJ,KAAMY,EACNR,UAEJ,CiH9BaqqC,CAAcrqC,GACzB,EACAsqC,mBAAoB,SAACrpC,GjHHhB,IAA0BmN,EiHI7BzK,GjHJ6ByK,EiHIH4I,QAAQ/V,GjHH7B,CACLrB,KAAMU,EACN8N,eiHEF,EACD,GAEc4a,EAxEwB,SAAH,OAClCihB,EAAe,EAAfA,gBACAf,EAAc,EAAdA,eACAiB,EAAmB,EAAnBA,oBACAC,EAAc,EAAdA,eACAtC,EAAe,EAAfA,gBACAwC,EAAkB,EAAlBA,mBACAl8B,EAAU,EAAVA,WACApO,EAAO,EAAPA,QACAkqC,EAAa,EAAbA,cAAa,OAEb,qCACE,gBAAC,GAAc,CACbhB,eAAgBA,EAChBpB,gBAAiBA,EACjB9nC,QAASA,EAAQ,UAEjB,eAAC,GAAU,CACToJ,OAAQgF,EACR0Y,UAAS,UAAK1Y,EAAa,OAAS,OAAM,gBAC1C2X,UAAW,+BACXjhB,KAAMglC,GACN5iB,UAAS,UAAK9Y,EAAa,OAAS,OAAM,gBAC1CgZ,QAAS,kBAAMkjB,GAAoBl8B,EAAW,EAC9CpO,QAASA,EAAQwO,WAEnB,eAAC,GAAU,CACTpF,OAAQ8gC,EACRpjB,UAAS,2BAAsBojB,EAAgB,MAAQ,MACvDnkB,UAAW,+BACXkB,cAAa,yBAAoBijB,GACjC7gC,SAAU4gC,EACVnlC,KAAMilC,GACN7iB,UAAS,UAAKgjB,EAAgB,OAAS,OAAM,WAC7C9iB,QAAS,kBAAMgjB,GAAgBF,EAAc,EAC7ClqC,QAASA,EAAQyO,WAEnB,eAAC,GAAU,CACTqY,UAAU,6BACVf,UAAW,+BACXjhB,KAAM4iC,GACNxgB,UAAU,uBACVE,QAAS,kBAAM+iB,GAAoB,EAAK,EACxCnqC,QAASA,EAAQ0O,gBAGpB,IC3DQ67B,GAAe,WAC1B,IAAQC,EAAYvsB,KAAK/P,MAAjBs8B,QACR,EAAgCvsB,KAAKwsB,cAA7BjsB,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGT,EAAK,EAALA,MAAOa,EAAM,EAANA,OAEf8Z,EAAOhY,KAAKmM,IAAItO,EATD,GAUfoa,EAAOjY,KAAKmM,IAAIrO,EAVD,GAWfoa,EAAOlY,KAAK8K,IAAIjN,EAAIR,EAAOwsB,EAAQxsB,MAXpB,GAYf8a,EAAOnY,KAAK8K,IAAIhN,EAAII,EAAQ2rB,EAAQ3rB,OAZrB,GAcrBZ,KAAKuQ,GAAGkc,SAAS5sB,QAAQF,KAAK,IAAK,GAAGA,KAAK,IAAK,GAEhDK,KAAKuQ,GAAGkc,SACL9sB,KAAK,YAAY,aAAD,OAAe+a,EAAI,aAAKC,EAAI,MAC5Chb,KAAK,QAAS+C,KAAKmM,IAAI,EAAG+L,EAAOF,IACjC/a,KAAK,SAAU+C,KAAKmM,IAAI,EAAGgM,EAAOF,GACvC,EAKalJ,GAAY,WACvB,MACEzR,KAAK/P,MADCoO,EAAW,EAAXA,YAAagR,EAAW,EAAXA,YAAasC,EAAU,EAAVA,WAAYC,EAAY,EAAZA,aAAcvkB,EAAK,EAALA,MAG5D2S,KAAKuQ,GAAGljB,MAAQ2S,KAAKuQ,GAAG0B,UACrBrS,UAAU,0BACVle,KAAK2L,GAAO,SAAChC,GAAI,OAAKA,EAAKjD,EAAE,IAEhC,IAAM+pB,EAAanS,KAAKuQ,GAAGljB,MACxBwS,QACAH,OAAO,KACPC,KAAK,QAAS,yBAEjBwS,EACGxS,KAAK,aAAa,SAACtU,GAAI,0BAAkBA,EAAKkV,EAAC,aAAKlV,EAAKmV,EAAC,QAC1Db,KAAK,UAAW,GAEnBwS,EAAWzS,OAAO,QAElBM,KAAKuQ,GAAGljB,MACLwjB,OACAI,WAAW,cACXC,SAASlR,KAAKmR,UACdxR,KAAK,UAAW,GAChBO,SAEHF,KAAKuQ,GAAGljB,MAAQ2S,KAAKuQ,GAAGljB,MACrByjB,MAAMqB,GACNxS,KAAK,WAAW,SAACtU,GAAI,OAAKA,EAAKjD,EAAE,IACjCkqB,QAAQ,iCAAiC,SAACjnB,GAAI,OAAKsmB,EAAWtmB,EAAKjD,GAAG,IACtEkqB,QAAQ,mCAAmC,SAACjnB,GAAI,OAAKumB,EAAavmB,EAAKjD,GAAG,IAC1EkqB,QACC,gCACA,SAACjnB,GAAI,OAAKgT,IAAgBgR,EAAYhkB,EAAKjD,GAAG,IAGlD4X,KAAKuQ,GAAGljB,MACL4jB,WAAW,gBACXC,SAASlR,KAAKmR,UACdxR,KAAK,UAAW,GAChBA,KAAK,aAAa,SAACtU,GAAI,0BAAkBA,EAAKkV,EAAC,aAAKlV,EAAKmV,EAAC,QAC1DmO,MACAnlB,OAAM,WAAO,IAEhBwW,KAAKuQ,GAAGljB,MACLmS,OAAO,QACPG,KAAK,SAAS,SAACtU,GAAI,OAAKA,EAAK0U,MAAQ2sB,GAAWrhC,EAAK,IACrDsU,KAAK,UAAU,SAACtU,GAAI,OAAKA,EAAKuV,OAAS8rB,GAAWrhC,EAAK,IACvDsU,KAAK,KAAK,SAACtU,GAAI,OAAMA,EAAK0U,MAAQ2sB,GAAWrhC,KAAU,CAAC,IACxDsU,KAAK,KAAK,SAACtU,GAAI,OAAMA,EAAKuV,OAAS8rB,GAAWrhC,KAAU,CAAC,GAC9D,EAEMqhC,GAAa,SAACrhC,GAAI,MAAoB,SAAdA,EAAK1J,KAAkB,EAAI,EAAE,EC1D9CgrC,I,OAAO,kDAClB,WAAY18B,GAAQ,IAAD,EAuB0C,OAvB1C,qBACjB,cAAMA,IAiIR28B,eAAiB,WACf,EAAKC,iBAAkB,CACzB,EAAE,EAKFC,eAAiB,WACf,EAAKD,iBAAkB,CACzB,EAAE,EAKFE,kBAAoB,WAClB,EAAKC,eAAgB,EACrB,EAAKH,iBAAkB,CACzB,EAAE,EAMFI,cAAgB,SAAC3kB,GACf,EAAK0kB,eAAgB,EACrB,EAAKH,iBAAkB,EAEvB,EAAKK,cAAc5kB,GAAO,EAC5B,EAAE,EAMF6kB,eAAiB,SAAC7kB,GAEhB,EAAKrY,MAAMm9B,kBAAkB,CAC3BjS,UAAU,EACVpG,QAASzM,EAAM+kB,QAAU,GAAK,EAAKC,UACnCpS,SAAS,EACTjK,YAAY,GAEhB,EAAE,EAMFsc,qBAAuB,SAACjlB,GAEJ,EAAKgQ,aAAanQ,QAAQI,SAASD,EAAMxa,SAEzDwa,EAAMklB,gBAEV,EAAE,EAOFN,cAAgB,SAAC5kB,GAAkC,IAA3BmlB,EAAa,wDACnC,GAAI,EAAKT,eAAiB,EAAKH,gBAAiB,CAE9C,IAAMa,EAAOC,OAAO,IAAIC,MACxB,GAAIF,EAAO,EAAKG,mBAAqB,EAAKC,gBACxC,OAIF,MAAkC,EAAK79B,MAAMupB,UAArCzE,MAAOgZ,OAAU,MAAG,EAAC,EAC7B,EAA0B,EAAK99B,MAAMs8B,QAA7BxsB,EAAK,EAALA,MAAOa,EAAM,EAANA,OACf,EAAmD,EAAK3Q,MAAMoc,UAA/CmP,EAAU,EAAjBzb,MAA2B0b,EAAW,EAAnB7a,OAC3B,EAAyB8T,GAAiB,EAAKC,MAAK,IAA5CH,EAAGO,OAAK,MAAG,EAAC,EACdiZ,EAAgB,EAAKvV,OAAOtQ,QAAQ8R,wBAGpCgU,GAAY3lB,EAAM4lB,QAAUF,EAAcztB,GAAKwU,EAC/CoZ,GAAY7lB,EAAM8lB,QAAUJ,EAAcxtB,GAAKuU,EAC/CsZ,EAAyC,IAA9BtuB,EAAQgV,EAAQyG,GAC3B8S,EAA2C,IAAhC1tB,EAASmU,EAAQ0G,GAC5Blb,GAAK0tB,EAAWI,GAAWN,EAC3BvtB,GAAK2tB,EAAWG,GAAWP,EAGjC,EAAK99B,MAAMm9B,kBAAkB,CAC3B7sB,IACAC,IACAuU,MAAOgZ,EACP5S,UAAU,EACVD,SAAS,EACTjK,WAAYwc,IAGVA,IACF,EAAKI,mBAAqBH,EAE9B,CACF,EAjOE,EAAKvc,SAAW,IAChB,EAAK2c,gBAAkB,IACvB,EAAKR,UAAY,MAEjB,EAAKN,eAAgB,EACrB,EAAKH,iBAAkB,EACvB,EAAKgB,mBAAqB,EAE1B,EAAKvV,aAAeC,IAAMC,YAC1B,EAAKC,OAASF,IAAMC,YACpB,EAAKE,WAAaH,IAAMC,YACxB,EAAKI,SAAWL,IAAMC,YACtB,EAAK+V,YAAchW,IAAMC,YAEzB,EAAK0U,cAAgB,EAAKA,cAAc9U,KAAK,iBAC7C,EAAKwU,eAAiB,EAAKA,eAAexU,KAAK,iBAC/C,EAAK0U,eAAiB,EAAKA,eAAe1U,KAAK,iBAC/C,EAAK6U,cAAgB,EAAKA,cAAc7U,KAAK,iBAC7C,EAAK+U,eAAiB,EAAKA,eAAe/U,KAAK,iBAC/C,EAAKmV,qBAAuB,EAAKA,qBAAqBnV,KAAK,iBAC3D,EAAK2U,kBAAoB,EAAKA,kBAAkB3U,KAAK,iBAAM,CAC7D,CA2TC,OA3TA,8CAED,WACEpY,KAAKkZ,mBAELlZ,KAAK2U,KAAOf,GAAQ,CAClB7K,UAAW/I,KAAKyY,OAChB5E,QAAS7T,KAAK0Y,WACd1E,gBAAgB,IAGlBhU,KAAKoZ,0BACLpZ,KAAKqZ,QACP,GAAC,kCAED,WACErZ,KAAKsZ,4BACP,GAEA,qCAGA,WACE1vB,OAAO4e,iBAAiB,QAASxI,KAAKutB,qBAAsB,CAC1DiB,SAAS,IAEX5kC,OAAO4e,iBACLimB,GAAiB,aACjBzuB,KAAK+sB,kBAET,GAEA,wCAGA,WACEnjC,OAAO6e,oBAAoB,QAASzI,KAAKutB,sBACzC3jC,OAAO6e,oBACLgmB,GAAiB,aACjBzuB,KAAK+sB,kBAET,GAAC,gCAED,SAAmBxT,GACjBvZ,KAAKqZ,OAAOE,EACd,GAEA,oBAGA,WAAwB,IAAD,OAAhBA,EAAS,uDAAG,CAAC,EAClB,EAA+BvZ,KAAK/P,MAA5BlO,EAAO,EAAPA,QAASy3B,EAAS,EAATA,UAEjB,GAAIz3B,EAAS,CACX,IAAM2vB,EAAU,WAAH,2BAAO9iB,EAAK,yBAALA,EAAK,uBAAK,EAAK8iB,QAAQ9iB,EAAO2qB,EAAW,EAAKtpB,MAAO,EAGvEyhB,EACE,UACA,QACA,eACA,cACA,cACA,iBAGFD,GAAUmB,KAAK5S,MAGb0R,EAAQ,UAAW,cAAgB8H,EAAU0B,SAC/CoR,GAAa1Z,KAAK5S,MAGhB0R,EAAQ,UAAW,QAAS,aAAc,cAC5C1R,KAAK0Z,WAET,CACF,GAEA,qBAIA,SAAQzpB,EAAO2pB,EAASC,GACtB,OACED,GACAC,GACA5pB,EAAM6J,MAAK,SAACggB,GAAI,OAAKF,EAAQE,KAAUD,EAAQC,EAAK,GAExD,GAEA,8BAGA,WACE9Z,KAAKuQ,GAAK,CACRhR,IAAKC,aAAOQ,KAAKyY,OAAOtQ,SACxB0L,QAASrU,aAAOQ,KAAK0Y,WAAWvQ,SAChC8J,UAAWzS,aAAOQ,KAAK4Y,SAASzQ,SAChCskB,SAAUjtB,aAAOQ,KAAKuuB,YAAYpmB,SAEtC,GAEA,uBA0GA,WACE,MAA+BnI,KAAK/P,MAA5Boc,EAAS,EAATA,UAAWkgB,EAAO,EAAPA,QACJmC,EAAgCnC,EAAvCxsB,MAAyB4uB,EAAcpC,EAAtB3rB,OACV4a,EAAoCnP,EAA3CtM,MAA2B0b,EAAgBpP,EAAxBzL,OAG3B,GAAK8tB,GAAalT,EAAlB,CAKA,IAGMtH,EAAYiB,GAAmB,CACnCC,OAJa,CAAE7U,EAAa,GAAVF,GAAeG,EAAa,GAAVH,IAKpCiV,UAAWoZ,EAAWruB,GACtBkV,WAAYoZ,EAAYtuB,GACxBmV,YAAagG,EACb/F,aAAcgG,IAIVW,EAAmB7H,GAASG,GAAiB1U,KAAK2U,OAGxDK,GACEhV,KAAK2U,KACLT,EACAkI,EAAmB,EAAIpc,KAAKmR,UAC5B,EAtBF,CAwBF,GAEA,yBAGA,WACE,MAAiCnR,KAAK/P,MAA9BupB,EAAS,EAATA,UAAWtpB,EAAS,EAATA,UACnB,EAIIwkB,GAAiB1U,KAAK2U,MAHrBia,EAAQ,EAAXpa,EACGqa,EAAU,EAAbtuB,EACGuuB,EAAU,EAAbtuB,EAGIuU,EAAQ6Z,EAAWpV,EAAUzE,MAC7BhV,EAAQ7P,EAAU6P,MAAQgV,EAC1BnU,EAAS1Q,EAAU0Q,OAASmU,EAIlC,MAAO,CAAExU,GAHEsuB,GAAcrV,EAAUjZ,EAAIrQ,EAAU7J,cAAgB0uB,EAGrDvU,GAFDsuB,EAAatV,EAAUhZ,EAAIuU,EAEvBhV,QAAOa,SACxB,GAEA,oBAGA,WAAU,IAAD,EACP,EAA0BZ,KAAK/P,MAAMs8B,QAA7BxsB,EAAK,EAALA,MAAOa,EAAM,EAANA,OACTmuB,EAAiB,CACrB7a,UAAU,0BAAD,OAA4BnU,EAAK,gBAItCivB,EAAIP,GACJQ,GAAW,GACfC,QAASlvB,KAAKmtB,gBAAc,cAC3B6B,EAAE,kBAAoBhvB,KAAK4sB,gBAAc,cACzCoC,EAAE,kBAAoBhvB,KAAK8sB,gBAAc,cACzCkC,EAAE,iBAAmBhvB,KAAKitB,eAAa,cACvC+B,EAAE,iBAAmBhvB,KAAKktB,eAAa,GAG1C,OACE,sBACEplB,UAAU,6BACV2F,MAAOzN,KAAK/P,MAAMlO,QAAUgtC,EAAiB,CAAC,EAAE,SAEhD,gDACEjnB,UAAU,yBACVG,IAAKjI,KAAKsY,cACN2W,GAAW,aAEf,uBACE7mC,GAAG,yBACH0f,UAAU,0BACV/H,MAAOA,EACPa,OAAQA,EACRmH,QAAO,cAAShI,EAAK,YAAIa,GACzBqH,IAAKjI,KAAKyY,OAAO,UAEjB,oBAAGrwB,GAAG,eAAe6f,IAAKjI,KAAK0Y,WAAW,SACxC,oBACEtwB,GAAG,gBACH0f,UAAU,0BACVG,IAAKjI,KAAK4Y,aAGd,uBACE9Q,UAAU,6BACVG,IAAKjI,KAAKuuB,qBAMtB,KAAC,EApViB,CAASzX,cAwVvBzW,GAAU,GAQVouB,GAAmB,SAACnmB,GAAK,OAC7B1e,OAAOulC,aACH7mB,EACAA,EAAMpf,QAAQ,UAAW,SAASA,QAAQ,UAAW,QAAS,EAK9DkmC,GAAa,SAAC9pC,GAClB,IAAM2mB,EAAO3mB,EAAMpB,MAAM+nB,MAAQ,CAAC,EAC5BuP,EAAavP,EAAKlM,OAAS,EAC3B0b,EAAcxP,EAAKrL,QAAU,EAEnC,GAAI4a,EAAa,GAAKC,EAAc,EAAG,CAErC,IAAM4T,EAAc7T,GAtBT,IAsBgCC,GAG3C,MAAO,CAAE1b,MAFK2C,KAAK8K,IAAI9K,KAAKmM,IAAIwgB,EAtBnB,KACA,KAuBGzuB,OAzBL,IA0Bb,CAGA,MAAO,CAAEb,MA5BM,IA4BWa,OA7Bb,IA8Bf,EAGMoc,GAAa,GACbC,GAAiB,CAAC,EC9YT0P,GDsaA5hB,aAtBgB,SAACzlB,EAAO43B,GAAQ,qBAC7Cn7B,QAASuD,EAAMvD,QAAQiP,QACvBu7B,QAAS6C,GAAW9pC,GACpB+Y,YAAa/Y,EAAM+F,KAAKK,QACxBwE,UAAWgT,GAAa5d,GACxBk0B,UAAW1V,GAAaxe,GACxB+mB,UAAW/mB,EAAMpB,MAAM+nB,MAAQgR,GAC/B5vB,MAAO/H,EAAMpB,MAAMmJ,OAAS2vB,GAC5B3N,YAAaD,GAAe9pB,GAC5BqsB,WAAYhU,GAAcrY,GAC1BssB,aAAcxT,GAAgB9Y,GAC9B6K,WAAY7K,EAAM6K,YACf+sB,EAAQ,IAGqB,SAACx3B,EAAUw3B,GAAQ,qBACnDkQ,kBAAmB,SAAClZ,GAClBxuB,EAAS/C,EAAWuxB,GACtB,GACGgJ,EAAQ,GAGEnS,CAA6C4hB,IEha7C2C,GANC,SAAH,OAAMxnB,EAAS,EAATA,UAAS,OAC1B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,8JACJ,ECGO+mC,GANE,SAAH,OAAMznB,EAAS,EAATA,UAAS,OAC3B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,wCACJ,ECGOgnC,GANG,SAAH,OAAM1nB,EAAS,EAATA,UAAS,OAC5B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,qBACJ,ECGOinC,GANG,SAAH,OAAM3nB,EAAS,EAATA,UAAS,OAC5B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,oHACJ,ECsEFknC,I,OAAY,SAAH,EAAeC,GAAJ,MAAgB,CACxC5a,MADwB,EAALA,OACH4a,GAAU,GAC1BzU,SAAS,EACTjK,YAAY,EACZ6K,MAAkB,IAAX6T,EACR,GC9EcC,GD+FA7kB,aAfgB,SAACzlB,GAAK,MAAM,CACzCvD,QAASuD,EAAMvD,QACf8tC,eAAgBvqC,EAAM4L,QAAQF,QAC9BwoB,UAAW1V,GAAaxe,GACzB,IAEiC,SAACI,GAAQ,MAAM,CAC/CoqC,gBAAiB,SAAC9sC,GAChB0C,EzHyEK,CACL/D,KAAMkB,EACNd,QyH3EuBiB,GACzB,EACAoqC,kBAAmB,SAAClZ,GAClBxuB,EAAS/C,EAAWuxB,GACtB,EACD,GAEcnJ,EAnFe,SAAH,GAMpB,IALLyO,EAAS,EAATA,UACAqW,EAAc,EAAdA,eACAC,EAAe,EAAfA,gBACA1C,EAAiB,EAAjBA,kBACArrC,EAAO,EAAPA,QAEQgzB,EAA8ByE,EAA9BzE,MAAOqG,EAAuB5B,EAAvB4B,SAAUC,EAAa7B,EAAb6B,SAEzB,OACE,qCACE,sBAAIvT,UAAU,iCAAgC,UAC3C+nB,GACC,eAAC,GAAU,CACT1kC,OAAQpJ,EAAQiP,QAChB6X,UAAS,uBAAkB9mB,EAAQiP,QAAU,MAAQ,MACrD8W,UAAW,uDACXjhB,KAAMyoC,GACNrmB,UAAS,UAAKlnB,EAAQiP,QAAU,OAAS,OAAM,YAC/CmY,QAAS,kBAAM2mB,GAAiB/tC,EAAQiP,QAAQ,EAChDjP,QAASA,EAAQgP,aAGrB,eAAC,GAAU,CACT8X,UAAW,UACXf,UAAW,2DACX1c,SAAU2pB,GAASsG,EACnBx0B,KAAM0oC,GACNtmB,UAAW,UACXE,QAAS,kBAAMikB,EAAkBsC,GAAUlW,EAAW,KAAK,EAC3Dz3B,QAASA,EAAQgP,aAEnB,eAAC,GAAU,CACT8X,UAAW,WACXf,UACE,4DAEF1c,SAAU2pB,GAASqG,EACnBv0B,KAAM2oC,GACNvmB,UAAW,WACXE,QAAS,kBAAMikB,EAAkBsC,GAAUlW,EAAW,IAAK,EAC3Dz3B,QAASA,EAAQgP,aAEnB,eAAC,GAAU,CACT8X,UAAW,aACXf,UAAW,yDACXjhB,KAAM4oC,GACNxmB,UAAW,aACXE,QAAS,kBAAMikB,EAAkBsC,GAAUlW,EAAW,GAAG,EACzDz3B,QAASA,EAAQgP,aAEnB,8BACE,wBAAM+W,UAAU,kCAAkC4D,MAAM,aAAY,UACjEhJ,KAAKC,MAAM,IAAM6W,EAAUzE,QAAU,IAAG,aAMrD,I,+BEjEegb,GANI,SAAH,OAAMjoB,EAAS,EAATA,UAAS,OAC7B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,gNACJ,ECEFwnC,I,OAAc,SAAH,GASV,IARL5kC,EAAQ,EAARA,SACA4sB,EAAK,EAALA,MACAiY,EAAM,EAANA,OACA7I,EAAQ,EAARA,SACA8I,EAAO,EAAPA,QACAC,EAAW,EAAXA,YACA//B,EAAK,EAALA,MACOggC,EAAU,EAAjBptC,MAEA,EAA8BmiB,oBAAS,GAAM,oBAAtCkrB,EAAO,KAAEC,EAAU,KAC1B,EAA0BnrB,mBAASirB,GAAW,oBAAvCptC,EAAK,KAAEutC,EAAQ,KAEtB9qB,qBAAU,WACW,OAAf2qB,GACFG,EAASH,EAEb,GAAG,CAACA,IAEJ,IAAMI,EAAiB,SAACloB,GACtBgoB,GAAW,GAEY,oBAAZJ,GACTA,EAAQ5nB,EAAO,CAAE+nB,SAAS,GAE9B,EAKMI,EAAiB,SAACnoB,GACtBgoB,GAAW,GAEW,oBAAXL,GACTA,EAAO3nB,EAAO,CAAE+nB,SAAS,EAAOrtC,MAAOslB,EAAMxa,OAAO9K,OAExD,EAcM0tC,EAAe1Y,GACnB,sBAAKlQ,UAAU,sBAAqB,SAAEkQ,IAGxC,OACE,sBAAKlQ,UAAU,6BAA4B,SACzC,uBACEA,UAAW+B,KACT,eAAe,iBAAD,OACGzZ,GACjB,CAAE,yBAA0BhF,GAC5B,CAAE,wBAAyBilC,IAE7BH,QAASM,EACTP,OAAQQ,EAAe,UAEtBC,EACD,wBACE5oB,UAAU,sBACV1c,SAAUA,EACV6kC,OAAQQ,EACRrJ,SA7Be,SAAC9e,GACtBioB,EAASjoB,EAAMxa,OAAO9K,OAEE,oBAAbokC,GACTA,EAAS9e,EAAO,CAAEtlB,MAAOslB,EAAMxa,OAAO9K,OAE1C,EAwBQktC,QAASM,EACTL,YAAaA,GAAe,GAC5BxuC,KAAK,OACLqB,MAAOA,GAAS,KAElB,sBACE,cAAY,OACZ8kB,UAAU,qBACV,aAAY9kB,GAAS,SAK/B,GAEAgtC,GAAY3lB,aAAe,CACzBjf,UAAU,EACV4sB,MAAO,KACPiY,OAAQ,KACR7I,SAAU,KACV8I,QAAS,KACTC,YAAa,KACb//B,MAAO,QACPpN,MAAO,MAsCMgtC,IC1IAA,GD0IAA,GEjITW,GAAoB,SAAC1gC,GACzB,IACE5B,EAWE4B,EAXF5B,SACAuiC,EAUE3gC,EAVF2gC,UACAT,EASElgC,EATFkgC,YACAF,EAQEhgC,EARFggC,OACA7I,EAOEn3B,EAPFm3B,SACAyJ,EAME5gC,EANF4gC,QACAX,EAKEjgC,EALFigC,QACAY,EAIE7gC,EAJF6gC,SACA1gC,EAGEH,EAHFG,MACA2gC,EAEE9gC,EAFF8gC,gBACA/tC,EACEiN,EADFjN,MAGF,OACE,wBACE8kB,UAAW+B,KAAW,QAAS,aAAa,cAAD,OAAgBzZ,GAAS,CAClE,sBAAuBwgC,IAEzBE,SAAUA,EACV/kB,KAAM1d,EAAW,WAAa,SAAS,UAEvC,wBAAOyZ,UAAU,oBAAoBuf,QAAQ,aAAY,oBAGzD,sBAAKvf,UAAU,2BAA0B,SACvC,eAAC,GAAU,CAACA,UAAU,0BAExB,eAAC,GAAW,CACV1f,GAAG,aACH+nC,YAAaA,EACb/I,SAAUA,EACV8I,QAASA,EACTD,OAAQA,EACRjtC,MAAOA,EACPoN,MAAOA,EACPzO,KAAK,WAEP,sBACEmmB,UAAW+B,KAAW,2BAA4B,CAChD,oCAAqCknB,IACpC,SAEH,yBACEjpB,UAAU,cACVmoB,OAAQA,EACR9mB,QAAS0nB,EACTX,QAASA,EAAQ,SAEjB,eAAC,GAAS,CAACpoB,UAAU,4BAGxBzZ,IAGP,EAEAsiC,GAAkBtmB,aAAe,CAC/Bhc,SAAU,KACVyiC,SAAU,MAkDGH,UCnHTK,I,OAAY,SAAH,GAUR,IATL3iC,EAAQ,EAARA,SACA4hC,EAAM,EAANA,OACA7I,EAAQ,EAARA,SACAyJ,EAAO,EAAPA,QACAX,EAAO,EAAPA,QACAY,EAAQ,EAARA,SACAX,EAAW,EAAXA,YACA//B,EAAK,EAALA,MACOggC,EAAU,EAAjBptC,MAEA,EAA0BmiB,mBAASirB,GAAW,oBAAvCptC,EAAK,KAAEutC,EAAQ,KACtB,EAAkCprB,oBAAS,GAAM,oBAA1CyrB,EAAS,KAAEK,EAAY,KAC9B,EAA8C9rB,mBAAwB,KAAfirB,GAAkB,oBAAlEW,EAAe,KAAEG,EAAkB,KAE1CzrB,qBAAU,WACR8qB,EAASH,GACTc,EAAkC,KAAfd,EACrB,GAAG,CAACA,IA2EJ,OACE,eAAC,GAAiB,CAChBH,OA5CmB,SAACxgC,GACtBwhC,GAAa,GAGS,oBAAXhB,GACTA,EAAOxgC,EAAE3B,OAAO9K,MAEpB,EAsCI4tC,UAAWA,EACXT,YAAaA,EACb/I,SA1EmB,SAAC33B,GACtB8gC,EAAS9gC,EAAE3B,OAAO9K,OAClBkuC,EAAsC,KAAnBzhC,EAAE3B,OAAO9K,OAGJ,oBAAbokC,GACTA,EAAS33B,EAAE3B,OAAO9K,MAEtB,EAmEI6tC,QApCmB,SAACvoB,GACtBioB,EAAS,IACTW,GAAmB,GAGI,oBAAZL,GACTA,IAIsB,oBAAbzJ,GACTA,EAAS,IAGX9e,EAAMklB,gBACR,EAsBI0C,QA9DmB,SAACzgC,GACtBwhC,GAAa,GAGU,oBAAZf,GACTA,EAAQzgC,EAAE3B,OAAO9K,MAErB,EAwDI8tC,SAjBkB,SAACrhC,GACG,oBAAbqhC,GACTA,EAAS,CACPrhC,IACA/N,KAAMsB,GAGZ,EAWI+tC,gBAAiBA,EACjB/tC,MAAOA,EACPoN,MAAOA,EAAM,SAEZ/B,GAGP,GAEA2iC,GAAU3mB,aAAe,CACvBhc,SAAU,KACV8hC,YAAa,iBACbF,OAAQ,KACR7I,SAAU,KACVyJ,QAAS,KACTX,QAAS,KACTY,SAAU,KACV1gC,MAAO,OACPpN,MAAO,IA0CMguC,ICtKAA,GDsKAA,GE/FAjmB,I,OAAAA,aAJgB,SAACzlB,GAAK,MAAM,CACzC8K,MAAO9K,EAAM8K,MACd,GAEc2a,EA9DW,SAAH,GAAqD,IAA/ComB,EAAmB,EAAnBA,oBAAqB35B,EAAW,EAAXA,YAAapH,EAAK,EAALA,MACvD2Y,EAAYb,iBAAO,MAOnBkpB,EAAsB,SAAC9oB,GAC3B,IAAM+oB,EAAuB,MAAd/oB,EAAMpgB,KAAiC,KAAlBogB,EAAMwD,QACpCwlB,EAAiBhpB,EAAMipB,SAAWjpB,EAAMkpB,QAC9C,GAAIH,GAAUC,EAAgB,CAC5B,IAAMG,EAAQ1oB,EAAUZ,QAAQyE,cAAc,SAC1Cvd,SAASqiC,gBAAkBD,GAC7BA,EAAMpc,QACN/M,EAAMklB,kBAENiE,EAAME,MAEV,CACF,EAKAlsB,qBAAU,WAER,OADA7b,OAAO4e,iBAAiB,UAAW4oB,GAC5B,kBAAMxnC,OAAO6e,oBAAoB,UAAW2oB,EAAqB,CAC1E,IAcA,OACE,sBACEtpB,UAAU,uBACV8pB,UAXkB,SAACtpB,IACa,WAAdA,EAAMpgB,KAAsC,KAAlBogB,EAAMwD,WAElDqlB,EAAoB,IACpBpoB,EAAUZ,QAAQyE,cAAc,SAAS+kB,OAE7C,EAMI1pB,IAAKc,EAAU,SAEf,eAAC,GAAS,CACRqe,SAAU+J,EACVhB,YAAa,SACb//B,MAAOA,EACPpN,MAAOwU,KAIf,KCjEeq6B,MCMAC,GANK,SAAH,OAAMhqB,EAAS,EAATA,UAAS,OAC9B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,4OACJ,ECGOupC,GANO,SAAH,OAAMjqB,EAAS,EAATA,UAAS,OAChC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,+YACJ,EC0BOwpC,GA7BO,SAAH,OAAMlqB,EAAS,EAATA,UAAkB,EAAPqf,QAAO,OACzC,sBACErf,UAAWA,EACXmqB,MAAM,6BACNlyB,MAAM,KACNa,OAAO,KACPmH,QAAQ,YAAW,SAEnB,+BACE,uBACEvf,EAAE,4BACF0rB,UAAU,2DAEZ,uBACE1rB,EAAE,8BACF0rB,UAAU,8EAEZ,uBACE1rB,EAAE,gCACF0rB,UAAU,gFAEZ,uBACE1rB,EAAE,8BACF0rB,UAAU,mFAGV,ECbFge,GAA0B,CAC9B,WAAY,iBACZ,YAAa,mBAOTC,GAAa,SAAC5Y,EAAW6Y,GAAS,O/HgChBniC,E+H9BpB,CACE,SACA,UACA,eACA,WACA,QACA,UACA,UACA,WACA,QACA,WACA,S/HmBkC4pB,E+HhBpCuY,K/HgB2BxY,E+HjB3BL,I/HmBWM,GAAW5pB,EAAM6J,MAAK,SAACggB,GAAI,OAAKF,EAAQE,KAAUD,EAAQC,EAAK,KAFvD,IAAC7pB,EAAO2pB,EAASC,C+HfpC,EAEEwY,GAAcC,gBAClB,YA2BO,IAAD,IA1BJvpB,UAAWoB,OAAS,MAAG,MAAK,EAC5Bhf,EAAM,EAANA,OACAg8B,EAAO,EAAPA,QACAoL,EAAY,EAAZA,aACAlkC,EAAQ,EAARA,SACAjD,EAAQ,EAARA,SACAonC,EAAK,EAALA,MACAnC,EAAO,EAAPA,QACAtuC,EAAO,EAAPA,QACAqG,EAAE,EAAFA,GACA4vB,EAAK,EAALA,MACAya,EAAK,EAALA,MACAlxC,EAAI,EAAJA,KACAolB,EAAI,EAAJA,KACAmD,EAAY,EAAZA,aACAE,EAAY,EAAZA,aACAod,EAAQ,EAARA,SACAje,EAAO,EAAPA,QACAupB,EAAQ,EAARA,SACA/wC,EAAI,EAAJA,KACAkF,EAAI,EAAJA,KAAK,EAAD,EACJ8rC,mBAAW,MAAGb,GAAW,MACzBc,qBAAa,MAAGb,GAAa,MAC7Bc,qBAAa,MAAGb,GAAa,EAC7Bc,EAAO,EAAPA,QACAC,EAAwB,EAAxBA,yBAEMC,EAA6B,oBAATrxC,EACpBsxC,EAAYD,EAAoBH,EAAgB,KAChDK,EAAYF,EAAoB7L,GAAWkJ,EAAUlJ,EACrDgM,EAAiBD,EAAYP,EAAcC,EAE3CQ,EADWjqB,GAAoB,WAATxC,EACE,SAAW,MAEzC,OACE,gBAACwD,EAAS,CACRrC,UAAW+B,KACT,+BAA+B,gCAAD,OACElD,GAChC,CACE,kCAAmC5kB,EACnC,iCAAkCoJ,EAClC,mCAAoCunC,EACpC,mCAAoCtnC,EACpC,qCAAsC8nC,EACtC,sCAAuC/nC,GAAUunC,KAGrDhnB,MAAOnqB,EACPuoB,aAAc/nB,EAAU+nB,EAAe,KACvCE,aAAcjoB,EAAUioB,EAAe,KAAK,UAE3CnjB,GACC,eAAC,GAAQ,CACPihB,UAAW+B,KACT,oCACA,+BACA,CACE,2CAA4C2oB,EAC5C,8CAA+CpnC,EAC/C,6CAA8CiD,EAC9C,4CAA6ClD,EAC7C,8CAA+CunC,IAGnD7rC,KAAMA,IAGV,eAACusC,EAAU,CACTtrB,UAAW+B,KACT,+BAA+B,sCAAD,OACQlD,GAAI,wCACTmsB,IAEnC,4CAAoCjsC,GACpCsiB,QAASA,EACT+mB,QAASpmB,EACTmmB,OAAQjmB,EACR0B,MAAOrd,EAAW,KAAO9M,EAAK,SAE9B,uBACEumB,UAAW+B,KACT,gCAAgC,uCAAD,OACQlD,GACvC,CACE,uCAAwC6rB,EACxC,0CAA2CpnC,IAG/C47B,wBAAyB,CACvBC,OAAQr+B,GAAeovB,EAAOka,SAIlB,kBAAVO,GACN,uBAAMtpB,QAASA,EAASrB,UAAW,gCAAgC,SAChE2qB,IAGJU,GACC,yBACE9L,QAASj/B,EACT0f,UAAW+B,KACT,uBAAuB,8BAAD,OACQlD,GAC9B,CACE,iCAAkCqsB,EAC9B3C,EACAjlC,EACJ,iCAAkCsnC,IAGtCvpB,QAAS,SAAC1Z,GAAC,OAAKA,EAAEgoB,iBAAiB,EAAC,UAEpC,wBACErvB,GAAIA,EACJ0f,UAAU,mCACV,kBAAiBnB,IAAI,kBAAgBplB,EAAI,YAAI2xC,GAC7CvxC,KAAK,WACLwlC,QAAS+L,EACT9nC,SAAUA,EACV7J,KAAMA,EACN6lC,SAAUA,IAEZ,eAAC+L,EAAc,CACb,aAAY5xC,EACZ4lC,QAAS+L,EACTprB,UAAW+B,KACT,+BACA,4BAA4B,mCAAD,OACQlD,GACnC,CACE,oCAAqC5N,QAAQ1K,GAC7C,oCAAqCA,EACrC,qCAAsC6kC,EACtC,wCAAyCA,EACzC,2CAA4CX,EAC5C,4CAA4CS,GAExC3C,SAMb4C,GACC,yBACE5L,QAASj/B,EAAK,SACd0f,UAAW+B,KACT,uBAAuB,8BAAD,OACQlD,GAC9B,CACE,iCAAkCvb,EAClC,iCAAkCsnC,IAGtCvpB,QAAS,SAAC1Z,GAAC,OAAKA,EAAEgoB,iBAAiB,EACnC3N,aAAc,kBAAMipB,GAAyB,EAAK,EAClD/oB,aAAc,kBAAM+oB,GAAyB,EAAM,EAAC,UAEpD,wBACE3qC,GAAIA,EAAK,SACT0f,UAAU,mCACV,kBAAiBnB,IAAI,4BAA0BusB,GAC/CvxC,KAAK,WACLwlC,QAAS+L,EACT9nC,SAAUA,EACV7J,KAAMA,EACN6lC,SAAUA,EACV,iBAAe,UAEjB,eAAC6L,EAAS,CACR,aAAY1xC,EACZ4lC,QAAS+L,EACTprB,UAAW+B,KACT,+BACA,4BAA4B,mCAAD,OACQlD,GACnC,CACE,oCAAqC5N,QAAQ1K,GAC7C,oCAAqCA,EACrC,qCAAsC6kC,EACtC,wCAAyCA,EACzC,2CAA4CX,EAC5C,2CAA4ClC,SAMrDhiC,IAGP,GACA8jC,IAiBapnB,gBARgB,SAACzlB,EAAO43B,GAAQ,oCAC1CA,GAAQ,IACX/xB,OAC6B,qBAApB+xB,EAAS/xB,OACZ+xB,EAAS/xB,OACTwS,GAAcrY,GAAO43B,EAAS90B,MAAO,GAAK,IAXhB,SAAC1C,GAAQ,MAAM,CAC/CqtC,yBAA0B,SAAC5nC,GACzBzF,EtIAK,CACL/D,KAAM4B,EACNwJ,iBsIFgC5B,GAClC,EACD,GAUc4f,CAA6CsnB,ICjF/CgB,GAAQ,SAAC3kB,EAAOC,EAAKnB,EAAKqB,GAAG,MAAK,CAC7CnM,KAAKmM,IAAInM,KAAK8K,IAAIkB,EAAOG,GAAMrB,GAC/B9K,KAAKmM,IAAInM,KAAK8K,IAAImB,EAAKE,GAAMrB,GAC7B,EAQW8lB,GAAa,SAACC,EAAQC,GAAM,MAAK,CAC5C9wB,KAAK8K,IAAI+lB,EAAO,GAAIC,EAAO,IAC3B9wB,KAAKmM,IAAI0kB,EAAO,GAAIC,EAAO,IAC3B,EAQWC,GAAa,SAACF,EAAQC,GAAM,OACvCD,EAAO,KAAOC,EAAO,IAAMD,EAAO,KAAOC,EAAO,EAAG,EAa/CE,GAAiB,SACrBC,EACA5qB,EACA6qB,EACAC,EACAC,GAGA,IAAKH,EACH,MAAO,CAAC,EAAG,GAIR5qB,IACHA,EAAY4qB,GAId,IAAMI,EAAOhrB,EAAUkR,wBAGjB+Z,EAAOL,EAAQ1Z,wBAGfga,EAAcvxB,KAAKwxB,KAAMN,EAASG,EAAKnzB,OAAUkzB,GAGvD,GAAIC,EAAKjX,OAAS,GAAKkX,EAAKlX,OAASiX,EAAKxwB,IAExC,OAAO8vB,GAAMQ,EAAaI,EAAaJ,EAAY,EAAGA,GAIxD,IAAMpH,EAAW,CACflpB,IAAK,EACLuZ,OAAQlzB,OAAOuqC,aAAe9kC,SAAS+kC,gBAAgBC,cAIzD,GAAIN,EAAKxwB,IAAMkpB,EAAS3P,QAAUkX,EAAKzwB,IAAMwwB,EAAKjX,OAEhD,OAAOuW,GAAM,EAAGY,EAAa,EAAGJ,GAIlC,IAAMtwB,EAAMb,KAAKmM,IAAIklB,EAAKxwB,IAAKkpB,EAASlpB,KAClCuZ,EAASpa,KAAK8K,IAAIumB,EAAKjX,OAAQ2P,EAAS3P,QAGxCpO,EAAQhM,KAAK4xB,OAAO/wB,EAAMywB,EAAKzwB,KAAOuwB,GACtCnlB,EAAMjM,KAAKwxB,MAAMpX,EAASkX,EAAKzwB,KAAOuwB,GAG5C,OAAOT,GAAM3kB,EAAQulB,EAAatlB,EAAMslB,EAAa,EAAGJ,EAC1D,EAOMU,GAAsB,SAACvsC,GAC3B,IAAMwsC,EAAUtsB,mBAGhB,OAAOsV,uBAAY,WACjBiX,qBAAqBD,EAAQrsB,SAC7BqsB,EAAQrsB,QAAUusB,sBAAsB1sC,EAC1C,GAAG,CAACwsC,EAASxsC,GACf,EAQa2sC,GAAa,SAAC17B,GAAK,OACpB,IAAVA,EACI,CAAC,GAAE,uBACC/L,MAAM0nC,KAAK,CAAE7rC,OAAQkQ,IAAS,SAAC+1B,EAAGvmC,GAAC,OAAKA,EAAIwQ,CAAK,KAAC,CAAE,GAAG,EAQ3D47B,GAAkB,SAAClB,EAASzuB,EAASld,GACzC,IAAM8sC,EAAW5sB,mBAGjB,OAAO6sB,2BAAgB,WAEhBpB,EAAQxrB,UAKT2sB,EAAS3sB,SACX2sB,EAAS3sB,QAAQ6sB,aAIfprC,OAAOqrC,uBACTH,EAAS3sB,QAAU,IAAIve,OAAOqrC,qBAAqBjtC,EAAUkd,GAC7D4vB,EAAS3sB,QAAQiS,QAAQuZ,EAAQxrB,UAInCngB,IACF,GAAG,CAACA,EAAU2rC,EAASzuB,GACzB,ECjUegwB,GDaE,SAAH,GASP,IARLt0B,EAAM,EAANA,OACA3H,EAAK,EAALA,MACA5K,EAAQ,EAARA,SAAS,EAAD,EACR8mC,YAAI,OAAO,MACXC,eAAO,OAAQ,MACfxB,cAAM,MAAG,GAAG,EACZxM,EAAQ,EAARA,SAAS,EAAD,EACRre,iBAAS,MAAG,SAAC4qB,GAAO,OAAY,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,YAAY,IAGxCC,EAAmD,qBAAhC1rC,OAAOqrC,qBAG1B9pC,EAASgqC,GAAQG,EAGvB,EAA0BnwB,mBAAS,CAAC,EAAG,IAAG,oBAAnCkuB,EAAK,KAAEkC,EAAQ,KAChBC,EAAWttB,iBAAO,CAAC,EAAG,IAGtButB,EAAUvtB,mBAGVwtB,EAAWxtB,mBAGXytB,EAAWztB,mBAGX0tB,EAAalP,mBAAQ,kBAAM9lB,EAAO,EAAG,EAAE,GAAE,CAACA,IAG1Ci1B,EAAcnP,mBAAQ,kBAAM9lB,EAAO,EAAG3H,EAAM,GAAE,CAAC2H,EAAQ3H,IAGvD68B,EAAcpP,mBAAQ,kBAAM9lB,EAAO,EAAGyyB,EAAM,GAAG,GAAE,CAACzyB,EAAQyyB,IAG1D0C,EAAcrP,mBAClB,kBAAM9lB,EAAOyyB,EAAM,GAAIp6B,EAAM,GAC7B,CAAC2H,EAAQyyB,EAAOp6B,IAIZ+8B,EAAgBzB,GAEpB/W,uBAAY,WAEV,IAAMyY,EAAevC,GAEnB+B,EAAQttB,QAERY,EAAU0sB,EAAQttB,SAClByrB,EACA36B,EACA28B,GAIIM,EAEJd,EACIa,EAEA3C,GAAWkC,EAASrtB,QAAS8tB,GAG9BxC,GAAW+B,EAASrtB,QAAS+tB,KAEhCV,EAASrtB,QAAU+tB,EAGnBX,EAASW,GAEb,GAAG,CAACtC,EAAQ36B,EAAO28B,EAAYR,EAASrsB,KAIpCotB,EAAkBzP,mBACtB,iBAAO,CAEL0P,UAAWzB,GAAW17B,GACvB,GACD,CAACA,IAIH47B,GAAgBY,EAASU,EAAiBH,GAC1CnB,GAAgBa,EAAUS,EAAiBH,GAC3CnB,GAAgBc,EAAUQ,EAAiBH,GAG3CjB,2BACE,kBAAMiB,GAAe,GACrB,CAAC/8B,EAAO28B,EAAYC,EAAaG,IAInC,IAAMK,EAAa3P,mBACjB,iBAAO,CACL+O,UACAC,WACAC,WACA18B,QACAyV,MAAOvjB,EAASkoC,EAAM,GAAK,EAC3B1kB,IAAKxjB,EAASkoC,EAAM,GAAKp6B,EACzBq9B,UAAW,CAETC,SAAU,WAEV31B,OAAQzV,EAAS0qC,OAAczwB,EAE/BoxB,WAAYrrC,EAAS2qC,OAAc1wB,GAErCqxB,WAAY,CACVF,SAAU,WACVrlC,QAAU/F,OAAkBia,EAAT,OACnBxE,OAAQk1B,EACR/1B,MAAO,OAEPwD,IAAK,KAEPmzB,WAAY,CACVH,SAAU,WACVrlC,QAAU/F,OAAkBia,EAAT,OACnBxE,OAAQm1B,EACRh2B,MAAO,OAEP+c,OAAQ,KAEX,GACD,CACE3xB,EACAkoC,EACAp6B,EACAw8B,EACAC,EACAC,EACAE,EACAC,EACAC,IAQJ,OAHA3O,GAAYA,EAASiP,GAGdhoC,EAASgoC,EAClB,EEjFeM,GA/EK,SAAH,WACfC,aAAK,MAAG,GAAE,EACVC,EAAK,EAALA,MACAlR,EAAS,EAATA,UACAmR,EAAW,EAAXA,YACAC,EAAY,EAAZA,aACAC,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBAAgB,OAEhB,eAAC,GAAQ,CACPr2B,OAAQ,SAAC8N,EAAOC,GAAG,OHHU,IGGJA,EAAMD,EAA0B,EACzDzV,MAAO29B,EAAM7tC,OAAO,SAEnB,gBACC2lB,EAAK,EAALA,MACAC,EAAG,EAAHA,IACA1V,EAAK,EAALA,MACAw8B,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACAW,EAAS,EAATA,UACAG,EAAU,EAAVA,WACAC,EAAU,EAAVA,WAAU,OAEV,sBACEzuB,IAAKwtB,EACLhoB,MAAO6oB,EACPxuB,UAAWwH,GACT,8BACA,CAAElpB,OAAQu/B,GACV,2DACA,UAEF,qBACE7d,UAAWwH,GAAU,uCAAwC,CAC3D4nB,KAAMxoB,IAAUC,GAAOD,EAAQ,IAEjCzG,IAAKytB,EACLjoB,MAAOgpB,IAET,qBACE3uB,UAAWwH,GAAU,uCAAwC,CAC3D4nB,KAAMxoB,IAAUC,GAAOA,EAAM1V,IAE/BgP,IAAK0tB,EACLloB,MAAOipB,IAERE,EAAMxS,MAAM1V,EAAOC,GAAK7V,KAAI,SAACsG,GAAI,OAChC,eAAC,GAAW,CACV2J,UAAU,KAEV3gB,GAAIgX,EAAKhX,GACTue,KAAMkwB,EAAMlwB,KACZqR,MAAO5Y,EAAKhH,iBACZq6B,MAAOrzB,EAAKqzB,MACZlxC,KAAM6d,EAAK7d,KACXI,KAAMyd,EAAKzd,KACXkF,KAAMuY,EAAKvY,KACXsE,OAAQiU,EAAKjU,OACbg8B,QAAS/nB,EAAK+nB,QACd/7B,SAAUgU,EAAKhU,SACfonC,MAAOpzB,EAAKozB,MACZzwC,QAASqd,EAAKrd,QACd2wC,SAAUtzB,EAAKszB,SACfH,aAAcsE,EAAMtE,aACpBI,YAAavzB,EAAKuzB,YAClBC,cAAexzB,EAAKwzB,cACpBzpB,QAAS,kBAAM2tB,EAAY13B,EAAK,EAChC0K,aAAc,kBAAMktB,EAAiB53B,EAAK,EAC1C4K,aAAc,kBAAMitB,EAAiB73B,EAAK,EAC1CgoB,SAAU,SAAC33B,GAAC,OAAKsnC,EAAa33B,GAAO3P,EAAE3B,OAAOq5B,QAAQ,EACtD2L,QAAQ,UArBH1zB,EAAKhX,GAsBV,MAED,GAEE,ECLE+uC,GAvEc,SAAH,GAiBnB,IAhBL5E,EAAY,EAAZA,aACApL,EAAO,EAAPA,QACAxB,EAAS,EAATA,UACAkR,EAAK,EAALA,MACAzuC,EAAE,EAAFA,GACAwqC,EAAa,EAAbA,cACAgE,EAAK,EAALA,MACAjwB,EAAI,EAAJA,KACAplB,EAAI,EAAJA,KACAw1C,EAAY,EAAZA,aACAD,EAAW,EAAXA,YACAE,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAG,EAAe,EAAfA,gBACAC,EAAiB,EAAjBA,kBACA1E,EAAW,EAAXA,YAEM2E,EAAiC,IAAjBV,EAAM7tC,OAE5B,OACE,sBACE+e,UAAW+B,KACT,2BAA2B,kCAAD,OACQzhB,GAAE,yCACFue,GAClC,CACE,0CAA2C4rB,IAE7C,UAEF,qBAAIzqB,UAAU,6BAA4B,SACxC,eAAC,GAAW,CACVyqB,aAAcA,EACdpL,QAASA,EACT/7B,SAAUksC,EACVlvC,GAAIA,EACJwqC,cAAeA,EACfjsB,KAAMA,EACNqR,MAAOz2B,EACPA,KAAMA,EACN6lC,SAAU,SAAC33B,GACT2nC,EAAgBhvC,GAAKqH,EAAE3B,OAAOq5B,QAChC,EACA2L,QAAQ,SACRH,YAAaA,EAAY,SAEzB,yBACE,uBAAehN,EAAY,OAAS,OAAM,YAAIpkC,EAAKioB,eACnD1B,UAAW+B,KAAW,6BAA8B,CAClD,kCAAmC8b,EACnC,uCAAwC2R,IAE1ClsC,SAAUksC,EACVnuB,QAAS,kBAAMkuB,EAAkBjvC,EAAG,QAI1C,eAAC,GAAW,CACVu9B,UAAWA,EACXkR,MAAOA,EACPD,MAAOA,EACPG,aAAcA,EACdD,YAAaA,EACbE,iBAAkBA,EAClBC,iBAAkBA,MAI1B,ECtEMM,GAAc1tC,KAsDL2tC,GApDQ,SAAH,GASb,IARLC,EAAM,EAANA,OACAb,EAAK,EAALA,MACAc,EAAoB,EAApBA,qBACAX,EAAY,EAAZA,aACAD,EAAW,EAAXA,YACAE,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAz/B,EAAW,EAAXA,YAEA,EAAkC2N,mBAASoyB,GAAYI,iBAAmB,CAAC,GAAE,oBAAtEhS,EAAS,KAAEiS,EAAY,KAGxBC,EAAyB,SAACC,GAC9B,IAAMH,EAAe,6BAChBhS,GAAS,kBACXmS,GAAWnS,EAAUmS,KAGxBF,EAAaD,GACbrtC,GAAU,CAAEqtC,mBACd,EAEA,OACE,sBAAK7vB,UAAU,kCAAiC,SAC9C,qBAAIA,UAAU,0BAAyB,SACpClkB,OAAOkQ,OAAO2jC,GAAQ3+B,KAAI,SAAC+9B,GAAK,OAC/B,eAAC,GAAa,CACZtE,aAAcsE,EAAMtE,aACpBpL,QAAS0P,EAAM1P,QACfxB,WAAW5sB,QAAQvB,IAAuBmuB,EAAUkR,EAAMzuC,IAC1DyuC,MAAOA,EACPzuC,GAAIyuC,EAAMzuC,GACVwqC,cAAeiE,EAAMjE,cACrBgE,MAAOA,EAAMC,EAAMzuC,KAAO,GAE1Bue,KAAMkwB,EAAMlwB,KACZplB,KAAMs1C,EAAMt1C,KACZw1C,aAAcA,EACdD,YAAaA,EACbE,iBAAkBA,EAClBC,iBAAkBA,EAClBG,gBAAiBM,EACjBL,kBAAmBQ,EACnBlF,YAAakE,EAAMlE,aATdkE,EAAMzuC,GAUX,OAKZ,E,0FClDa2vC,GAAiB,SAACzyC,GAAK,OAAKA,EAAMmH,SAASzB,GAAI,EAG/CgtC,GAAwB,SAACr2C,GAAI,MAAc,oBAATA,CAA2B,EAM7Ds2C,GAAmB1hC,aAC9B,CAACwhC,GAZgB,SAACzyC,GAAK,OAAKA,EAAM+F,KAAKL,GAAI,EACzB,SAAC1F,GAAK,OAAKA,EAAM+F,KAAK1J,IAAK,EAWHoY,KAC1C,SAACm+B,EAAOllC,EAASvG,EAAUmO,GAAY,OACrC9S,GAAcowC,GAAO,SAACv2C,GACpB,IAAMw2C,EAAcnlC,EAAQsC,QAAO,SAAC3C,GAAM,OAAKlG,EAASkG,KAAYhR,CAAI,IAClEy2C,EAAqBD,EAAY7iC,QACrC,SAAC3C,GAAM,OAAMiI,EAAajI,EAAO,IAEnC,MAAO,CACLsG,MAAOk/B,EAAYpvC,OACnBhH,QAASq2C,EAAmBrvC,OAEhC,GAAE,IAMOsvC,GAAe9hC,aAC1B,CAACwhC,GA3BqB,SAACzyC,GAAK,OAAKA,EAAMmH,SAASlL,IAAK,EAC3B,SAAC+D,GAAK,OAAKA,EAAMmH,SAASrB,QAAS,EA0BN6sC,KACvD,SAACC,EAAOI,EAAUp+B,EAAcq+B,GAAa,OAC3CL,EAAMp/B,KAAI,SAAC1Q,GAAE,MAAM,CACjBA,KACA7G,KAAM+2C,EAASlwC,GACfgD,SAAU8O,EAAa9R,GACvBowC,UAAWD,EAAcnwC,GAC1B,GAAE,I,UCnCDqwC,GAAiB,UAmDRC,GAjDU,SAAH,OACpBh3C,EAAI,EAAJA,KACAo1C,EAAW,EAAXA,YACAE,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAF,EAAY,EAAZA,aACA1oC,EAAQ,EAARA,SAAQ,OAER,eAACsqC,GAAA,EAAQ,CAEPvqC,OAAQ1M,EAAK0G,GAEbwwC,aAAc,eAAC,KAAc,CAACnrB,MAAO,CAAE0S,MAAOsY,MAC9CI,WAAY,eAAC,KAAgB,CAACprB,MAAO,CAAE0S,MAAOsY,MAC9CzgB,MACE,eAAC,GAAW,CACVjP,UAAU,MAEV3gB,GAAI1G,EAAK0G,GACTue,KAAK,UACLqR,MAAOt2B,EAAK0W,kBAAoB1W,EAAKH,KACrCA,KAAMG,EAAKH,KACXsF,KAAMnF,EAAKmF,KACXlF,KAAMD,EAAKC,KACXwJ,OAAQzJ,EAAKyJ,OACbg8B,QAASzlC,EAAKylC,QACd/7B,SAAU1J,EAAK0J,SACfonC,MAAO9wC,EAAK8wC,MACZzwC,QAASL,EAAKK,QACd2wC,SAAUhxC,EAAKgxC,SACfH,cAAc,EACdI,YAAajxC,EAAKixC,YAClBC,cAAelxC,EAAKkxC,cACpBC,cAAenxC,EAAKmxC,cACpB1pB,QAAS,kBAAM2tB,EAAYp1C,EAAK,EAChCooB,aAAc,kBAAMktB,EAAiBt1C,EAAK,EAC1CsoB,aAAc,kBAAMitB,EAAiBv1C,EAAK,EAC1C0lC,SAAU,SAAC33B,GAAC,OACVsnC,EAAar1C,GAAO+N,EAAE3B,OAAOq5B,QAAS13B,EAAE3B,OAAOgrC,QAAQC,SAAS,EAElEjG,QAAQ,OACRzC,QAAS3uC,EAAK2uC,SAxBT3uC,EAAK0G,IA0Bb,SAEAiG,GApCI3M,EAAK0G,GAqCD,ECpCP4wC,GAA8B,CAClC11C,gBAAiB,EACjB8D,KAAM,EACN1F,KAAM,EACNu3C,UAAW,GAKPC,GAAYC,aAAW,CAC3BC,KAAM,CACJx4B,OAAQ,IACRy4B,SAAU,EACVC,SAAU,OAIRC,GAAiBC,aAAW,CAChCJ,KAAM,CACJ/4B,QAAS,eAFUm5B,CAIpBC,MASGC,GAAsB,SAACC,EAAazkC,GACxC,OACEA,IAAsBykC,GACtBzkC,EAAkBU,WAAW,GAAD,OAAI+jC,EAAW,KAE/C,EAYMC,GAA4B,SAAH,GAOxB,IANLxxC,EAAE,EAAFA,GACAgQ,EAAgB,EAAhBA,iBACA1W,EAAI,EAAJA,KACA0J,EAAQ,EAARA,SACAilC,EAAO,EAAPA,QACAwC,EAAa,EAAbA,cAEM1L,GAAWzlC,EAAK2Y,wBACtB,MAAO,CACLjS,GAAIA,EACJ7G,KAAM6W,GAAoB1W,EAAKH,KAC/BI,KAAM,kBACNkF,KAAM,kBACNgsC,cAAeA,EACf1nC,QAAQ,EACRunC,UAAU,EACVF,MAAOpnC,IAAa+7B,EACpBplC,SAAUqJ,GAAY+7B,EACtBt6B,SAAS,EACTzB,SAAUA,EACVilC,QAASA,EACTlJ,UAEJ,EAQM0S,GAAiB,SAACxuC,EAAMD,EAAUsnC,GACtC,IAAMvL,GAAW97B,EAAK0T,aACtB,OAAO,6BACF1T,GAAI,IACPsnC,YAAab,GACbc,cAAeb,GACf5mC,OAAQE,EAAKF,OACbunC,WACAF,MAAOpnC,GAAYC,EAAK0T,aACxBhd,SAAUqJ,GAAY+7B,EACtBA,UACA/7B,YAEJ,EAiJe2f,gBAXgB,SAACzlB,GAAK,MAAM,CACzCssB,aAAcxT,GAAgB9Y,GAC9B4F,SAAU5F,EAAMhC,gBAAgB4H,SACjC,IAEiC,SAACxF,GAAQ,MAAM,CAC/C8hC,qBAAsB,SAAC70B,GACrBjN,EAASgN,GAAaC,GACxB,EACD,GAEcoY,EA/IU,SAAH,GAaf,IAZL6G,EAAY,EAAZA,aACAkoB,EAA4B,EAA5BA,6BACAxhC,EAAoB,EAApBA,qBACAy+B,EAAY,EAAZA,aACAC,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAH,EAAW,EAAXA,YACAiD,EAAoB,EAApBA,qBACAhoB,EAAS,EAATA,UACA1X,EAAuB,EAAvBA,wBACAnP,EAAQ,EAARA,SACAs8B,EAAoB,EAApBA,qBAEMhY,EAAU0pB,KAkCVc,EAAa,SAAbA,EAAc/uC,EAAMiK,GAExB,IAAM7J,EAAOJ,EAAKiK,GAClB,GAAK7J,EAAL,CAKA,IAAMgD,EAAW4rC,KACf5uC,EAAKgD,UACL,SAACC,GAAK,OAAK0qC,GAA4B1qC,EAAM3M,KAAK,IAClD,SAAC2M,GAAK,OAAKA,EAAM5M,KAAKH,IAAI,IAC1BuX,KAAI,SAACxK,GAAK,OACV0pC,GAAsB1pC,EAAM3M,MACxBq4C,EAAW/uC,EAAMqD,EAAMlG,IA7CR,SAACiD,GACtB,IAAMD,EACJC,EAAK2T,aACL3T,EAAK4T,cACJ8S,IACE1mB,EAAKmB,iBACHsM,KAAI,SAAC5D,GAAiB,OACrBwkC,GAAoB3nB,EAAU3pB,GAAI8M,EAAkB,IAErD4E,KAAKf,UACT1N,EAAKmB,kBACJnB,EAAKmB,iBACFsM,KACC,SAAC5D,GAAiB,OAAKmF,EAAwBnF,EAAkB,IAElE4E,KAAKf,SAEN25B,EAAW9gB,EAAavmB,EAAKjD,IACnC,OACE,eAAC,GAAgB,CACf1G,KAAMm4C,GAAexuC,EAAMD,EAAUsnC,GACrCsE,iBAAkBA,EAClBC,iBAAkBA,EAClBF,aAAcA,EACdD,YAAaA,GACRzrC,EAAKjD,GAGhB,CAkBQ8xC,CAAe5rC,EAAM5M,KAAK,IAMhC,GAA0B,aAAtBwT,EACF,OAAO7G,EAGT,IACIwkC,EADEsH,GAAoC,OAATpoB,QAAS,IAATA,OAAS,EAATA,EAAW3pB,MAAOiD,EAAKjD,GAQxD,OAHEyqC,EAHG9gB,EAGaooB,EAA2BnI,GAAgB,KAF3CA,GAMhB,eAAC,GAAgB,CACftwC,KAAMk4C,GAA0B,6BAC3BvuC,GAAI,IACPwnC,gBACAznC,SAAU2mB,IAAc2nB,GAAoB3nB,EAAU3pB,GAAIiD,EAAKjD,IAC/DioC,QAAS8J,KAEXnD,iBAAkBA,EAClBC,iBAAkBA,EAClBF,aAAcA,EACdD,YAAaA,EAAY,SAGxBzoC,GAFIhD,EAAKjD,GAxCd,CA6CF,EAUA,OAAO0xC,EACL,eAACP,GAAc,CACbzxB,UAAW0H,EAAQ4pB,KACnBluC,SAAUtH,OAAOS,KAAKy1C,GACtBM,oBAAqB,eAAC,KAAc,IACpCC,kBAAmB,eAAC,KAAgB,IAAI,SAGvCL,EAAWF,EAA8B,aAFtC,gCAKN,eAACP,GAAc,CACbruC,SAAUA,EACV4c,UAAW0H,EAAQ4pB,KACnBgB,oBAAqB,eAAC,KAAc,IACpCC,kBAAmB,eAAC,KAAgB,IACpCC,aAxB+B,SAAChyB,EAAOiyB,GACzCR,EAAqBQ,GAEU,IAA3BA,EAAgBxxC,QAClBy+B,EAAqB,KAEzB,EAkB6C,SAGxCwS,EAAW1hC,EAAsB,aAF9B,uBAKV,IChPekiC,GCyBW,SAAH,GAOhB,IAAD,IANJC,oBAAY,MAAG,IAAI,MACnBC,gBAAQ,MAAG,EAAC,MACZC,gBAAQ,MAAG,EAAC,MACZC,oBAAY,MAAG,KAAK,MACpBC,mBAAW,MAAG,WAAU,EACxBxsC,EAAQ,EAARA,SAEMiqB,EAAepQ,mBACf4yB,EAAY5yB,mBAEZ6yB,EAAW,WAAH,cAAU,CACtBhyB,UAA+B,QAAtB,EAAEuP,EAAanQ,eAAO,aAApB,EAAsB8R,wBACjC+gB,OAAyB,QAAnB,EAAEF,EAAU3yB,eAAO,aAAjB,EAAmB8R,wBAC5B,EAEKghB,EAAQ,SAACC,GACb,IAAMC,EAAQJ,IAERK,EAAaD,EAAMH,OACrBG,EAAMH,OAAOp6B,OAASu6B,EAAMpyB,UAAUnI,OACtC,EAEJ,OAAIs6B,EAAaR,EACRA,EAGLQ,EAAaP,EAAWS,EACnBT,EAAWS,EAGbF,CACT,EAEA,EAAoC/1B,oBAAS,GAAM,oBAA5Ck2B,EAAU,KAAEC,EAAa,KAChC,EAA0Bn2B,mBAAS81B,EAAMR,IAAc,oBAAhDj0B,EAAK,KAAE+0B,EAAQ,KAEhBC,EAAU,SAAClzB,GACf,GAAmB,YAAfA,EAAM3mB,MAKV,GAAI05C,GAA6B,cAAf/yB,EAAM3mB,KAAsB,CAC5C,IAAMw5C,EAAQJ,IAERU,GACHnzB,EAAM8lB,QAAU+M,EAAMpyB,UAAUxF,IAA4B,GAAtB43B,EAAMH,OAAOp6B,QACpDu6B,EAAMpyB,UAAUnI,OAElB06B,GAAc,GACdC,EAASN,EAAMQ,IAEfnzB,EAAMklB,gBACR,OAfE8N,GAAc,EAgBlB,EAiBA,OAAOjtC,EAAS,CACdgtC,aACA70B,QACAvW,MAAO,CACL8Y,UAAW,CACTd,IAAKqQ,EACLojB,YAAaF,EACbG,UAAWH,GAEbI,OAAQ,CAAEnuB,MAAO,CAAE7M,OAAgB,IAAR4F,EAAc,MACzCq1B,OAAQ,CAAEpuB,MAAO,CAAE7M,OAAsB,KAAb,EAAI4F,GAAe,MAC/Cw0B,OAAQ,CACN/yB,IAAK6yB,EACL/uB,KAAM,YACN,mBAAoB8uB,EACpBiB,SAAU,IACVH,UAAWH,EACXO,YAAaP,EACb5J,UAjCQ,SAACtpB,GACb,IAAM0zB,EACJ,CACEC,SAAUrB,EACVsB,WAAYtB,EACZuB,UAAWvB,EACXwB,WAAYxB,GACZtyB,EAAMpgB,MAAQ,EAEd8zC,IACFT,EAASN,EAAMz0B,EAAQw1B,IACvB1zB,EAAMklB,iBAEV,KAwBF,ECnBe6O,I,OAzFE,SAAH,GAiBP,IAhBL7J,EAAK,EAALA,MACAoE,EAAK,EAALA,MACAt+B,EAAoB,EAApBA,qBACAwhC,EAA4B,EAA5BA,6BACArC,EAAM,EAANA,OACAjgC,EAAW,EAAXA,YACA8kC,EAAa,EAAbA,cACAnL,EAAmB,EAAnBA,oBACAuG,EAAoB,EAApBA,qBACAZ,EAAW,EAAXA,YACAE,EAAgB,EAAhBA,iBACAC,EAAgB,EAAhBA,iBACAF,EAAY,EAAZA,aACAwF,EAA+B,EAA/BA,gCACAxqB,EAAS,EAATA,UACA1X,EAAuB,EAAvBA,wBAEA,OACE,uBACEyN,UAAW+B,KAAW,oBAAqB,CACzC,0BAA2B2oB,IAC1B,UAEH,eAAC,GAAU,CACTrB,oBAAqBA,EACrB35B,YAAaA,IAEf,eAAC,GAAU,UACR,gBAAG6jC,EAAU,EAAVA,WAAW,EAAD,EAAEprC,MAAS8Y,EAAS,EAATA,UAAW6yB,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQb,EAAM,EAANA,OAAM,OACxD,iDACElzB,UAAW+B,KAAW,2BAA4B,CAChD,qCAAsCwxB,KAEpCtyB,GAAS,cAEb,gDAAKjB,UAAU,qCAAwC8zB,GAAM,aAC3D,eAAC,cAAU,CACT9zB,UAAU,+BACV2F,MAAO,CAAE1N,MAAO,QAChBy8B,UAAQ,EACRC,yBAAuB,WAEvB,sBAAK30B,UAAU,4BAA2B,SACxC,eAAC,GAAY,CACXgyB,6BAA8BA,EAC9BxhC,qBAAsBA,EACtBd,YAAaA,EACbg7B,MAAOA,EACPsE,YAAaA,EACbE,iBAAkBA,EAClBC,iBAAkBA,EAClBF,aAAcA,EACdgD,qBAAsBwC,EACtBxqB,UAAWA,EACX1X,wBAAyBA,WAKjC,iDAAKyN,UAAU,mCAAsC+zB,GAAM,cACzD,mCAAK/zB,UAAU,mCAAsCkzB,IACrD,gBAAC,cAAU,CACTlzB,UAAU,+BACV2F,MAAO,CAAE1N,MAAO,QAChBy8B,UAAQ,EACRC,yBAAuB,YAEvB,qBAAI30B,UAAU,mCAAkC,qBAChD,eAAC,GAAc,CACb8uB,MAAOA,EACPa,OAAQA,EACRjgC,YAAaA,EACb8kC,cAAeA,EACfxF,YAAaA,EACbE,iBAAkBA,EAClBC,iBAAkBA,EAClBF,aAAcA,EACdW,qBAAsBA,cAIxB,MAKhB,GC5FegF,GANO,SAAH,OAAM50B,EAAS,EAATA,UAAS,OAChC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMxH,EAAE,MAAMC,EAAE,IAAIT,MAAM,IAAIa,OAAO,IAAI+7B,GAAG,IAAIjyB,YAAY,SACxD,ECIOkyB,GAPU,SAAH,OAAM90B,EAAS,EAATA,UAAS,OACnC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAE5C,uBAAMxH,EAAE,MAAMC,EAAE,IAAIT,MAAM,IAAIa,OAAO,IAAI+7B,GAAG,IAAIjyB,YAAY,SACxD,ECEOmyB,GANc,SAAH,OAAM/0B,EAAS,EAATA,UAAS,OACvC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMxH,EAAE,MAAMC,EAAE,OAAOT,MAAM,IAAIa,OAAO,SACpC,ECIKk8B,GAAY,SAACn7C,GAAI,MAAc,QAATA,CAAe,EACrCo7C,GAAgB,SAACp7C,GAAI,MAAc,gBAATA,CAAuB,EACjDq7C,GAAc,SAACr7C,GAAI,OAAKo7C,GAAcp7C,IAASm7C,GAAUn7C,EAAM,EAO/D0U,GAAa,SAAC4mC,GAAU,OACnCr5C,OAAOkQ,OAAOmpC,GAAYj/B,SAAQ,SAAC3Q,GAAK,OAAKA,EAAMyL,KAAI,SAACzN,GAAI,OAAKA,EAAKjD,EAAE,GAAC,GAAE,EAQhE80C,GAAiB,SAACD,EAAYzlC,GAGzC,IAFA,IAAM2lC,EAAoB,CAAC,EAE3B,MAAmBv5C,OAAOS,KAAK44C,GAAW,eAAE,CAAvC,IAAMt7C,EAAI,KACbw7C,EAAkBx7C,GAAQs7C,EAAWt7C,GAAMmX,KAAI,SAACzN,GAAI,oCAC/CA,GAAI,IACP+M,iBAAkBtB,GAAmBzL,EAAK9J,KAAMiW,IAAY,GAEhE,CAEA,OAAO2lC,CACT,EAQaC,GAAoB,SAAC/xC,EAAMmM,GACtC,OAAIA,GACK,IAAIvO,OAAOkO,GAAaK,GAAc,MAAMC,KAAKpM,EAAK9J,KAIjE,EAQa87C,GAAmB,SAACJ,EAAYzlC,GAG3C,IAFA,IAAM8lC,EAAiB,CAAC,EAExB,MAA0B15C,OAAOS,KAAK44C,GAAW,eAAE,CAA9C,IAAMM,EAAW,KACpBD,EAAeC,GAAeN,EAAWM,GAAajoC,QAAO,SAACjK,GAAI,OAChE+xC,GAAkB/xC,EAAMmM,EAAY,GAExC,CAEA,OAAO8lC,CACT,EAQaE,GAAmBjnC,aAC9B,CAAC,SAACjR,GAAK,OAAKA,EAAM+H,KAAK,EAAE,SAAC/H,GAAK,OAAKA,EAAMkS,WAAW,IACrD,SAACylC,EAAYzlC,GACX,IAAM8lC,EAAiBD,GAAiBJ,EAAYzlC,GACpD,MAAO,CACLimC,cAAeP,GAAeI,EAAgB9lC,GAC9CxE,QAASqD,GAAWinC,GAExB,IASWI,GAAkBnnC,aAC7B,CAAC,SAACjR,GAAK,OAAKA,EAAMiG,IAAI,EAAE,SAACjG,GAAK,OAAKA,EAAMkS,WAAW,IACpD,SAACjM,EAAMiM,GAAW,OAChB0lC,GAAeG,GAAiB,CAAEn2C,IAAKqE,GAAQiM,GAAcA,EAAY,IAQhEmmC,GAAsBpnC,aACjC,CAACmnC,GAAiB,SAACp4C,GAAK,OAAKA,EAAMs4C,aAAa,IAChD,SAACC,GAAY,IAAED,EAAa,uDAAG,CAAC,EAAC,MAAM,CACrC12C,IAAK22C,EAAa32C,IAAI4R,KAAI,SAAC5R,GAAG,oCACzBA,GAAG,IACNvF,KAAM,MACNgxC,YAAa+J,GACb9J,cAAekL,GACf3yC,QAAQ,EACRunC,UAAU,EACVF,OAAO,EACPzwC,SAAS,EACTqJ,UAAU,EACV+7B,QAASjgC,EAAI2F,QACb4lC,MAAOmL,EAAc12C,EAAIkB,KAAO,GAAC,IAEpC,IAQU21C,GAA0BxnC,aACrC,CAAC,SAACjR,GAAK,OAAKA,EAAMkS,WAAW,IAC7B,SAACA,GAAW,OACV0lC,GACEG,GACE,CACEp2C,YAAarD,OAAO6e,QAAQtb,IAAqB2R,KAC/C,oCAAY,MAAO,CACjB1Q,GADI,KAEJ7G,KAFU,KAGX,KAGLiW,GAEFA,EACD,IASQwmC,GAA8BznC,aACzC,CAACwnC,GAAyB,SAACz4C,GAAK,OAAKA,EAAM24C,SAAS,IACpD,SAACC,EAAsBD,GAAS,MAAM,CACpCh3C,YAAai3C,EAAqBj3C,YAAY6R,KAAI,SAAC7R,GACjD,IAAMwF,EAAWwxC,EAAU9hB,MAAK,SAACx6B,GAAI,OAAKA,EAAKyG,KAAOnB,EAAYmB,EAAE,IAEpE,OAAO,6BACFnB,GAAW,IACdtF,KAAM,cACNgxC,YAAa+J,GACb9J,cAAekL,GACf3yC,QAAQ,EACRunC,UAAU,EACVF,OAAO,EACPzwC,SAAS,EACTqJ,UAAU,EACV+7B,SAA+B,IAAtB16B,EAASrB,SAClBqnC,MAAOhmC,EAAS+rC,UAAUv/B,OAE9B,IACD,IAUGklC,GAA0B,SAACC,EAAOC,GACtC,IAAMC,EAAe3Q,OAAOyQ,EAAMp/B,aAAe2uB,OAAO0Q,EAAMr/B,aACxDu/B,EAAUH,EAAM78C,KAAKkgB,cAAc48B,EAAM98C,MAC/C,OAAwB,IAAjB+8C,EAAqBA,EAAeC,CAC7C,EASaC,GAAuBjoC,aAClC,CACEinC,GACA,SAACl4C,GAAK,OAAKA,EAAMssB,YAAY,EAC7B,SAACtsB,GAAK,OAAKA,EAAMysB,SAAS,EAC1B,SAACzsB,GAAK,OAAKA,EAAMwsB,oBAAoB,IAEvC,WAAoBF,EAAcG,EAAWD,GAG3C,IAHqE,IAApE2rB,EAAa,EAAbA,cACKgB,EAAoB,CAAC,EAE3B,MAAmB76C,OAAOS,KAAKo5C,GAAc,eAAE,CAA1C,IAAM97C,EAAI,KACb88C,EAAkB98C,GAAQ87C,EAAc97C,GACrCmX,KAAI,SAACzN,GACJ,IAAM87B,GAAW97B,EAAK0T,aAChB3T,EACJC,EAAK2T,aACL3T,EAAK4T,cACU,OAAd8S,KAAwBD,EAAqBzmB,EAAKjD,IAErD,OAAO,6BACFiD,GAAI,IACPsnC,YAAab,GACbc,cAAeb,GACf5mC,YAAQia,EACRstB,SAAU9gB,EAAavmB,EAAKjD,IAC5BoqC,MAAOpnC,GAAYC,EAAK0T,aACxBhd,SAAUqJ,GAAY+7B,EACtBA,UACA/7B,YAEJ,IACCyN,KAAKslC,GACV,CAEA,OAAOM,CACT,IAQWC,GAAYnoC,aAAe,CAAC,SAACjR,GAAK,OAAKA,EAAMsxC,KAAK,IAAG,SAACA,GAGjE,IAFA,IAAMa,EAAS,CAAC,EAEhB,MAA2B7zC,OAAO6e,QAAQzb,IAAc,eAAE,CAArD,2BAAOrF,EAAI,KAAEJ,EAAI,KACdo9C,EAAc/H,EAAMj1C,IAAS,GAC7B4wC,EAAeoM,EAAY5qC,OAAM,SAACqL,GAAI,OAAMA,EAAK+nB,OAAO,IACxDyX,EAAaD,EAAY5qC,OAAM,SAACqL,GAAI,OAAKA,EAAK+nB,OAAO,IAE3DsQ,EAAO91C,GAAQ,CACbA,OACAJ,OACA6G,GAAIzG,EACJglB,KAAM,SACN4rB,aAAcoM,EAAY5qC,OAAM,SAACqL,GAAI,OAAMA,EAAK+nB,OAAO,IACvDyX,WAAYD,EAAY5qC,OAAM,SAACqL,GAAI,OAAKA,EAAK+nB,OAAO,IACpDA,SAAUoL,EACVI,YAAaiM,EAAalC,GAAgBmC,GAC1CjM,cAAekL,GAEnB,CAEA,OAAOrG,CACT,IASaqH,GAAmBvoC,aAC9B,CAACioC,GAAsBb,GAAqBK,KAC5C,SAACS,EAAmBM,EAAkBC,GAAwB,iDACzDD,GACAN,GACAO,EAAwB,ICOhBj0B,gBAhDgB,SAACzlB,GAAK,MAAM,CACzCiG,KAAMkN,GAAWnT,GACjBs4C,cAAe1kC,GAAiB5T,GAChC+H,MAAO8R,GAAgB7Z,GACvBssB,aAAcxT,GAAgB9Y,GAC9B24C,UAAW5F,GAAa/yC,GACxBysB,UAAWra,GAA0BpS,GACrC+U,wBAAyB/U,EAAMhC,gBAAgB8H,SAC/C0mB,qBAAsB1Q,GAA6C9b,GACnEgT,qBAAsBX,GAAwBrS,GAC/C,IAEiC,SAACI,GAAQ,MAAM,CAC/Cu5C,kBAAmB,SAAC3qC,EAAQnJ,GAC1BzF,ElInPG,SAAyB4O,EAAQnJ,GACtC,MAAO,CACLxJ,KAAMsS,GACNK,OAAQpH,MAAMC,QAAQmH,GAAUA,EAAS,CAACA,GAC1CnJ,SAEJ,CkI6Oa+zC,CAAgB5qC,EAAQnJ,GACnC,EACAg0C,kBAAmB,SAAC7qC,EAAQzH,GAC1BnH,ElIvOG,SAAyB4O,EAAQzH,GACtC,MAAO,CACLlL,KAAMuS,GACNI,OAAQpH,MAAMC,QAAQmH,GAAUA,EAAS,CAACA,GAC1CzH,UAEJ,CkIiOauyC,CAAgB9qC,EAAQzH,GACnC,EACAwyC,8BAA+B,SAAC3qC,EAAoBvJ,GAClDzF,EAAS+O,GAA4BC,EAAoBvJ,GAC3D,EACAm0C,gCAAiC,SAAC5qC,EAAoBtJ,GACpD1F,EhI/OG,SAAuCgP,EAAoBtJ,GAChE,MAAO,CACLzJ,KAAMgT,GACND,mBAAoBxH,MAAMC,QAAQuH,GAC9BA,EACA,CAACA,GACLtJ,WAEJ,CgIuOam0C,CAA8B7qC,EAAoBtJ,GAC7D,EACAo0C,qBAAsB,SAACC,EAAQr0C,GAC7B1F,ErIxPG,SAA4BkO,EAASxI,GAC1C,MAAO,CACLzJ,KAAMyR,GACNQ,QAA4B,kBAAZA,EAAoB,eAAMA,EAAUxI,GAAawI,EAErE,CqImPa8rC,CAAmBD,EAAQr0C,GACtC,EACAo8B,qBAAsB,SAAC70B,GACrBjN,EAASgN,GAAaC,GACxB,EACAgtC,gCAAiC,SAACz0C,GAChCxF,EAASoP,GAA+B5J,GAC1C,EACA00C,mBAAoB,SAACjtC,GACnBjN,EAAS2M,GAAkBM,GAC7B,EACAktC,yBAA0B,SAAC10C,GACzBzF,EtJzDK,CACL/D,KAAMwB,EACN2J,kBsJuDiC3B,GACnC,EACA20C,sBAAuB,SAAC9sC,EAAS5H,GAC/B1F,ExI9PG,SAA6BsN,EAASC,GAC3C,MAAO,CACLtR,KAAMwQ,GACNa,UACAC,aAEJ,CwIwPa8sC,CAAoB/sC,EAAS5H,GACxC,EACA40C,kBAAmB,SAAC18C,GAClBoC,EAASrC,EAAgBC,GAC3B,EACD,GAEcynB,EA9OU,SAAH,GAsBf,IArBLynB,EAAK,EAALA,MACAnlC,EAAK,EAALA,MACAukB,EAAY,EAAZA,aACArmB,EAAI,EAAJA,KACAqyC,EAAa,EAAbA,cACAK,EAAS,EAATA,UACA6B,EAAqB,EAArBA,sBACAtY,EAAoB,EAApBA,qBACAoY,EAAkB,EAAlBA,mBACAC,EAAwB,EAAxBA,yBACAZ,EAAiB,EAAjBA,kBACAE,EAAiB,EAAjBA,kBACAE,EAA6B,EAA7BA,8BACAC,EAA+B,EAA/BA,gCACAK,EAA+B,EAA/BA,gCACAH,EAAoB,EAApBA,qBACAQ,EAAiB,EAAjBA,kBACA1nC,EAAoB,EAApBA,qBACAyZ,EAAS,EAATA,UACA1X,EAAuB,EAAvBA,wBACAyX,EAAoB,EAApBA,qBAEA,EAAyC3M,mBAAS,IAAG,oBAA9C3N,EAAW,KAAEyoC,EAAiB,KAErC,EACE5iB,KADM1F,EAAe,EAAfA,gBAAiBH,EAAc,EAAdA,eAAgBmG,EAAwB,EAAxBA,yBAGnCiZ,EAAQkI,GAAiB,CAC7BzxC,QACA9B,OACA0yC,YACAL,gBACAhsB,eACApa,cACAua,YACAD,yBAGIgoB,EAA+BtiC,EACjCa,GAAgCC,EAAsBd,GACtD,KAEEigC,EAASiH,GAAU,CAAE9H,UAqGrBsJ,EAAoB,SAAC9gC,EAAM+gC,GAE3BrD,GAAU19B,EAAKzd,MACjBw9C,EAAkB//B,EAAKhX,IAAK+3C,GACnBpD,GAAc39B,EAAKzd,OAC5B69C,EAAqB,eAAGpgC,EAAKhX,GAAK+3C,IAIpC3Y,EAAqB,MACrBoY,EAAmB,KACrB,EAGM/zB,EAAgB,SAACvD,GACC,KAAlBA,EAAMwD,SACR0b,EAAqB,KAEzB,EAMA,OALA/hB,qBAAU,WAER,OADA7b,OAAO4e,iBAAiB,UAAWqD,GAC5B,kBAAMjiB,OAAO6e,oBAAoB,UAAWoD,EAAe,CACpE,IAGE,eAAC,GAAQ,CACP2mB,MAAOA,EACPoE,MAAOA,EACPt+B,qBAAsBA,EACtBwhC,6BAA8BA,EAC9BrC,OAAQA,EACRjgC,YAAaA,EACb25B,oBAAqBiP,KAASH,EAAmB,KACjD1D,gCArCwC,SAACrxC,GAC3Cy0C,EAAgCz0C,EAClC,EAoCIwsC,qBA5DyB,SAAC2I,GAE5B,IAAMC,EAAa1J,EAAMyJ,IAAc,GACjCE,EAAqBD,EAAWvsC,OACpC,SAACysC,GAAS,OAAMA,EAAUrZ,OAAO,IAG/B2V,GAAUuD,GACZlB,EACEmB,EAAWxnC,KAAI,SAACsG,GAAI,OAAKA,EAAKhX,EAAE,IAChCm4C,GAEOxD,GAAcsD,IACvBb,EACEc,EAAWvxC,QACT,SAACzJ,EAAO8Z,GAAI,oCAAW9Z,GAAK,kBAAG8Z,EAAKhX,IAAMm4C,GAAkB,GAC5D,CAAC,GAIT,EAyCIP,kBAAmBA,EACnBlJ,YAvIgB,SAAC13B,GACf49B,GAAY59B,EAAKzd,MACnBu+C,EAAkB9gC,EAAMA,EAAK+nB,SACpB6Q,GAAsB54B,EAAKzd,MACpC6lC,EAAqB,MAEjBpoB,EAAKozB,OAASpzB,EAAKszB,UACrBlL,EAAqB,MACrB7P,MAEA6P,EAAqBpoB,EAAKhX,IAC1BovB,EAAepY,GAGrB,EA0HI43B,iBAzFqB,SAAC53B,GACpB09B,GAAU19B,EAAKzd,MACjBs9C,EAAkB7/B,EAAKhX,IAAI,GAClB4vC,GAAsB54B,EAAKzd,MACpC09C,EAA8BjgC,EAAKhX,IAAI,GAC9B20C,GAAc39B,EAAKzd,OAAqB,eAAZyd,EAAKhX,GAE1Cy3C,GAAyB,GAChBzgC,EAAKrd,SACd69C,EAAmBxgC,EAAKhX,GAE5B,EA+EI6uC,iBA7EqB,SAAC73B,GACpB09B,GAAU19B,EAAKzd,MACjBs9C,EAAkB7/B,EAAKhX,IAAI,GAClB4vC,GAAsB54B,EAAKzd,MACpC09C,EAA8BjgC,EAAKhX,IAAI,GAC9B20C,GAAc39B,EAAKzd,OAAqB,eAAZyd,EAAKhX,GAE1Cy3C,GAAyB,GAChBzgC,EAAKrd,SACd69C,EAAmB,KAEvB,EAmEI7I,aA1HiB,SAAC33B,EAAM+nB,EAASsZ,GAC/BzD,GAAY59B,EAAKzd,OAASq2C,GAAsB54B,EAAKzd,OACvDu+C,EAAkB9gC,EAAM+nB,GAEpB6Q,GAAsB54B,EAAKzd,QACL,UAApB8+C,EACgB,OAAd1uB,GACFiuB,EAAkB5gC,GAClBue,EAAyBve,GAErB/E,EAAwB+E,EAAKhX,KAC/Bk3C,EAAgC,CAAClgC,EAAKhX,IAAK++B,KAG7C6Y,EAAkB,MAClBroB,MAGF2nB,EAAgC,CAAClgC,EAAKhX,IAAK++B,GAC3CkY,EAA8B,CAACjgC,EAAKhX,KAAK,OAIzC++B,GACFyY,EAAmB,MAGrBE,EAAsB,CAAC1gC,EAAKhX,IAAK++B,GAErC,EA8FIpV,UAAWA,EACX1X,wBAAyBA,GAG/B,I,SChMeqmC,GAtCM,4CAmClB,OAnCkB,iDAKnB,SAAuBC,GACqB,qBAA/B/2C,OAAOg3C,sBAChBh3C,OAAOg3C,oBAAsB,IAI/Bh3C,OAAOg3C,oBAAoBrzC,KAAKozC,GAEhCtxC,SAASoQ,KAAK+I,iBAAiB,QAASm4B,GAGxC/2C,OAAOi3C,wBAAyB,CAClC,GAEA,iCAKA,WACMj3C,OAAOi3C,yBAETj3C,OAAOg3C,oBAAoBt8C,SAAQ,SAACw8C,GAClCzxC,SAASoQ,KAAKgJ,oBAAoB,QAASq4B,EAC7C,IAGAl3C,OAAOg3C,oBAAsB,GAC7Bh3C,OAAOi3C,wBAAyB,EAEpC,KAAC,EAnCkB,GCHfE,GAAO,CACX,GAAI,QACJ,GAAI,SACJ,GAAI,KACJ,GAAI,QAuCSC,GA9BQ,SAACl1B,EAASm1B,GAM/B,IAAMC,EAAkB,SAACC,EAASn5C,GAChC,GAAI8jB,KAAWi1B,IAAQA,GAAKj1B,KAAaq1B,EAAQ33B,cAC/C,OAAOxhB,GAIX,EAEA,OAAIi5C,EACKr9C,OAAOS,KAAK48C,GAAYnoC,KAAI,SAAC5Q,GAAG,OACrCg5C,EAAgBh5C,EAAK+4C,EAAW/4C,GAAK,IAKlC,SAACA,EAAKF,GACX,OAAIE,EAAI8F,SAAS,KACR9F,EAAIse,MAAM,WAAW1N,KAAI,SAAC0b,GAAC,OAAK0sB,EAAgB1sB,EAAGxsB,EAAS,IAG9Dk5C,EAAgBh5C,EAAKF,EAC9B,CACF,E,qBClCeo5C,GANO,SAAH,OAAMt5B,EAAS,EAATA,UAAS,OAChC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,0EACJ,E,UCKF64C,GAAmB,SAAH,GAaf,IAZLhzC,EAAQ,EAARA,SACAizC,EAAW,EAAXA,YACAl2C,EAAQ,EAARA,SACAm2C,EAAa,EAAbA,cACAzG,EAAS,EAATA,UACA0G,EAAc,EAAdA,eACAC,EAAgB,EAAhBA,iBACAC,EAAe,EAAfA,gBACAv7C,EAAI,EAAJA,KACAw7C,EAAc,EAAdA,eACAj2B,EAAK,EAALA,MACA3L,EAAK,EAALA,MAEM6hC,EAAiB/3B,KAAW,QAAS,WAAY,CACrD,iBAAkB1jB,EAClB,qBAAsBiF,IAEpBy2C,EAAc,EAKZC,EAAoB,SAACnO,EAASvrC,EAAIk8B,GACtC,IAAMyd,EAAa,CACjB35C,KACA45C,WAAYP,EACZpR,QAASkR,IAAkBjd,EAC3BoO,SACEiP,EAAev5C,KAAOA,IACpBu5C,EAAev5C,IAAMurC,EAAQ1jC,MAAMyiC,UAIzC,OAFAmP,GAAe,EAERtpB,IAAM0pB,aAAatO,EAASoO,EACrC,EAuBMG,EAAgB3pB,IAAM4pB,SAASC,QAAQ/zC,GACvCg0C,EACJH,EAAc,IAAuC,oBAA1BA,EAAc,GAAGvgD,KAMxCujB,EAAUqT,IAAM4pB,SAASrpC,IAAIopC,GAAe,SAAC5zC,EAAO7F,GACxD,OAAQ6F,EAAM3M,MACZ,IAAK,UAEH,OACE,mCACG42B,IAAM4pB,SAASrpC,IAAIxK,EAAM2B,MAAM5B,UAAU,SAACi0C,EAAcC,GACvD,MACO,SADCD,EAAa3gD,KAGV2gD,EAGAR,EACLQ,EAAa,eAAD,OACG75C,EAAC,YAAI85C,GACpBV,EAGR,KAAE,uBAd0BW,KAAS/5C,KAiB3C,IAAK,OAEH,OAAO6F,EACT,QAEE,OAAOwzC,EAAkBxzC,EAAM,eAAD,OAAiB7F,GAAKo5C,GAE1D,IAEMY,EAAcJ,EAClB,mCAAUn9B,IAEVA,EAGF,OACE,uBACE,gBAAe/e,EAAKu8C,WACpB,gBAAc,OACd56B,UAAW85B,EACXhQ,UAnEmB,SAACniC,GAEpBuxC,GAAevxC,EAAEqc,QADf3lB,EACwB,CACxBw8C,OAAQnB,EACRoB,GAAIlB,EAAgBtpB,KAAK,IAAO,GAChCyqB,KAAMnB,EAAgBtpB,KAAK,GAAM,IAGT,CACxBwqB,GAAIpB,EACJqB,KAAMrB,IAIVR,GAAevxC,EAAEqc,QAAjBk1B,CAA0B,oBAAoB,kBAAMvxC,EAAE+9B,gBAAgB,GACxE,EAqDIvlB,IAAK6yB,EACLrtB,MAAO,CAAE1N,MAAM,GAAD,OAAKA,EAAK,OACxB2L,MAAOA,EAAM,UAEb,0BACE/pB,KAAK,SACLyJ,SAAUA,EACV0c,UAAU,kBACVqB,QAASq4B,EAAe,UAExB,gCAAOG,EAAe3pB,OAASspB,IAC/B,uBAAMx5B,UAAU,iBAAgB,SAC9B,eAAC,GAAa,SAGlB,sBAAKA,UAAU,oBAAmB,SAAE26B,MAG1C,EAEApB,GAAiBh3B,aAAe,CAC9Bhc,SAAU,KACVizC,YAAa,mBACbl2C,UAAU,EACVm2C,cAAe,KACfzG,UAAW,KACX0G,eAAgB,KAChBC,iBAAkB,KAClBC,gBAAiB,KACjBv7C,MAAM,EACNw7C,eAAgB,KAChBj2B,MAAO,KACP3L,MAAO,KA4DMshC,UCzMTyB,I,OAAW,SAAC7yC,GAChB,IACE5B,EAOE4B,EAPF5B,SACAizC,EAMErxC,EANFqxC,YACAl2C,EAKE6E,EALF7E,SACA23C,EAIE9yC,EAJF8yC,UACAC,EAGE/yC,EAHF+yC,SACAC,EAEEhzC,EAFFgzC,SACAljC,EACE9P,EADF8P,MAQImjC,EAAsB1lB,uBAAY,SAACvtB,GACvC,IAAMkzC,EAAwBC,EAA2BnzC,GAGzD,GAAIkzC,EAAuB,CACzB,MAAmCA,EAAsBlzC,MAEzD,MAAO,CACL7H,GAHQ,EAAFA,GAIN4vB,MAJqB,EAAXqrB,YAKVrgD,MAL4B,EAALA,MAO3B,CAGA,MAAO,CACLoF,GAAI,KACJ4vB,MAAO,KACPh1B,MAAO,KAEX,GAAG,IAOGogD,EAA6B,SAACnzC,GAClC,IAAM5B,EAAWkqB,IAAM4pB,SAASC,QAAQnyC,EAAM5B,UAE9C,OAAKA,EAAStF,OAMW,YAArBsF,EAAS,GAAG1M,KACP2hD,gBACLxqC,gBAAI,SAACyH,GAAC,OAAKA,EAAEtQ,MAAM5B,QAAQ,IAC3Bk1C,WACApnB,iBAAK,SAAC5b,GAAC,OAAKA,EAAEtQ,MAAMyiC,QAAQ,IAHvB4Q,CAILj1C,GAGG8tB,iBAAK,SAAC7tB,GAAK,OAAKA,EAAM2B,MAAMyiC,QAAQ,GAApCvW,CAAsC9tB,GAbpC,IAcX,EAEMkrB,EAAYvR,GAAY/X,GAC9B,EAA0CkV,mBAAS,MAAK,oBAAjDo8B,EAAa,KAAEiC,EAAgB,KACtC,EAAsCr+B,oBAAS,GAAM,oBAA9Cs+B,EAAW,KAAEC,EAAc,KAClC,EAA4Cv+B,mBAC1C+9B,EAAoBjzC,IACrB,oBAFM0xC,EAAc,KAAEgC,EAAiB,KAGxC,EAAwBx+B,oBAAS,GAAM,oBAAhChf,EAAI,KAAEy9C,EAAO,KACpB,EAA4Cz+B,mBAAS,MAAK,oBAAnD0+B,EAAc,KAAEC,EAAiB,KAElCC,EAAc77B,mBACd87B,EAA0B97B,iBAAO,CAAE/hB,OAAMw7C,mBACzCsC,EAAiB/7B,iBAAO27B,GAExBK,EAAUh8B,kBAAO,GAEvBzC,qBAAU,WAcHy+B,EAAQ/7B,QARgB,SAACiqB,GAC5B,IAAM/jC,EAAW,CAAC4B,EAAOmiC,GAAWt5B,KAAI,SAAC7I,GAAK,OAC5CsoB,IAAM4pB,SAASC,QAAQnyC,EAAM5B,SAAS,IAGxC,OAAQ81C,WAAO,0BAAI91C,GACrB,CAOM+1C,CAAqB7qB,IACvBoqB,EAAkBT,EAAoB3pB,IAJxC2qB,EAAQ/7B,SAAU,CAOtB,GAAG,CAAC+6B,EAAqB3pB,EAAWtpB,IAEpCwV,qBAAU,YACY,IAAhBg+B,IACsB,oBAAbR,GAA2B98C,EACpC88C,IAC6B,oBAAbD,GAA4B78C,GAC5C68C,IAGFU,GAAe,GAEnB,GAAG,CAACD,EAAaR,EAAUD,EAAU78C,IAGrCsf,qBAAU,WAEJw+B,EAAe97B,UAAY07B,IAE1B19C,GACD69C,EAAwB77B,QAAQ67B,0BAC9BrC,GAEuB,oBAAdoB,GACTA,EAAUc,GAGT19C,GAA4B,oBAAb68C,GAClBA,IAGN,IAGAv9B,qBAAU,WACR,OAAO,kBAAMi7B,GAAgB2D,qBAAsB,CACrD,GAAG,IAEH5+B,qBAAU,WAGR,IAAM6+B,EACc,OAAlB/C,EAAyB,wBAA0B,mBAErDwC,EAAY57B,QAAQyE,cAAc03B,GAAYjvB,OAChD,GAAG,CAACksB,IAMJ,IAAMgD,EAAqB,SAAC90C,IACrBs0C,EAAY57B,QAAQI,SAAS9Y,EAAE3B,SAAW3H,GAC7Cq+C,GAEJ,EAwDMC,EAAc,WAClBV,EAAY57B,QAAQyE,cAAc,oBAAoByI,QAEtDmuB,EAAiB,KACnB,EAyDMgB,EAAe,WACnBZ,GAAQ,GAGRlD,GAAgB2D,qBAClB,EAEA,OACE,eAAC,GAAgB,CACf/C,YAAaA,EACbl2C,SAAUA,EACV0vC,UAlBe,SAACvqB,GAClBwzB,EAAY57B,QAAUoI,CACxB,EAiBIixB,eA5HwB,WAEtBr7C,EACFu6C,GAAgB2D,sBAEhB3D,GAAgBgE,gBAAgBH,GAGlCX,GAASz9C,GAETu9C,GAAe,GAEfe,GACF,EAgHIhD,iBA3C0B,SAAC72C,GAC7B,IAAQotB,EAAqBptB,EAArBotB,MAAO5vB,EAAcwC,EAAdxC,GAAIpF,EAAU4H,EAAV5H,MAMnB,GAJA8gD,EAAkBl5C,GAGC5H,IAAU2+C,EAAe3+C,MAC5B,CACd,IAAM2hD,EAAoB,CAAE3sB,QAAOh1B,QAAOoF,MAE1Cw7C,GAAQ,GACRD,EAAkBgB,EACpB,MACEf,GAAQ,GAEVa,GACF,EA4BI/C,gBA/DuB,SAACjX,GAC1B,IAAIma,EAAmBrD,EACjBsD,EAxBCtsB,IAAM4pB,SAASC,QAAQnyC,EAAM5B,UAAUU,QAdnB,SAArB+1C,EAAsBpxB,EAAUvL,GACpC,OAAIA,EAAQlY,MAAMozC,YAET3vB,EAASxX,OAAOiM,GAEJ,YAAjBA,EAAQxmB,KAEH+xB,EAASxX,OACdiM,EAAQlY,MAAM5B,SAASU,OAAO+1C,EAAoB,KAG/CpxB,CACT,GAIE,IAsBsC3qB,OAElB,OAAlBw4C,EACFqD,EAAmBna,EAAY,EAAI,EAAIoa,EAAgB,EAEvDD,GAAoBna,GAElBma,GAAoBC,GAAiBD,EAAmB,KAC1DA,EAAmB,MAGrBpB,EAAiBoB,EACnB,EAkDIz+C,KAAMA,EACNo7C,cAAeA,EACfI,eAAgBA,EAChB5hC,MAAOA,EAAM,SAEZ1R,GAGP,GAEAy0C,GAASz4B,aAAe,CACtBhc,SAAU,KACVizC,YAAa,mBACbl2C,UAAU,EACV23C,UAAW,KACXC,SAAU,KACVC,SAAU,KACVljC,MAAO,KAkCM+iC,IC3VAA,GD2VAA,GEpVTiC,I,OAAa,SAAH,GAQT,IAPLj9B,EAAS,EAATA,UACAuoB,EAAO,EAAPA,QACAjoC,EAAE,EAAFA,GACA45C,EAAU,EAAVA,WACAqB,EAAW,EAAXA,YACA3Q,EAAQ,EAARA,SACA1vC,EAAK,EAALA,MAEM4+C,EAAiB/3B,KAAW,QAAS,cAAe/B,EAAW,CACnE,uBAAwBuoB,EACxB,wBAAyBqC,IAQrBsS,EAAiB,SAACv1C,GAAC,OACvBuyC,EAAW,CACT15B,MAAO7Y,EACPrH,KACA4vB,MAAOqrB,EACPrgD,SACC,EAaL,OACE,sBACE,gBAAe0vC,EAASgQ,WACxB56B,UAAW85B,EACXz4B,QAAS67B,EACTpT,UAZmB,SAACniC,GAAC,OACvBuxC,GAAevxC,EAAEqc,QAAjBk1B,CAA0B,gBAAgB,WACxCgE,EAAev1C,GAEfA,EAAE+9B,gBACJ,GAAG,EAQDzhB,KAAK,SACL+vB,SAAS,KAAI,SAEb,sBAAKh0B,UAAU,uBAAuB4D,MAAO23B,EAAY,SACvD,gCAAOA,OAIf,GAEA0B,GAAW16B,aAAe,CACxBvC,UAAW,KACXuoB,SAAS,EACTjoC,GAAI,KACJ45C,WAAY,KACZtP,UAAU,EACV1vC,MAAO,MAmCM+hD,I,GCtGAA,GDsGAA,GEtGAE,I,OCwEAl6B,aAbgB,SAACzlB,GAAK,MAAM,CACzC4/C,gBAAsC,SAArB5/C,EAAM0H,WACvBjC,SAAUzF,EAAMyF,SAChBsF,WAAY/K,EAAM+K,WACnB,IAEiC,SAAC3K,GAAQ,MAAM,CAC/Cy/C,uBAAwB,SAAC78B,GACvB5iB,EAASmM,GAAiByW,EAAMtlB,QAChC0C,EAASrC,EAAgB,MAC3B,EACD,GAEc0nB,EA1Da,SAAH,GAMlB,IALLm6B,EAAe,EAAfA,gBACAC,EAAsB,EAAtBA,uBACAp6C,EAAQ,EAARA,SACAsF,EAAU,EAAVA,WACA+0C,EAAY,EAAZA,aAEQztB,EAAoB0F,KAApB1F,gBAER,OAAK5sB,EAASC,IAAIjC,QAAWm8C,EAI3B,sBAAKp9B,UAAU,gBAAe,SAC5B,eAAC,GAAQ,CACP1c,UAAWL,EAASC,IAAIjC,OACxBk6C,SAAU,kBAAMmC,GAAa,EAAK,EAClCpC,SAAU,kBAAMoC,GAAa,EAAM,EACnCrlC,MAAO,KACPgjC,UAAW,SAAC//C,GACVmiD,EAAuBniD,GAEvB20B,GACF,EACA2pB,YACEjxC,EACItF,EAASxJ,KAAKwJ,EAASI,QACvBJ,EAASI,QAAU,UACxB,SAEAJ,EAASC,IAAI8N,KAAI,SAAC1Q,GAAE,OACnB,eAAC,GAAU,CAET0f,UAAW+B,KAAW,CACpB,gCAAiC9e,EAASI,SAAW/C,IAEvDpF,MAAOoF,EACPi7C,YAAahzC,EAAatF,EAASxJ,KAAK6G,GAAMA,GAAG,mBALhCA,GAMjB,QA5BD,IAiCX,KCzDei9C,I,OCGA,SAAH,GAA8C,IAAD,IAAvCC,sBAAc,OAAQ,EAAEle,EAAQ,EAARA,SACxC,EAA8BjiB,mBAASmgC,GAAe,oBAA/Cne,EAAO,KAAEoe,EAAU,KAO1B,OACE,uBAAKz9B,UAAU,SAASqB,QANV,WACdo8B,GAAYpe,GACZC,GAAYA,GACd,EAG2C,UACvC,uBAAMtf,UAAU,gBAAe,SAAEqf,EAAU,KAAO,QAClD,uBAAKrf,UAAU,eAAc,UAC3B,uBACEA,UAAW+B,KAAW,eAAgB,CACpC,uBAAwBsd,IACvB,UAEH,wBACErf,UAAU,gBACVw9B,eAAgBne,EAChBxlC,KAAK,aAEP,sBAAKmmB,UAAU,sBAEjB,sBAAKA,UAAU,uBAIvB,GC/Be09B,I,OCeG,SAAH,GAUR,IATLn3C,EAAQ,EAARA,SAAS,EAAD,EACRyZ,iBAAS,MAAG,KAAI,MAChB29B,eAAO,MAAG,GAAE,MACZC,wBAAgB,MAAG,KAAI,MACvBC,qBAAa,MAAG,KAAI,MACpBC,mBAAW,OAAQ,MACnBxiB,cAAM,MAAG,QAAO,EAChByiB,EAAU,EAAVA,WAAW,EAAD,EACV55B,YAAI,MAAG,QAAO,EAEd,EAAkC9G,mBAASygC,GAAY,oBAAhDjgB,EAAS,KAAEiS,EAAY,KAE9BnyB,qBAAU,WACRmyB,EAAagO,EACf,GAAG,CAACA,IAEJ,IAAMz8B,EAAU,WACdyuB,GAAcjS,GACdkgB,GAAcA,GAChB,EAEA,OACE,uBACE/9B,UAAW+B,KAAW,YAAY,aAChC,kBAA8B,SAAXuZ,GAAiB,UAChCtb,GAAcA,IACjB,UAEH,uBACEA,UAAW+B,KAAW,qBAAqB,yBACrC67B,GAAqBA,IACxB,UAES,SAAXtiB,GACC,yBACE,uBACEuC,EAAY,OAAS,OAAM,YACzB8f,EAAQj8B,eACZL,QAASA,EACTrB,UAAW+B,KAAW,oBAAqB,CACzC,yBAA0B8b,MAIhC,uBACE7d,UAAW+B,KAAW,mBAAoB,CACxC,2BAAqC,WAAToC,EAC5B,0BAAoC,UAATA,IAC1B,UAEFw5B,EACAE,GACC,uBAAM79B,UAAU,2BAA0B,SAAE69B,OAGpC,UAAXviB,GACC,yBACE,uBACEuC,EAAY,OAAS,OAAM,YACzB8f,EAAQj8B,eACZL,QAASA,EACTrB,UAAW+B,KAAW,oBAAqB,CACzC,yBAA0B8b,SAKlC,sBAAK7d,UAAW6d,EAAY,2BAA6B,KAAK,SAC3Dt3B,MAIT,G,0CCxFMy3C,GAASC,KAAMC,OAAOC,MAEfC,GAAkB,SAACC,GAAS,OACvCA,EAAUj9C,QAAQ,IAAK,KAAKA,QAAQ,IAAK,IAAK,EAUnCk9C,GAAsB,SAACD,GAClC,OAAOL,GAAOI,GAAgBC,IAAYE,SAC5C,ECfaC,GAAoBC,wBAAc,MAMlCC,GAA4B,SAAH,GAAsB,IAAhBn4C,EAAQ,EAARA,SAC1C,EAAgD8W,mBAAS,MAAK,oBAAvDshC,EAAgB,KAAEC,EAAmB,KAE5C,OACE,eAACJ,GAAkBK,SAAQ,CACzB3jD,MAAO,CACLyjD,mBACAC,uBACA,SAEDr4C,GAGP,ECnBeu4C,I,OCgBM,SAAH,GAQX,IAPLllD,EAAI,EAAJA,KAAK,EAAD,EACJmlD,2BAAmB,OAAQ,MAC3B3b,4BAAoB,OAAQ,EAC5B4b,EAAc,EAAdA,eAAe,EAAD,EACdC,sBAAc,MAAG,GAAE,EACnBvvC,EAAW,EAAXA,YACAwvC,EAAa,EAAbA,cAEQ5+C,EAA8C1G,EAA9C0G,GAAI6+C,EAA0CvlD,EAA1CulD,MAAM,EAAoCvlD,EAAnCgqB,aAAK,MAAG,KAAI,EAAEggB,EAAqBhqC,EAArBgqC,SAAUwb,EAAWxlD,EAAXwlD,OAC3C,EAA4B/hC,oBAAS,GAAM,oBAApCha,EAAM,KAAEg8C,EAAS,KAChB9d,EAAqBH,KAArBG,iBACF+d,EAAoBhB,GAAoBh+C,GAE9C,EACEi/C,qBAAWf,IADLI,EAAmB,EAAnBA,oBAAqBD,EAAgB,EAAhBA,iBAGvBa,EAAqB,SAACrwC,GAAI,QAC9BO,GAAcD,GAAkBN,EAAMO,EAAqB,EAEvD+vC,EAAe,SAACvkD,GAAK,OACzBskD,EAAmBtkD,GAAS8T,GAAmB9T,EAAOwU,GAAexU,CAAM,EAEvEwkD,EAAuBF,EAAmBL,GA2BhD,OAJAxhC,qBAAU,WACR0hC,EAAUJ,EAAe/4C,SAAS5F,GACpC,GAAG,CAACA,EAAI2+C,IAGN,uBACEj/B,UAAW+B,KAAW,QAAS,iBAAkB,CAC/C,yBAA0B1e,EAC1B,2BAA4B07C,IAAwB17C,EACpD,0BAA2Bs7C,IAAqBr+C,IAElD+gB,QAAS,SAAC1Z,GAAC,OAhCa,SAACrH,EAAIqH,GAO7BA,EAAE3B,OAAOmf,UAAU1E,SAAS,6BACP,SAArB9Y,EAAE3B,OAAO4K,QAET2wB,EAAiB,CACfsC,MAAOvjC,EACPwjC,SAAU,CAAEF,UAAWA,KAM3Bob,EAAe1+C,EACjB,CAaoBq/C,CAAoBr/C,EAAIqH,EAAE,EAC1Ci4C,YAAa,kBAAMhB,EAAoBt+C,EAAG,EAC1C4hB,aAAc,kBAAM08B,EAAoB,KAAK,EAAC,UAE7Cxb,GACC,sBACEpjB,UAAW+B,KAAW,0BAA2B,CAC/C,kCAAmC1e,EACnC,qCAAsC+/B,EACtC,0CAA6D,IAAlB8b,EAC3C,2CAA8D,IAAlBA,EAC5C,0CAA6D,IAAlBA,MAIjD,iCACE,sBACEl/B,UAAU,wBACVkf,wBAAyB,CACvBC,OAAQsgB,EAAa77B,MAIzB,sBACE5D,UAAU,yBACVkf,wBAAyB,CACvBC,OAAQsgB,EAAaL,MAGzB,sBAAKp/B,UAAU,4BAA2B,SAAEs/B,IAC3CI,GACC,sBACE1/B,UAAU,wBACVkf,wBAAyB,CACvBC,OAAO,eAAD,OAAiBsgB,EAAaN,GAAM,eAKjDvb,EACC,eAAC,GAAY,CACX5jB,UAAW,6DAGb,eAAC,GAAkB,CACjBA,UACE,gEAMZ,GC7He6/B,I,OC2BE,SAAH,GAQP,IAPLd,EAAmB,EAAnBA,oBACA3b,EAAoB,EAApBA,qBACA0c,EAAmB,EAAnBA,oBACAd,EAAc,EAAdA,eACAe,EAAsB,EAAtBA,uBACAC,EAAO,EAAPA,QACAf,EAAc,EAAdA,eAEA,EAAyC5hC,mBAAS,IAAG,oBAA9C3N,EAAW,KAAEyoC,EAAiB,KAK/B8H,EA1BmB,SAACD,EAAStwC,GASnC,OAP4B,OAAPswC,QAAO,IAAPA,OAAO,EAAPA,EAASxyC,QAC5B,SAAC0yC,GAAG,OACFzwC,GAAkBywC,EAAIt8B,MAAOlU,IAC7BD,GAAkBywC,EAAIf,MAAOzvC,IAC7BD,GAAkBywC,EAAId,OAAQ1vC,EAAY,GAIhD,CAgB0BywC,CAHEL,EACtBE,EAAQ1jB,MAAM,EpKFO,IoKGrB0jB,EAC0DtwC,GAExD0wC,EAAiBH,EAAgBzyC,QAAO,SAAC0yC,GAAG,OAAsB,IAAjBA,EAAItc,QAAiB,IACtEyc,EAAmBJ,EAAgBzyC,QACvC,SAAC0yC,GAAG,OAAsB,IAAjBA,EAAItc,QAAkB,IAGjC,OACE,uCACE,uBAAK5jB,UAAU,wBAAuB,UACpC,sBAAKA,UAAU,qBAAoB,SACjC,eAAC,GAAU,CACTqpB,oBAAqBiP,KAASH,EAAmB,KACjDzoC,YAAaA,MAGjB,uBAAKsQ,UAAU,yBAAwB,UACrC,uBAAMA,UAAU,+BAA8B,mCAG9C,eAAC,GAAM,CAACsf,SAAUygB,UAGrBK,EAAen/C,OAAS,EACvB,eAAC,GAAS,CACR08C,QAAQ,aACRC,iBAAiB,8BACjBC,cAAeuC,EAAen/C,OAAO,SAErC,sBAAK+e,UAAU,qBAAoB,SAChCogC,EAAepvC,KAAI,SAACpX,GAAI,OACvB,eAAC,GAAY,CACXA,KAAMA,EACNmlD,oBAAqBA,EACrB3b,qBAAsBA,EAEtB4b,eAAgBA,EAChBC,eAAgBA,EAChBvvC,YAAaA,EACbwvC,cAAeD,EAAep+C,QAAQjH,EAAK0G,KAJtC1G,EAAK0G,GAKV,QAIN,KACH+/C,EAAiBp/C,OAAS,EACzB,eAAC,GAAS,CACR08C,QAAO,UAA+B,IAA1ByC,EAAen/C,OAAe,MAAQ,gBAClD28C,iBAAiB,8BACjBC,cAAewC,EAAiBp/C,OAAO,SAEvC,sBAAK+e,UAAU,qBAAoB,SAChCqgC,EAAiBrvC,KAAI,SAACpX,GAAI,OACzB,eAAC,GAAY,CACXA,KAAMA,EACNmlD,oBAAqBA,EACrB3b,qBAAsBA,EAEtB4b,eAAgBA,EAChBC,eAAgBA,EAChBvvC,YAAaA,EACbwvC,cAAeD,EAAep+C,QAAQjH,EAAK0G,KAJtC1G,EAAK0G,GAKV,QAIN,OAGV,GC9GeggD,I,OC2GAr9B,aANS,SAACzlB,GAAK,MAAM,CAClCg3B,qBAAsBh3B,EAAM4L,QAAQC,cACpC85B,eAAgB3lC,EAAM4L,QAAQL,QAC9B9O,QAASuD,EAAMvD,QAAQ8O,QACxB,GAEcka,EA5FQ,SAAH,GAqBb,IApBL87B,EAAmB,EAAnBA,oBACAvqB,EAAoB,EAApBA,qBACA2O,EAAc,EAAdA,eACAC,EAAoB,EAApBA,qBACAC,EAAiB,EAAjBA,kBAAkB,EAAD,EACjByc,2BAAmB,OAAQ,MAC3BS,wBAAgB,OAAQ,EACxBvB,EAAc,EAAdA,eACAe,EAAsB,EAAtBA,uBACAS,EAAW,EAAXA,YACAC,EAAY,EAAZA,aACAC,EAAe,EAAfA,gBACApd,EAAe,EAAfA,gBACA2b,EAAc,EAAdA,eACA1b,EAAoB,EAApBA,qBACAC,EAAiB,EAAjBA,kBACAE,EAAmB,EAAnBA,oBACA1N,EAAc,EAAdA,eACA/7B,EAAO,EAAPA,QACA0pC,EAAqB,EAArBA,sBAEA,EAAyCtmB,oBAAS,GAAM,oBAAjDsjC,EAAc,KAAEC,EAAc,KAErC,OAAIL,EAEA,qCACE,uBACEvgC,UAAW+B,KAAW,mBAAoB,CACxC,4BAA6BiU,IAC5B,UAEH,sBAAKhW,UAAU,+CAA8C,SAC3D,eAAC,GAAQ,CACP++B,oBAAqBA,EACrB3b,qBAAsBA,EACtB0c,oBAAqBA,EACrBd,eAAgBA,EAChBe,uBAAwBA,EACxBC,QAASS,EACTxB,eAAgBA,MAGpB,sBAAKj/B,UAAU,mBAAkB,SAC/B,eAAC,GAAwB,CACvBmjB,eAAgBA,EAChBC,qBAAsBA,EACtBC,kBAAmBA,EACnBmd,YAAaA,EACbE,gBAAiBA,EACjBpd,gBAAiBA,EACjBC,qBAAsBA,EACtBC,kBAAmBA,EACnBC,0BAA2Bwb,EAAeh+C,OAAS,GACnDyiC,oBAAqBA,EACrB1N,eAAgBA,EAChB2N,sBAAuBA,WAQ/B,qCACE,uBACE3jB,UAAW+B,KAAW,mBAAoB,CACxC,4BAA6B9nB,EAC7B,uCAAwCu6B,IACvC,UAEH,uBAAKxU,UAAU,cAAa,UAC1B,eAAC,GAAY,CAACs9B,aAAcsD,IAC5B,eAAC,GAAQ,CAAClW,MAAOiW,OAEnB,uBAAK3gC,UAAU,mBAAkB,UAC/B,eAAC,GAAuB,IACxB,eAAC,GAAc,OAEjB,eAAC,GAAO,QAKlB,KCjGM6gC,GACE,qDADFA,GAEa,oDAFbA,GAGM,qDCLGC,I,OC0GA79B,aA1BgB,SAACzlB,GAAK,MAAM,CACzCV,QAASymB,GAAU/lB,GACnBgT,qBAAsBX,GAAwBrS,GAC9C+H,MAAO/H,EAAM+F,KAAKmB,iBAClBf,UAAWnG,EAAMyF,SAASC,IAC1B8yB,eAAgBx4B,EAAMvD,QAAQ8O,QAC/B,IAEiC,SAACnL,GAAQ,MAAM,CAC/Cs6C,kBAAmB,SAAC18C,GAClBoC,EAASrC,EAAgBC,GAC3B,EACAi0B,eAAgB,SAACrlB,GACfxM,EAASgN,GAAaR,GACxB,EACAmtC,8BAA+B,SAAC3qC,EAAoBvJ,GAClDzF,EAAS+O,GAA4BC,EAAoBvJ,GAC3D,EACAw0C,gCAAiC,SAACz0C,GAChCxF,EAASoP,GAA+B5J,GAC1C,EACAi6C,uBAAwB,SAACznB,GACvBh4B,EAASmM,GAAiB6rB,GAC5B,EACD,GAEc3S,EAlFiB,SAAH,GAYtB,IAXLnmB,EAAO,EAAPA,QACA0T,EAAoB,EAApBA,qBACAjL,EAAK,EAALA,MACAkqB,EAAc,EAAdA,eACAyoB,EAAiB,EAAjBA,kBACAX,EAA6B,EAA7BA,8BACAM,EAA+B,EAA/BA,gCACAwF,EAAsB,EAAtBA,uBACA0D,EAAM,EAANA,OACA/qB,EAAc,EAAdA,eAGA,EFzB4C,SAC5CxlB,EACAjL,EACAkqB,EACAyoB,EACAX,EACAM,EACAwF,EACA15C,EACAo9C,GAEA,MAA6BC,eAArBnjC,EAAQ,EAARA,SAAUojC,EAAM,EAANA,OAElB,EAAwC5jC,mBAAS,CAAC,GAAE,oBAA7C8Y,EAAY,KAAE+qB,EAAe,KACpC,EAAoC7jC,oBAAS,GAAM,oBAA5C+Y,EAAU,KAAE+qB,EAAa,KAE1BC,EAAmBH,EAAOI,UAC9BJ,EAAOpgD,QAAQpB,IAAmBA,GAAgBwB,OAClDggD,EAAOpgD,QAAQ,MAGXygD,EAAoBC,UAAUH,GAE9BI,EAA2BC,aAAU5jC,EAAWojC,EAAQ,CAC5D59B,OAAO,EACP9hB,KAAM,CAAC5B,GAAOC,UAAUC,QAGpB6hD,EAAsBD,aAAU5jC,EAAWojC,EAAQ,CACvD59B,OAAO,EACP9hB,KAAM,CAAC5B,GAAOC,UAAUG,gBAGpB4hD,EAAqBF,aAAU5jC,EAAWojC,EAAQ,CACtD59B,OAAO,EACP9hB,KAAM,CAAC5B,GAAOC,UAAUE,eAGpB8hD,EAAiBlsB,uBACrB,SAAC/xB,EAAW29C,GACY39C,EAAU0wB,MAAK,SAAC/zB,GAAE,OAAKA,IAAOghD,CAAiB,IAGnEjE,EAAuBiE,IAEvBJ,EAAgBL,IAChBM,GAAc,GAElB,GACA,CAAC9D,IAsEH,OAnEA1/B,qBAAU,WASR,GARAujC,EAAgB,CAAC,GACjBC,GAAc,GAEVK,IACF/xB,EAAe,MACfyoB,EAAkB,OAGhBwJ,GAAuB5lD,OAAOS,KAAKgJ,GAAOtE,OAAS,EAAG,CAGxD2gD,EAAej+C,EAAW29C,GAG1BpJ,EAAkB,MAIlB,IAAM2J,EAAkC5/B,YAAW,WACjD,IAAM3b,EAAS26C,EAAOviC,MAAMjf,IAAiB,GAE7C,GADkB3D,OAAOS,KAAKgJ,GAAO8uB,MAAK,SAAC9wB,GAAI,OAAKA,IAAS+C,CAAM,IACpD,CACb,IAAM9K,EAAkB+J,EAAMe,IACY,OAAf9K,QAAe,IAAfA,OAAe,EAAfA,EAAiByF,QAAS,GAGnD42C,EAAgCr8C,GAIlCi0B,EAAenpB,EACjB,MACE46C,EAAgBL,IAChBM,GAAc,EAElB,GAAG,KAEH,OAAO,kBAAMh/B,aAAa0/B,EAAiC,CAC7D,CAEA,GAAIF,GAAsB7lD,OAAOS,KAAKiU,GAAsBvP,OAAS,EAAG,CACtE2gD,EAAej+C,EAAW29C,GAG1B7xB,EAAe,MAEf,IAAMoyB,EAAkC5/B,YAAW,WACjD,IAAMoT,EAAoB4rB,EAAOviC,MAAMjf,IAAgB,GAEjDqiD,EAAuBtxC,EAAqB6kB,GAE9CysB,GACFvK,EAA8BliB,GAAmB,GACjD6iB,EAAkB4J,EAAqBloD,QAEvCsnD,EAAgBL,IAChBM,GAAc,GAElB,GAAG,KAEH,OAAO,kBAAMh/B,aAAa0/B,EAAiC,CAC7D,CAGF,GAAG,CAACd,EAAQE,IAEL,CAAE9qB,eAAcC,aACzB,CE/FuC2rB,CACnCvxC,EACAjL,EACAkqB,EACAyoB,EACAX,EACAM,EACAwF,EATO,EAAT15C,UAWEo9C,GATM5qB,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAYtB,OAAIA,EAEA,uBAAKpW,UAAU,iBAAgB,UAC7B,eAAC,GAAO,IACR,eAAC,GAAQ,IACT,eAAC,GAAe,CAACmW,aAAcA,EAAcC,WAAYA,OAK3D,uBAAKpW,UAAU,iBAAgB,UAC7B,eAAC,GAAO,IACR,eAAC,GAAQ,IACT,uBAAKA,UAAU,mBAAkB,UAC/B,eAAC,GAAe,IAChB,eAAC,GAAS,IACV,sBACEA,UAAW+B,KAAW,4BAA6B,CACjD,6CAA8CiU,IAC7C,SAEH,eAAC,GAAW,CAAC/7B,QAAS6C,SAG1B,eAAC,GAAW,IACZ,eAAC,GAAa,MAItB,KC7EaklD,GAAuBriC,aAAG,mICD1BsiC,GAAuBxD,wBAAc,MAOrCyD,GAA+B,SAAH,GAAsB,IAAhB37C,EAAQ,EAARA,SAC7C,EAAwC8W,oBAAS,GAAM,oBAAhD8kC,EAAY,KAAEC,EAAe,KACpC,EAAkC/kC,oBAAS,GAAM,oBAA1CglC,EAAS,KAAEC,EAAY,KAC9B,EAAgDjlC,oBAAS,GAAK,oBAAvDklC,EAAgB,KAAEC,EAAmB,KA2B5C,OACE,eAACP,GAAqBpD,SAAQ,CAC5B3jD,MAAO,CACLqlB,YA5Bc,WAClB+hC,GAAa,GAEb,IAAMG,EAAoBxgC,YAAW,WACnCmgC,GAAgB,EAClB,GAAG,KAGGM,EAAezgC,YAAW,WAC9BqgC,GAAa,EACf,GAAG,MAGGK,EAAe1gC,YAAW,WAC9BmgC,GAAgB,GAChBI,GAAoB,EACtB,GAAG,KAEH,OAAO,WACLrgC,aAAasgC,GACbtgC,aAAaugC,GACbvgC,aAAawgC,EACf,CACF,EAMMJ,mBACAJ,eACAK,oBAAqB,SAAChlD,GAAK,OAAKglD,EAAoBhlD,EAAM,EAC1D4kD,gBAAiB,SAAC5kD,GAAK,OAAK4kD,EAAgB5kD,EAAM,EAClD6kD,aACA,SAED97C,GAGP,E,SC1CMq8C,I,OAAe,SAAH,OAAMlqC,EAAC,EAADA,EAAC,OACvB,uCACE,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAGA,EAAI,IAC1C,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAE,KAAKC,EAAGA,MACvC,GAGCmqC,GAAc,SAAH,OAAMnqC,EAAC,EAADA,EAAC,OACtB,uCACE,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAGA,EAAI,IAC1C,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAE,KAAKC,EAAGA,IACxC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAGA,E5KmBM,K4KlB5C,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAE,IAAIC,EAAGA,EAAIoqC,OAC1C,EAGCC,GAAgB,SAAH,GAAkB,IAAZtqC,EAAC,EAADA,EAAGC,EAAC,EAADA,EAC1B,OACE,uCACE,uBAAMT,MAAM,IAAIa,OAAO,IAAIL,EAAGA,EAAGC,EAAGA,IACpC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAGA,EAAGC,EAAGA,E5KUI,K4KT1C,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAGA,EAAGC,EAAGA,EAAIoqC,OAGjD,EAEaE,GAAyB,SAAH,OAAM16C,EAAK,EAALA,MAAK,OAC5C,sBAAK0X,UAAU,kBAAiB,SAC9B,gBAAC,KAAa,CACZC,QAAQ,eACRhI,MAAM,SACNa,OAAO,OACPmqC,gBACY,SAAV36C,EACI5J,GACAA,GAENwkD,gBACY,SAAV56C,EACI5J,GACAA,GACL,UAED,eAAC,GAAY,CAACga,EAAG,IAEjB,eAAC,GAAW,CAACA,EAAG,KAChB,eAAC,GAAa,CAACD,EAAG,IAAKC,EAAG,KAE1B,eAAC,GAAW,CAACA,EAAG,MAChB,eAAC,GAAa,CAACD,EAAG,IAAKC,EAAG,MAE1B,eAAC,GAAW,CAACA,EAAG,MAChB,eAAC,GAAa,CAACD,EAAG,IAAKC,EAAG,UAExB,EAGKyqC,GAAgB,SAAH,GAAiC,IAA3B1qC,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGzX,EAAM,EAANA,OAAQqH,EAAK,EAALA,MAC5C,OACE,eAAC,KAAa,CACZ2X,QAAQ,cACRhI,MAAM,QACNa,OAAO,OACPmqC,gBACY,SAAV36C,EACI5J,GACAA,GAENwkD,gBACY,SAAV56C,EACI5J,GACAA,GACL,SAED,uBAAMuZ,MAAM,MAAMa,OAAO,KAAKL,EAAGA,EAAGC,EAAGA,EAAa,EAATzX,KAGjD,EC7EM4hD,I,OAAc,WAAH,OACf,uCACE,uBAAM5qC,MAAM,MAAMa,OAAO,KAAKL,EAAE,IAAIC,EAAE,OACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAG,KACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAG,KACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAG,MACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAG,MACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAG,MACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAE,IAAIC,EAAG,QACrC,GAGCqqC,GAAgB,SAAH,OAAMtqC,EAAC,EAADA,EAAC,OACxB,uCACE,uBAAMR,MAAM,IAAIa,OAAO,IAAIL,EAAGA,EAAGC,EAAE,OACnC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAGA,EAAGC,EAAG,KACtC,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAGA,EAAGC,EAAG,KACvC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAGA,EAAGC,EAAG,MACtC,uBAAMT,MAAM,KAAKa,OAAO,KAAKL,EAAGA,EAAGC,EAAG,MACtC,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAGA,EAAGC,EAAG,MACvC,uBAAMT,MAAM,MAAMa,OAAO,KAAKL,EAAGA,EAAGC,EAAG,QACtC,EAGQ0qC,GAA0B,SAAH,OAAM96C,EAAK,EAALA,MAAK,OAC7C,sBAAK0X,UAAU,mBAAkB,SAC/B,gBAAC,KAAa,CACZC,QAAQ,eACRhI,MAAM,SACNa,OAAO,OACPmqC,gBACY,SAAV36C,EACI5J,GACAA,GAENwkD,gBACY,SAAV56C,EACI5J,GACAA,GACL,UAED,eAAC,GAAW,IACZ,eAAC,GAAa,CAAC+Z,EAAG,UAEhB,EAGK4qC,GAAiB,SAAH,GAA2B,IAArBpiD,EAAM,EAANA,OAAQqH,EAAK,EAALA,MACjCmQ,EAAIxX,EAAS,EAAI,GAAK,EAE5B,OACE,wBAAO+e,UAAU,oCAAmC,SAClD,8BACE,8BACE,eAAC,KAAa,CACZC,QAAQ,cACRhI,MAAM,QACNa,OAAO,OACPmqC,gBACY,SAAV36C,EACI5J,GACAA,GAENwkD,gBACY,SAAV56C,EACI5J,GACAA,GACL,SAED,eAAC,GAAa,CAAC+Z,EAAGA,WAM9B,ECjFa6qC,I,OAAsB,CACjCC,QAAS,CAAEC,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,IACvDhhB,UAAW,QACX8L,SAAU,CAAEh2B,GAAI,IAAKC,GAAI,KACzBze,SAAS,IAGE2pD,GAAuB,SAAH,GAK1B,IAAD,IAJJL,eAAO,MAAGD,GAAoBC,QAAO,MACrC5gB,iBAAS,MAAG2gB,GAAoB3gB,UAAS,MACzC8L,gBAAQ,MAAG6U,GAAoB7U,SAAQ,MACvCx0C,eAAO,MAAGqpD,GAAoBrpD,QAAO,EAErC,OACE,uBACE+lB,UAAW+B,KAAW,UAAW,CAAE,gBAAiB9nB,IACpD0rB,MAAO,CAAEyG,UAAU,aAAD,OAAeqiB,EAASh2B,EAAC,eAAOg2B,EAAS/1B,EAAC,QAAQ,UAEpE,uBACEsH,UAAW+B,KAAW,gBAAgB,kBAAD,OAAoB4gB,MAE3D,qBAAI3iB,UAAU,gBAAe,mBAAY,OAAPujC,QAAO,IAAPA,OAAO,EAAPA,EAASC,OAAM,OACjD,qBAAIxjC,UAAU,gBAAe,SAAS,OAAPujC,QAAO,IAAPA,OAAO,EAAPA,EAASE,SAExC,wBACA,qBAAIzjC,UAAU,gBAAe,mBAAY,OAAPujC,QAAO,IAAPA,OAAO,EAAPA,EAASG,OAAM,OACjD,qBAAI1jC,UAAU,gBAAe,SAAS,OAAPujC,QAAO,IAAPA,OAAO,EAAPA,EAASI,WAG9C,EC3BaE,GAAqB,SAACl8C,GACjC,IACI8Q,EAAGkqB,EADDjqB,EAAI/Q,EAAE2+B,QAHQ,IAcpB,OARIxkC,OAAOkH,WAAarB,EAAEy+B,QATJ,KAUpB3tB,EAAI9Q,EAAEy+B,QAAU7nC,GAAaF,KART,GASpBskC,EAAY,UAEZlqB,EAAI9Q,EAAEy+B,QAAU7nC,GAAaF,KAAOE,GAAaF,KAAO,EAZrC,GAanBskC,EAAY,QAGP,CAAElqB,IAAGC,IAAGiqB,YACjB,E,SCTamhB,I,OAAyB,SAAC9D,EAAS+D,GAC9C,OAAO/D,EACJxyC,QAAO,oCAAEpN,EAAG,KAAG,YAAM2jD,EAAa79C,SAAS9F,EAAI,IAC/C2Q,MAAK,SAACgG,EAAGC,GAGR,OAAO+sC,EAAaljD,QAAQkW,EAAE,IAAMgtC,EAAaljD,QAAQmW,EAAE,GAC7D,IACChG,KAAI,WAAerQ,GAAC,wBAAdP,EAAG,KAAElF,EAAK,WAAS,CAAC,IAAI4qC,KAAKsY,GAAgBh+C,IAAOlF,EAAM,GACrE,GAEM8oD,GAAc,IACdlrC,GAAS,IACTgb,GAAgB,GAAhBA,GAA2B,GAA3BA,GAAuC,GAAvCA,GAAiD,GACjDmwB,GAAU,CAAC,EAEJC,GAAa,SAAH,GAAmD,IAA7C1wB,EAAU,EAAVA,WAAY2wB,EAAW,EAAXA,YAAaJ,EAAY,EAAZA,aAC9CK,EAAyBlkC,GAAY6jC,GAC3C,EAAsC1mC,mBAASimC,IAAoB,oBAA5DvzB,EAAW,KAAEs0B,EAAc,KAClC,EAA4ChnC,wBAASC,GAAU,oBAAxDgnC,EAAc,KAAEC,EAAiB,KAExC,EACEhF,qBAAWf,IADLG,EAAgB,EAAhBA,iBAAkBC,EAAmB,EAAnBA,oBAGpB4F,EAAoB73B,MAAM6G,GAAc,IAAMA,EAE9CixB,EAAuB,CAAC,GAAI,EAAG,GAC/BC,EAAsB,CAC1BC,KACAA,KACAA,MAGIC,EACJjG,GAAoB,IAAI7Y,KAAKsY,GAAgBO,IAEzCkG,EAAgBlG,GAAoBwF,EAAYW,KAAKnG,GAErDoG,EAAajpD,OAAOS,KAAK4nD,EAAYa,SACrCC,EAAanpD,OAAO6e,QAAQwpC,EAAYa,SACxCE,EAAUppD,OAAOS,KAAK4nD,EAAYW,MAClC9E,EAAUlkD,OAAO6e,QAAQwpC,EAAYW,MAErCK,EAAanF,EAAQhvC,KAAI,oCAAE5Q,EAAG,KAAElF,EAAK,WAAM,CAC/C,IAAI4qC,KAAKsY,GAAgBh+C,IACzBlF,EACD,IACKkqD,EAAcD,EAAWn0C,KAAI,oCAAE5Q,EAAG,KAAG,YAAMA,CAAG,IAE9CilD,EAAWC,UACdX,KAAOS,GAAeT,KAAOS,IAAY,MAC1C,IAEIG,EAAU,IAAIzf,KAAK6e,KAAOS,IAChCG,EAAQC,QAAQD,EAAQE,UAAYJ,EAAWrB,IAC/C,IAAM0B,EAAU,IAAI5f,KAAK6e,KAAOS,IAChCM,EAAQF,QAAQE,EAAQD,UAAYJ,EAAWrB,IAE/C,IAAM2B,EAAe3F,EAClBxyC,QAAO,oCAAEpN,EAAG,KAAG,YAAM2jD,EAAa79C,SAAS9F,EAAI,IAC/C4Q,KAAI,WAAerQ,GAAC,wBAAdP,EAAG,KAAElF,EAAK,WAAS,CAAC,IAAI4qC,KAAKsY,GAAgBh+C,IAAOlF,EAAM,IAEnE+pD,EAAWj0C,KACT,WAAarQ,GAAC,wBAATzF,GAAF,KAAO,aACP+oD,GAAQtjD,GAAKgkD,OAEXiB,OAAO,CACNhrC,KAAK8K,IAAG,MAAR9K,KAAI,aAAQ1f,IAAS0f,KAAK8K,IAAG,MAAR9K,KAAI,aAAQ1f,IAAS8oD,GAC1CppC,KAAKmM,IAAG,MAARnM,KAAI,aAAQ1f,IAAS0f,KAAKmM,IAAG,MAARnM,KAAI,aAAQ1f,IAAS8oD,KAE3CzY,MAAM,CAACzyB,GAAQ,GAAG,IAGzB,IAAM+sC,EAASlB,OAEZiB,OAAO,CAACL,EAASG,IACjBna,MAAM,CAAC,EAAGiZ,IAETF,GACFuB,EAAOD,OAAOtB,GAGhB,IAyBMwB,EAAqB,WACzBlH,EAAoB,MACpByF,EAAef,GACjB,EAYA,OAVA3lC,qBAAU,WACRgnC,KAAa,YAAD,OAAahG,EAAgB,OAAMoH,OACjD,GAAG,CAACpH,IAEAyF,IAA2BL,GACzBO,GACFC,OAAkBjnC,GAKpB,uBAAK0C,UAAU,cAAa,UAC1B,eAAC,GAAoB,CACnBujC,QAASxzB,EAAYwzB,QACrB5gB,UAAW5S,EAAY4S,UACvB8L,SAAU1e,EAAY0e,SACtBx0C,QAAS81B,EAAY91B,UAEtB8qD,EAAW/zC,KAAI,SAACg1C,EAAYC,GAC3B,IAAMC,EAAepqD,OAAOkQ,OAAOm4C,EAAYa,SAASiB,GAalDE,EAAW,SAAChmC,GAChBwkC,KAAUxkC,GAAK2K,KACb65B,KACYV,GAAQgC,IACjBG,cAAc,GACdC,YAAW,SAAC5tC,GAAC,gBAAQA,EAAE8P,QAAQ,GAAE,IAExC,EAEM+9B,EAAgB3B,OAAU4B,SAAQ,SAAU7lD,GAChD,OAAa,OAANA,CACT,IAyBM8lD,EAAQ7B,OAEX8B,OAAO,CACN,CAAC,EAAG,GACJ,CAACjC,EAAmB1rC,MAErB8P,GAAG,OAAO,SAACjhB,GACV,GAAIA,EAAE++C,UAAW,CACf,IAAMC,EAAiBh/C,EAAE++C,UAAU11C,IAAI60C,EAAOe,QAC9CrC,EAAkBoC,GAClBhC,KAAa,uBAAuB75B,KAAK07B,EAAMK,KAAM,KACvD,CACF,IAEFlC,KAAa,uBAAuB75B,KAAK07B,GAIzC,OACE,gBAAC,IAAMlkC,SAAQ,WACb,sBAAKtC,UAAU,2BAA0B,SAAEgmC,IAC3C,uBACEc,oBAAoB,gBAEpB7uC,MAAOusC,EAAoB1wB,GAAcA,GACzChb,OAAQA,GAASgb,GAAaA,GAAc,UAE5C,gCACE,2BAAUxzB,GAAG,OAAM,SACjB,uBAAMmY,EAAG,EAAGC,EAAG,EAAGT,MAAOusC,EAAmB1rC,OAAQA,SAIxD,gCACE,2BAAUxY,GAAG,aAAY,SACvB,uBACEwY,OAAQA,IACRb,MAAOusC,EACP/rC,EAAG,EACHC,EAAG,SAKT,qBACEpY,GAAI0lD,EACJ55B,UAAS,oBAAe0H,GAAW,YAAIA,GAAU,KAAI,UAErD,oBACE9T,UAAU,yBACVG,IAjGO,SAACA,GACZmkC,EACFK,KAAUxkC,GACPgJ,aACAC,SAAS,KACT0B,KAAK65B,KAAckB,GAAQO,cAAc,IAE5CzB,KAAUxkC,GAAK2K,KAAK65B,KAAckB,GAAQO,cAAc,GAE5D,EAyFUh6B,UAAS,sBAAiBtT,GAAM,OAGlC,oBAAGkH,UAAU,2BAA2BG,IAAKgmC,IAE7C,oBACEnmC,UAAU,gCACVG,IAAKgmC,EACL/5B,UAAS,oBAAeo4B,EAAiB,SAG3C,uBACExkC,UAAU,0BACVvH,GAAG,GACHC,EAAG,GAAKob,GAAY,mBAKtB,oBAAG9T,UAAU,qBAAqB+mC,cAtDtB,WAAH,OAASxC,OAAkBjnC,EAAW,IAwD/C,oBACE0C,UAAU,yBACVgnC,SAAS,mBAAkB,SAE1B7B,EAAWn0C,KAAI,WAAWwrB,GAAK,wBAAdp8B,EAAG,KAAG,YACtB,uBACE4f,UAAW+B,KAAW,wBAAyB,CAC7C,iCACE48B,IAAqBuG,EAAQ1oB,GAC/B,+BACEmiB,GAAoBoF,EAAa9iD,OAAS,IAE9CX,GAAI4kD,EAAQ1oB,GAEZyqB,GAAIpB,EAAOzlD,GACX8mD,GAAI,EACJC,GAAItB,EAAOzlD,GACXgnD,GAAItuC,GACJ8mC,YAAa,SAACj4C,GAAC,OA5LP,SAACA,EAAGvH,GAG9B,GAFAw+C,EAAoBx+C,GAEhBuH,EAAG,CACL,IAAM0/C,EAAa,IAAIvhB,KAAKsY,GAAgBh+C,IAC5C,EAA4ByjD,GAAmBl8C,GAAvC8Q,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGiqB,EAAS,EAATA,UAEd0hB,EAAe,CACbd,QAAS,CACPC,OAAQ,WACRC,OAAQrjD,EACRsjD,OAAQ,OACRC,OAAQ0D,EAAWC,mBAAmB,UAAW,CAC/CC,IAAK,UACLC,MAAO,OACPC,KAAM,aAGV9kB,YACA8L,SAAU,CAAEh2B,IAAGC,KACfze,SAAS,GAEb,CACF,CAsKsBytD,CAAoB//C,EAAGu9C,EAAQ1oB,GAAO,EAExCta,aAAc4jC,GART1lD,EAAMo8B,EASX,MAILqoB,GACC,qBAAG7kC,UAAU,kCAAiC,UAC3C6kC,EAAc7zC,KAAI,SAAC9V,EAAOshC,GACzB,OAAIypB,IAAgBzpB,EAEhB,gBAAC,IAAMla,SAAQ,WACb,uBACEtC,UAAU,4BACVinC,GAAI,EACJC,GAAIjD,GAAQznB,GAAOthC,GACnBisD,GAAI3C,EACJ4C,GAAInD,GAAQznB,GAAOthC,KAErB,qBAAG8kB,UAAU,qBAAoB,UAC/B,uBACEA,UAAU,yBACVinC,GAAIpB,EAAOjB,GACXsC,GAAIjD,GAAQznB,GAAOthC,GACnBisD,GAAItB,EAAOjB,GAAsB,EACjCwC,GAAInD,GAAQznB,GAAOthC,KAErB,uBACE8kB,UAAU,yBACVvH,EAAGotC,EAAOjB,GACVlsC,EAAGurC,GAAQznB,GAAOthC,GAAO,SAEnB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOqtB,QAAQ,UArBDrtB,EAAQshC,GA2BxB,IAEX,IAAE,OAKN,oBACExc,UAAW+B,KAAW,2BAA4B,CAChD,kCACE48B,GAAoBoF,EAAa9iD,OAAS,IAE9C+lD,SAAS,aAAY,SAErB,uBAAMtmD,EAvKC,SAAC9G,GAChB,IAAI+xB,EAAS/xB,EAAKoX,KAAI,SAACyH,EAAG9X,GACxB,OAAU,OAAN8X,EACK,CAACotC,EAAOT,EAAYzkD,IAAKsjD,GAAQgC,GAAaxtC,IAE9C,IAEX,IAEA,OAAO6tC,EAAc36B,EACvB,CA6JmBg8B,CAASzB,OAGpB,oBACElmC,UAAU,8BACVgnC,SAAS,mBAAkB,SAE1BlD,GAAuB9D,EAAS+D,GAAc/yC,KAC7C,WAAewrB,GAAK,0BAAlBp8B,EAAG,KAAElF,EAAK,YACV,gBAAC,IAAMonB,SAAQ,WACb,uBACEtC,UAAS,0CAAqCwc,GAC9CyqB,GAAIpB,EAAOzlD,GACX8mD,GAAI,EACJC,GAAItB,EAAOzlD,GACXgnD,GAAItuC,KAEN,uBACEkH,UAAU,yBACVvH,EAAGotC,EAAOzlD,GACVsY,EAAGurC,GAAQgC,GAAa/qD,EAAM+qD,IAAc,SAEzB,QAFyB,EAE3C/qD,EAAM+qD,UAAY,aAAlB,EAAoB19B,QAAQ,KAE/B,uBACEvI,UAAS,wCAAmCwc,GAC5C97B,EAAC,UAAKikD,KAAUD,EAAoBloB,GAAQ,GAAtCmoB,IACNv4B,UAAS,oBAAey5B,EAAOzlD,GAAI,YAAI6jD,GACrCgC,GACA/qD,EAAM+qD,IAAa,wCACpBxB,EAAqBjoB,GAAM,SArBXp8B,EAAMlF,EAuBV,MAKvB,oBAAG8kB,UAAU,0BAAyB,SACpC,uBAAMtf,EAjMM,SAAC9G,GACrB,IAAI+xB,EAAS/xB,EAAKoX,KAAI,YAAmB,IAAD,oBAAhB5Q,EAAG,KAAElF,EAAK,KAChC,OAAc,OAAVA,EACK,CAAC2qD,EAAOzlD,GAAM6jD,GAAQgC,GAAa/qD,EAAM+qD,KAEzC,IAEX,IACA,OAAOtB,OAAUh5B,EACnB,CAwLmBi8B,CAAcjC,YAEvB,uBAjKiBK,MAJJA,EAAaC,EAyKtC,MAGN,E,UCnXa4B,I,OAAkB,SAAC77C,GAC9B,OAAOA,EACJwB,QAAO,SAACtS,EAAOyF,EAAGmnD,GAAI,OAAKA,EAAKjnD,QAAQ3F,KAAWyF,CAAC,IACpD6M,QAAO,SAACtS,GAAK,OAAe,OAAVA,CAAc,IAChC6V,MAAK,SAACgG,EAAGC,GAAC,OAAKD,EAAIC,CAAC,GACzB,GAKMytC,GAAuB,CAAC,GAAI,EAAG,GAE/BsD,GAAuB,CAAC,UAAW,UAAW,WAE9CC,GAAQ,CAAC,EACT/D,GAAU,CAAC,EAEJgE,GAAsB,SAAH,GAKzB,IAJLx0B,EAAW,EAAXA,YACAD,EAAU,EAAVA,WACA2wB,EAAW,EAAXA,YACAJ,EAAY,EAAZA,aAEA,EAAoD1mC,mBAAS,MAAK,oBAA3D6qC,EAAkB,KAAEC,EAAqB,KAChD,EAAsC9qC,mBAASimC,IAAoB,oBAA5DvzB,EAAW,KAAEs0B,EAAc,KAElC,EACE9E,qBAAWf,IADLG,EAAgB,EAAhBA,iBAAkBC,EAAmB,EAAnBA,oBAGpB8F,EAAsB,CAC1BC,KACAA,KACAA,MAGIvoD,EAAQN,OAAO6e,QAAQwpC,EAAYa,SACnCoD,EAAYxpB,mBAChB,kBAAM9iC,OAAOS,KAAK4nD,EAAYa,QAAQ,GACtC,CAACb,EAAYa,UAGTprD,EAAOkC,OAAO6e,QAAQwpC,EAAYW,MAClCa,EAAe/rD,EAClB4T,QAAO,gBAAEpN,EAAF,kBAAK,UAAM2jD,EAAa79C,SAAS9F,EAAI,IAC5C2Q,MAAK,SAACgG,EAAGC,GAGR,OAAO+sC,EAAaljD,QAAQkW,EAAE,IAAMgtC,EAAaljD,QAAQmW,EAAE,GAC7D,IAEI6tC,EAAgBlG,GAAoBwF,EAAYW,KAAKnG,GAErDkH,EAASlB,OAEZiB,OAAOwC,GACP7c,MAAM,CA/Cc,GA+CK/X,EA/CL,KAkDvBp3B,EAAMI,SAAQ,YAAmB,IAAD,oBAAhB4D,EAAG,KAAElF,EAAK,KACxB+oD,GAAQ7jD,GAAOukD,OAEZiB,OAAO,CAACjB,KAAOzpD,GAAQypD,KAAOzpD,KAC9BqwC,MAAM,CACL9X,EAAc40B,KAxDG,MAEH,GAyDpB,IAEAvsD,OAAO6e,QAAQspC,IAASznD,SAAQ,YAAmB,IAAD,oBAAhB4D,EAAG,KAAElF,EAAK,KAC1C8sD,GAAM5nD,GAAOukD,KAAYzpD,GAAO88B,MAAM,GAAGouB,cAAc,EACzD,IAEA,IAAME,EAAgB3B,OAAU4B,SAAQ,SAAU7lD,GAChD,OAAa,OAANA,CACT,IAEMinD,EAAW,SAAUjnD,GACzB,IAAMirB,EAASjrB,EAAEsQ,KAAI,SAACyH,EAAG9X,GACvB,OAAU,OAAN8X,EACK,CAACotC,EAAOuC,EAAUznD,IAAKsjD,GAAQmE,EAAUznD,IAAI8X,IAE7C,IAEX,IAEA,OAAO6tC,EAAc36B,EACvB,EAqBM28B,EAAuB,WAC3BH,EAAsB,MACtB9D,EAAef,GACjB,EA2BMwC,EAAqB,WACzBlH,EAAoB,MACpByF,EAAef,GACjB,EAYA,OAVA3lC,qBAAU,WACRgnC,KAAU,iBAAD,OAAkBhG,EAAgB,OAAMoH,OACnD,GAAG,CAACpH,IAEJhhC,qBAAU,WACRgnC,KAAU,oBAAD,OAAqBuD,EAAkB,OAAMnC,QACtDpB,KAAa,kBAAkBoB,QAC/BpB,KAAa,yBAAyBoB,OACxC,GAAG,CAACmC,IAGF,uBAAKloC,UAAU,uBAAsB,UACnC,eAAC,GAAoB,CACnBujC,QAASxzB,EAAYwzB,QACrB5gB,UAAW5S,EAAY4S,UACvB8L,SAAU1e,EAAY0e,SACtBx0C,QAAS81B,EAAY91B,UAGvB,uBACE6sD,oBAAoB,gBACpB7mC,QAAO,cAASuT,EAAU,YAAIC,GAC9Bxb,MAAM,OAAM,UAEXmwC,EAAUp3C,KAAI,SAACg1C,GAKd,OACE,oBACEhmC,UAAW+B,KAAW,cAAe,CACnC,uBAAwBmmC,IAAuBlC,EAC/C,qBACEkC,GAAsBA,IAAuBlC,IAGjD7lC,IAZa,SAACA,GAChBwkC,KAAUxkC,GAAK2K,KAAKk9B,GAAMhC,IAAanuC,KAAK,KAAMmuC,EACpD,EAWI55B,UAAS,oBAAey5B,EAAOG,GAAW,QAC1CttC,EAAG2vC,GAAqB,SAExB,uBACEroC,UAAU,UAEVuoC,WAAYD,EACZ1I,YAAa,SAACj4C,GAAC,OAnGC,SAACA,EAAGvH,GAChC,IAAMooD,EAAYpsD,EAAMi4B,MAAK,SAACrc,GAAI,OAAKA,EAAK,KAAO5X,CAAG,IAAE,GAAGa,OAC3D,EAA4B4iD,GAAmBl8C,GAAvC8Q,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGiqB,EAAS,EAATA,UAEdwlB,EAAsB/nD,GAEtBikD,EAAe,CACbd,QAAS,CACPC,OAAQ,cACRC,OAAQrjD,EACRsjD,OAAQ,YACRC,OAAQ6E,GAEV7lB,YACA8L,SAAU,CAAEh2B,IAAGC,KACfze,SAAS,GAEb,CAkFkCwuD,CAAsB9gD,EAAGq+C,EAAW,EACxD0C,WAAW,SACXhwC,EAAG2vC,GAAqB,SAEvBrC,EAAW/kD,OAAS,GACjB,MAAQ+kD,EAAW1pB,OAAO,IAC1B0pB,GAAU,4BARYA,KASrB,uBAhBcA,GAmB3B,IAEA,oBAAGhmC,UAAU,YAAW,SACrBpmB,EAAKoX,KAAI,WAAiBrQ,GAAO,IAAD,oBAArBkjC,EAAK,KAAE3oC,EAAK,KACtB,OACE,uBACE8kB,UAAW+B,KAAW,WAAY,CAChC,oBAAqB48B,IAAqB9a,EAC1C,kBACG8a,GAAoBA,IAAqB9a,GAC1CqkB,IAEJxnD,EAAGinD,EAASzsD,GACZoF,GAAIujC,EAEJ3hB,aAAc4jC,EACdlG,YAAa,SAACj4C,GAAC,OArGD,SAACA,EAAGvH,GAG9B,GAFAw+C,EAAoBx+C,GAEhBuH,EAAG,CACL,IAAM0/C,EAAa,IAAIvhB,KAAKsY,GAAgBh+C,IAC5C,EAA4ByjD,GAAmBl8C,GAAvC8Q,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGiqB,EAAS,EAATA,UAEd0hB,EAAe,CACbd,QAAS,CACPC,OAAQ,WACRC,OAAQrjD,EACRsjD,OAAQ,OACRC,OAAQ0D,EAAWC,mBAAmB,UAAW,CAC/CC,IAAK,UACLC,MAAO,OACPC,KAAM,aAGV9kB,YACA8L,SAAU,CAAEh2B,IAAGC,KACfze,SAAS,GAEb,CACF,CA8EkCytD,CAAoB//C,EAAGk8B,EAAM,GAF5CA,EAKX,MAGDznC,EAAM4U,KAAI,WAAuBi1C,GAAiB,IAAD,oBAArCD,EAAU,KAAEh6C,EAAM,KAEvB28C,EAAed,GAAgB77C,GAErC,OACE,oBAAGgU,UAAU,cAAc1f,GAAI0lD,EAAW,SACvC2C,EAAa33C,KAAI,SAAC9V,GAEjB,IAAM0tD,EACJ/D,GACAA,EAAcxwB,MACZ,SAACn5B,EAAOshC,GAAK,OAAKA,IAAUypB,GAAe/qD,CAAK,IAG9C2tD,EAAkBl8B,MAAMk5B,EAAOG,IACjC,EACAH,EAAOG,GAEL8C,EAAkBn8B,MAAMs3B,GAAQ+B,GAAY9qD,IAC9C,EACA+oD,GAAQ+B,GAAY9qD,GAExB,OACE,uBACE8kB,UAAW+B,KAAW,OAAQ,CAC5B,gBACEmmC,IAAuBlC,GACtB4C,GAAoBA,IAAqB1tD,EAC5C,cACGgtD,GACCA,IAAuBlC,GACxB4C,GAAoBA,IAAqB1tD,IAG9Cud,EAAGowC,EAAkB,EACrBnwC,EAAGowC,EAAkB,EACrBnjC,MAAO,CACL+iC,WAAY,MACZt8B,UAAW,oBACX,SAEI,OAALlxB,QAAK,IAALA,OAAK,EAALA,EAAOqtB,QAAQ,IARXwgC,eAWX,KAvC8CA,eA0CpD,IAEC3sD,EAAM4U,KAAI,WAAuBi1C,GAAiB,IAAD,oBAArCD,EAAU,KAAEh6C,EAAM,KACvBg9C,EAAenB,GAAgB77C,GAErC,OACE,oBACEgU,UAAU,aACV1f,GAAI0lD,EAAW,SAGdgD,EAAah4C,KAAI,SAAC9V,GAEjB,IAAM0tD,EACJ/D,GACAA,EAAcxwB,MACZ,SAACn5B,EAAOshC,GAAK,OAAKA,IAAUypB,GAAe/qD,CAAK,IAG9C+tD,EAAmBt8B,MAAMk5B,EAAOG,IAClC,EACAH,EAAOG,GAELkD,EAAmBv8B,MAAMs3B,GAAQ+B,GAAY9qD,IAC/C,EACA+oD,GAAQ+B,GAAY9qD,GAExB,OAAIA,EAEA,uBACE8kB,UAAW+B,KAAW,OAAQ,CAC5B,gBACEmmC,IAAuBlC,GACtB4C,GAAoBA,IAAqB1tD,EAC5C,cACGgtD,GACCA,IAAuBlC,GACxB4C,GAAoBA,IAAqB1tD,IAG9C+rD,GAAIgC,EACJ9B,GAAI8B,EAAmB,EACvB/B,GAAIgC,EACJ9B,GAAI8B,GAJCH,gBAQF,IAEX,KAAE,sBAxCkB/C,GA2C1B,IAEA,qBAAGhmC,UAAU,gBAAe,UACzB2lC,EAAa30C,KAAI,WAAcrQ,GAAC,wBAAbL,EAAE,KAAEpF,EAAK,YAC3B,uBACE8kB,UAAW+B,KAAW,CACpB,2BAAkC,IAANphB,EAC5B,4BAAmC,IAANA,EAC7B,2BAAkC,IAANA,IAE9BD,EAAGinD,EAASzsD,GACZoF,GAAIA,GACCA,EACL,IAGHqlD,EAAa30C,KAAI,WAAarQ,GAAH,OAAI,kBAAJ,GACnBqQ,KAAI,SAAC9V,EAAOshC,GACjB,IAAM2sB,EAAatD,EAAOuC,EAAU5rB,IAC9B4sB,EAAanF,GAAQmE,EAAU5rB,IAAQthC,GACvCmuD,EAAS5E,GAAqB9jD,GAC9B2oD,EAAiB38B,MAAMk5B,EAAOuC,EAAU5rB,KAC1C,EACAqpB,EAAOuC,EAAU5rB,IAEf+sB,EAAiB58B,MAAMs3B,GAAQmE,EAAU5rB,IAAQthC,IACnD,EACA+oD,GAAQmE,EAAU5rB,IAAQthC,GAE9B,OACE,gBAAC,IAAMonB,SAAQ,WACb,uBACE5hB,EAAC,UAAKikD,KAAUD,EAAoB/jD,GAAI,GAAlCgkD,IAENhiC,OAAQolC,GAAqBpnD,GAC7ByrB,UAAS,oBAAe+8B,EAAU,aAAKC,EAAU,oBAAYC,EAAM,MAAI,uBAFlD7sB,IAIvB,uBACExc,UAAU,OAEVvH,EAAG6wC,EAAiB,EACpB5wC,EAAG6wC,EAAiB,EACpB5jC,MAAO,CACL+iC,WAAY,MACZt8B,UAAW,oBACX,SAEI,OAALlxB,QAAK,IAALA,OAAK,EAALA,EAAOqtB,QAAQ,IAAE,uBARGiU,MATJusB,eAqBzB,GAAE,YAMd,ECtXMS,I,OAAY,CAAC,cAAe,yBCVnBC,GDYM,SAAH,GAA4B,IAAtBxK,EAAc,EAAdA,eACtB,EAAkC5hC,mBAASmsC,GAAU,IAAG,oBAAjDE,EAAS,KAAEC,EAAY,KAC9B,EAAsCtsC,mBAAS,GAAE,oBAA1CoW,EAAW,KAAEm2B,EAAc,KAClC,EAA4CvsC,mBAAS,GAAE,oBAAhDwsC,EAAc,KAAEC,EAAiB,KACxC,EAA8CzsC,mBAAS,GAAE,oBAAlD0sC,EAAe,KAAEC,EAAkB,KAC1C,EAA4C3sC,mBAAS,QAAO,oBAArD4sC,EAAc,KAAEC,EAAiB,KAOvC,EAL8ChtC,GAC7C2C,GACA,CACE2hB,UAAW,CAAErF,MlLeQ,MkLlBjBviC,KAAR,gBAAwC,GAAE,GAA1BuwD,sBAAc,MAAG,GAAE,EAgCnC,OAzBAxsC,qBAAU,WACR,GAAkB,OAAdwsC,QAAc,IAAdA,KAAgBvwD,KAAM,CACxB,IAAMwwD,EAAkBtuD,OAAOS,KAAmB,OAAd4tD,QAAc,IAAdA,OAAc,EAAdA,EAAgBvwD,KAAKorD,SAAS/jD,OAE9DmpD,EAAkB,GAAKV,IAAcF,GAAU,IACjDU,EAAoC,IAAlBE,GAClBN,EAAoC,IAAlBM,KAElBF,EAAkB,QAClBJ,EACEviD,SAASud,cAAc,kCAAkCulC,aAG/D,CACF,GAAG,CAACX,EAAWS,IAEfxsC,qBAAU,WACRqsC,EACEziD,SAASud,cAAc,kCAAkCulC,aAE3DT,EACEriD,SAASud,cAAc,kCAAkCynB,aAE7D,GAAG,IAGD,uBAAKvsB,UAAU,wBAAuB,UACpC,sBAAKA,UAAU,4BAA2B,SACvCwpC,GAAUx4C,KAAI,SAACs5C,GACd,OACE,sBACEtqC,UAAW+B,KAAW,2BAA4B,CAChD,mCAAoC2nC,IAAcY,IAGpDjpC,QAAS,kBAAMsoC,EAAaW,EAAI,EAAC,SAEhCA,GAHIA,EAMX,MAEF,sBACEtqC,UAAU,gCACV2F,MAAO,CAAE1N,MAAOgyC,GAAiB,SAElB,OAAdE,QAAc,IAAdA,KAAgBvwD,KACf8vD,IAAcF,GAAU,GACtB,eAAC,GAAU,CACTh2B,WAAYu2B,EAAkB,IAC9B5F,YAA2B,OAAdgG,QAAc,IAAdA,OAAc,EAAdA,EAAgBvwD,KAC7BmqD,aAAc9E,IAGhB,eAAC,GAAmB,CAClBxrB,YAAaA,EACbD,WAAYq2B,EACZ1F,YAA2B,OAAdgG,QAAc,IAAdA,OAAc,EAAdA,EAAgBvwD,KAC7BmqD,aAAc9E,IAGhB,SAIZ,EE3Far3B,GAAQ,CACnB2iC,QACE,0FACFC,UACE,6FAWWC,GARM,SAAH,GAAe,EAATzqC,UAAuB,IAAZjhB,EAAI,EAAJA,KACjC,OAAO6oB,GAAM7oB,GACX,sBAAKihB,UAAU,qBAAqBC,QAAQ,YAAW,SACrD,uBAAMvf,EAAGknB,GAAM7oB,OAEf,IACN,ECVa2rD,GAAgB,SAACxvD,GAC5B,MAAc,KAAVA,GAA0B,OAAVA,QAA4BoiB,IAAVpiB,EAC7B,IACmB,kBAAVA,GAAuC,mBAAVA,EACtCiH,KAAKQ,UAAUzH,GAGjBA,CACT,E,oBCAMyvD,I,OAAmB,SAAC/wD,EAAMgxD,EAAUC,GACxC,GAAIjxD,EAAKiqC,QAAUgnB,GAAmC,kBAAfjxD,EAAKsB,MAAoB,CAC9D,GAAItB,EAAKsB,MAAQ0vD,EACf,MAAO,UAET,GAAIhxD,EAAKsB,MAAQ0vD,EACf,MAAO,WAEX,CACA,OAAO,IACT,GA6VA,SAASE,KACP,OAAO,sBAAK9qC,UAAU,8BAA6B,8BACrD,CAEe+qC,ICtXAA,GD+CI,SAAH,GAWT,IAVLrB,EAAS,EAATA,UACAtmB,EAAoB,EAApBA,qBACAC,EAAiB,EAAjBA,kBACA2nB,EAAW,EAAXA,YACAH,EAAS,EAATA,UACAI,EAAmB,EAAnBA,oBACAC,EAAoB,EAApBA,qBACAC,EAAU,EAAVA,WACA9mD,EAAY,EAAZA,aACAiE,EAAK,EAALA,MAEA,OAAKjE,EAOH,sBACE2b,UAAW+B,KAAW,kBAAmB,CACvC,gCAA+C,aAAd2nC,IAChC,SAEF5tD,OAAOS,KAAK8H,GACVmJ,QAAO,SAACuhC,GACP,MAAkB,UAAd2a,GAAyB3a,IAAU2a,GAIrB,UAAdA,GAAmC,UAAV3a,CAK/B,IACC/9B,KAAI,SAAC+9B,GACJ,OACE,gBAAC,GAAS,CACR/uB,UAAW+B,KACT,6BACA,qCACA,CACE,qDACEqhB,IAGNua,QAAS5O,EACT6O,iBAAkB77B,KAChB,oCACA,CACE,4CACY,UAAVgtB,IAINzT,OAAO,OACPnX,KAAK,QAAO,UAEoB,IAA/B9f,EAAa0qC,GAAO9tC,QACnB,uBAAK+e,UAAU,uBAAsB,UACnC,uBACEA,UAAU,+BACV2F,MAAO,CACLyc,WAAYgB,EAAuB,SAAW,WAC9C,gEAIJ,eAACgoB,GAAA,EAAe,CACdC,UAAU,MACVrrC,UAAU,4CAA2C,SAErD,eAACsrC,GAAA,EAAa,CACZvoB,QAAS,IACTrH,WAAW,mCACX3jB,OAAOizC,EACPjiC,MAAMiiC,EAA2B,SAEjC,uBACEhrC,UAAW+B,KAAW,gCAAiC,CACrD,iDACEqhB,IAEJzd,MAAO,CACLvc,QAASg6B,EAAuB,QAAU,QAC1C,uEAQX/+B,EAAa0qC,GAAO/9B,KAAI,SAACggC,GACxB,IAAQp3C,EAA2Co3C,EAA3Cp3C,KAAM0K,EAAqC0sC,EAArC1sC,YAAainD,EAAwBva,EAAxBua,YAAaC,EAAWxa,EAAXwa,OAExC,OACE,eAAC,GAAS,CACRxrC,UAAU,6BACV29B,QAAS4N,EACT3N,iBAAiB,oCAEjBtiB,OAAO,OACPnX,KAAK,SAAQ,SAEZroB,OAAOS,KAAK3C,GACVmX,MAAK,SAACgG,EAAGC,GACR,OAAOD,EAAE4C,cAAc3C,EACzB,IACChG,KAAI,SAAC5Q,EAAKqrD,GACT,IAAMC,EA6L9B,SAA0BC,EAAeH,GACvC,GAAIG,EAAc1qD,SAAWuqD,EAAOvqD,OAClC,OAAO0qD,EAGT,IAAM3G,EAAU,GAehB,OAbAwG,EAAOhvD,SAAQ,SAAC8D,GACd,IAAMsrD,EAAeD,EAAcE,WAAU,SAACv0C,GAC5C,OAAOA,EAAKusB,QAAUvjC,CACxB,KAGsB,IAAlBsrD,EACF5G,EAAQv/C,KAAK,CAAEo+B,MAAOvjC,EAAIpF,MAAO,OAEjC8pD,EAAQv/C,KAAKkmD,EAAcC,GAE/B,IAEO5G,CACT,CAlNqD8G,CAC3B9a,EAAQp3C,KAAKwG,GACborD,GAEIO,EA3IA,SAAC/L,EAAS6K,GAAe,IAAD,EAC9CD,EAAgE,QAAxD,EAAG5K,EAAQxyC,QAAO,SAAC5T,GAAI,OAAKA,EAAKiqC,QAAUgnB,CAAS,IAAE,UAAE,aAArD,EAAuD3vD,MAExE,MAAwB,kBAAb0vD,EACF5K,EAAQhvC,KAAI,SAACpX,GAAI,qBACtBoyD,QAASrB,GAAiB/wD,EAAMgxD,EAAUC,IACvCjxD,EAAI,IAIJomD,CACT,CAgI+CiM,CACrBP,EACAb,GAGF,OAmCxB,SACEqB,EACAP,EACArnD,EACAmnD,EACAT,EACA5nB,EACAC,EACA4nB,EACAC,EACAC,EACA7iD,GAEA,IAAM6jD,EAAgD,WAA9Bz4C,GAAapP,GAC/B8nD,EAA+C,UAA9B14C,GAAapP,GAC9B+nD,EAAkD,aAA9B34C,GAAapP,GAEjCgoD,EAAmB,WACvBpB,GAAqB,GACrBD,EAAoB,CAAEiB,aAAY5nD,cAAaqnD,iBACjD,EAEA,OACE,gBAAC,IAAMrpC,SAAQ,WACC,IAAbmpC,EACC,uBAAKzrC,UAAU,uBAAsB,UACnC,uBAAMA,UAAU,+BAA8B,kBAC9C,eAACorC,GAAA,EAAe,CACdC,UAAU,MACVrrC,UAAU,4CAA2C,SAEpD2rC,EAAc36C,KAAI,SAACpX,EAAM4iC,GAAK,OAC7B,eAAC8uB,GAAA,EAAa,CAEZvoB,QAAS,IACTrH,WAAW,mCACX3jB,OAAOizC,EACPjiC,MAAMiiC,EAA2B,SAEjC,uBACEhrC,UAAW+B,KAAW,gCAAiC,CACrD,iDACY,IAAVya,GAAe4G,IAChB,oBAVAxpC,EAAKiqC,MAcI,MAGnBsnB,GACC,eAAC,GAAa,CACZlqD,OAAQ0qD,EAAc1qD,OACtBqH,MAAOA,EACPmQ,EAAG,EACHC,EAAG,QAIP,KACJ,uBAAKsH,UAAU,uBAAsB,UACnC,uBAAMA,UAAW,yBAAyB,SAAEksC,IAC5C,eAACd,GAAA,EAAe,CACdC,UAAU,MACVrrC,UAAU,4CAA2C,SAEpD2rC,EAAc36C,KAAI,SAACkvC,EAAK1jB,GACvB,IAAM+vB,EAA6C,IAAzBZ,EAAc1qD,OACxC,OACE,eAACqqD,GAAA,EAAa,CAEZvoB,QAAS,IACTrH,WAAW,mCACX3jB,OAAOw0C,EACPxjC,MAAMwjC,EAAiC,SAEvC,wBACEvsC,UAAW+B,KAAW,yBAA0B,CAC9C,0CACY,IAAVya,GAAe4G,IAChB,UAEFipB,GACC,uCACG3B,GAAiB,OAAHxK,QAAG,IAAHA,OAAG,EAAHA,EAAKhlD,OACnBmoC,GAAqB,eAAC,GAAY,CAACtkC,KAAMmhD,EAAI8L,aAIjDG,IACEjM,EAAIhlD,MACH,sBACE8kB,UAAU,yCACVqB,QAASirC,EAAiB,SAE1B,eAAC,GAAW,CACV1yD,KAAMsmD,EAAIhlD,MAAMtB,KAChB0hC,OAAQ4kB,EAAIhlD,MAAMogC,OAClBzO,KAAK,yBAITi+B,MAGHsB,IACElM,EAAIhlD,MACH,sBACE8kB,UAAU,mCACVqB,QAASirC,EAAiB,SAE1B,sBACExrB,IAAI,uBACJ9gB,UAAU,yBACVie,IAAG,gCAA2BiiB,EAAIhlD,WAItC4vD,UAhDD5K,EAAIrc,MAqDf,MAEDsnB,GACC,eAAC,GAAa,CACZlqD,OAAQ0qD,EAAc1qD,OACtBqH,MAAOA,EACPmQ,EAAG,EACHC,EAAG,UA3GUwzC,EAAaT,EAiHtC,CA3K+Be,CACLpsD,EACA2rD,EACAznD,EACAmnD,EACAT,EACA5nB,EACAC,EACA4nB,EACAC,EACAC,EACA7iD,EAEJ,KA/BGijD,EAkCX,MAjFKxc,EAoFX,MA9HG,IAiIX,EE1He0d,I,OA/DD,SAAH,GAOJ,IAAD,IANJC,sBAAc,OAAQ,MACtBC,oBAAY,MAAG,GAAE,EACjBrtB,EAAQ,EAARA,SACA+I,EAAW,EAAXA,YACAukB,EAAiB,EAAjBA,kBAAkB,EAAD,EACjBzoC,YAAI,MAAG,QAAO,EAER0oC,EAAaH,EAAiB,EAC9BvsC,EAAMC,iBAAO,MACnB,EAA0B/C,mBAASsvC,GAAa,oBAAzCzxD,EAAK,KAAEutC,EAAQ,KAEtB9qB,qBAAU,WACR8qB,EAASkkB,EACX,GAAG,CAACA,IAEJhvC,qBAAU,WACR8qB,EAASkkB,EACX,GAAG,CAACA,EAAcC,IAElB3f,2BAAgB,WACd9sB,EAAIE,QAAQsF,MAAM7M,OAAS,UAE3BqH,EAAIE,QAAQsF,MAAM7M,OAAM,UAAM8B,KAAKmM,IACjC5G,EAAIE,QAAQysC,aA1BC,IA4Bd,KACH,GAAG,CAAC5xD,IAcJ,OACE,uCACE,2BACE8kB,UAAS,uBAAkBmE,GAC3Bmb,SAhBe,SAAC33B,GACpB,IAAMzM,EAAQyM,EAAE3B,OAAO9K,MAEnB2xD,GACFpkB,EAASvtC,EAAMohC,MAAM,EAAGowB,IACxBptB,GAAYA,EAASpkC,EAAMohC,MAAM,EAAGowB,MAEpCjkB,EAASvtC,EAAMohC,MAAM,IACrBgD,GAAYA,EAASpkC,EAAMohC,MAAM,IAErC,EAOM+L,YAAaA,EACbloB,IAAKA,EACL4sC,KAAM,EACN7xD,MAAOA,IAER2xD,EACC,sBAAK7sC,UAAU,wBAAuB,SACpC,kCACE,uBAAMA,UAAU,0BAAyB,SAAE9kB,EAAM+F,SAAc,IAC9DyrD,EAAc,mBAGjB,OAGV,GCjEeM,I,cCUS,SAAH,GAKd,IAJLC,EAAiB,EAAjBA,kBACAC,EAAsB,EAAtBA,uBACA5kD,EAAK,EAALA,MACArO,EAAO,EAAPA,QAEA,EAA4CojB,mBAAS,CAAC,GAAE,oBAAjD8vC,EAAc,KAAEC,EAAiB,KACxC,EAA2ChsB,KAAnCG,EAAgB,EAAhBA,iBAAkBh/B,EAAK,EAALA,MAAOyxB,EAAK,EAALA,MACjC,EAOIurB,qBAAW0C,IANb1hC,EAAW,EAAXA,YACAgiC,EAAgB,EAAhBA,iBACAJ,EAAY,EAAZA,aACAK,EAAmB,EAAnBA,oBACAJ,EAAe,EAAfA,gBACAC,EAAS,EAATA,UAgBI/iB,EAAW,SAACl/B,EAAKlF,GACrBkyD,EACEtxD,OAAOC,OAAO,CAAC,EAAGoxD,EAAe,eAC9B/sD,EAAMlF,KAGXsnD,GAAoB,EACtB,EAyBA,OAtBA7kC,qBAAU,WACJ1jB,GAAWkoD,GACb+K,EAAuB7K,EAE3B,GAAG,CAACA,EAAW6K,EAAwB/K,EAAcloD,IAErD0jB,qBAAU,WACRyvC,EAAkB,CAChBjO,MAAwB,OAAjB8N,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB9N,MAC1Bv7B,MAAwB,OAAjBqpC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrpC,OAE9B,GAAG,CAACqpC,IAEJtvC,qBAAU,WAMRqW,GACF,GAAG,CAACi5B,EAAmBhzD,EAASuoD,EAAqBxuB,IAGnD,sBAAKhU,UAAU,uEAAsE,SACnF,gBAAC,GAAK,CACJ6D,WAAY,kBAAMqpC,GAAuB,EAAM,EAC/C5kD,MAAOA,EACPsb,MAAM,mBACN3pB,QAASA,EAAQ,UAEjB,uBAAK+lB,UAAU,2EAA0E,UACvF,sBAAKA,UAAU,kCAAiC,SAC9C,sBAAKA,UAAU,gCAA+B,wBAEhD,eAAC,GAAK,CACJ2sC,aAA+B,OAAjBM,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrpC,MACjC0b,SAAU,SAACpkC,GAAK,OAAKokC,EAAS,QAASpkC,EAAM,EAC7C0xD,kBAAmB3yD,EACnBkqB,KAAK,aAGT,uBAAKnE,UAAU,2EAA0E,UACvF,sBAAKA,UAAU,kCAAiC,SAC9C,sBAAKA,UAAU,gCAA+B,qBAEhD,eAAC,GAAK,CACJ0sC,eAAgB,IAChBC,cAA+B,OAAjBM,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB9N,QAAS,GAC1C7f,SAAU,SAACpkC,GAAK,OAAKokC,EAAS,QAASpkC,EAAM,EAC7CmtC,YAAY,WACZukB,kBAAmB3yD,EACnBkqB,KAAK,aAGT,uBAAKnE,UAAU,mCAAkC,UAC/C,eAAC,GAAM,CACLoE,KAAK,YACL/C,QAAS,kBAAM6rC,GAAuB,EAAM,EAC5C/oC,KAAK,QAAO,oBAId,eAAC,GAAM,CACL7gB,SAAUi/C,EACVlhC,QAvFa,WACrBkgB,EAAiB,CACfsC,MAAOopB,EAAkB3sD,GACzBwjC,SAAU,CAAEqb,MAAOgO,EAAehO,MAAOv7B,MAAOupC,EAAevpC,SAGjErD,IAEKhe,GACH6/C,GAAgB,EAEpB,EA6EUh+B,KAAM+9B,EAAe,UAAY,UACjCh+B,KAAK,QAAO,SAEXg+B,EACC,0DACkB,uBAAMniC,UAAU,qBAAoB,uBAGtD,+BAILzd,EACC,sBAAKyd,UAAU,kCAAiC,SAC9C,wFAEA,SAIZ,G,UCvIeqtC,I,OCSQ,SAAH,GAMb,IALL7M,EAAW,EAAXA,YACAE,EAAe,EAAfA,gBACA/c,EAAqB,EAArBA,sBACAr7B,EAAK,EAALA,MACArO,EAAO,EAAPA,QAEA,EAAoCojB,mBAAS,IAAG,oBAAzCiwC,EAAU,KAAEC,EAAa,KAChC,EACEhO,qBAAW0C,IADLE,EAAY,EAAZA,aAAcE,EAAS,EAATA,UAAW9hC,EAAW,EAAXA,YAG3BitC,EAAmB93B,uBAAY,WACnC63B,EPF+B,SAAC/M,EAAaE,GAC/C,IAAI+M,EAAU,GAEd,GAAIjN,GAAeE,EAAiB,CAAC,IAwB1BgN,EAAT,SAAsBC,GACpBjN,EAAgBiN,GAASnxD,SAAQ,SAACoxD,GAChC,IAAQrC,EAAsBqC,EAAtBrC,YAAa3xD,EAASg0D,EAATh0D,KACfi0D,EAAe/xD,OAAOS,KAAK3C,GAAMmX,MAAK,SAACgG,EAAGC,GAC9C,OAAOD,EAAE4C,cAAc3C,EACzB,IAEAy2C,EAAQhoD,KAAK,CAAC8lD,IAEdsC,EAAarxD,SAAQ,SAAC4D,GACpB,IAAI0tD,EAAU,CAAC1tD,GAEfxG,EAAKwG,GAAK5D,SAAQ,SAACuxD,GAAS,OAAKD,EAAQroD,KAAKsoD,EAAU7yD,MAAM,IAC9DuyD,EAAQhoD,KAAKqoD,EACf,IAEAL,EAAQhoD,KAAK,GACf,GACF,EAxCMuoD,EAAsB,OAAXxN,QAAW,IAAXA,OAAW,EAAXA,EAAaxvC,KAAI,SAACkvC,GAAG,OAAKwK,GAAcxK,EAAIt8B,MAAM,IAC7DqqC,EAAuB,OAAXzN,QAAW,IAAXA,OAAW,EAAXA,EAAaxvC,KAAI,SAACkvC,GAAG,OAAKwK,GAAcxK,EAAIgO,OAAO,IAC/D9O,EAAoB,OAAXoB,QAAW,IAAXA,OAAW,EAAXA,EAAaxvC,KAAI,SAACkvC,GAAG,OAAKwK,GAAcxK,EAAId,OAAO,IAC5D+O,EAAuB,OAAX3N,QAAW,IAAXA,OAAW,EAAXA,EAAaxvC,KAAI,SAACkvC,GAAG,OAAKwK,GAAcxK,EAAIiO,UAAU,IAClE1pD,EAAwB,OAAX+7C,QAAW,IAAXA,OAAW,EAAXA,EAAaxvC,KAAI,SAACkvC,GAAG,OAAKwK,GAAcxK,EAAIz7C,WAAW,IACpE06C,EAAmB,OAAXqB,QAAW,IAAXA,OAAW,EAAXA,EAAaxvC,KAAI,SAACkvC,GAAG,OAAKwK,GAAcxK,EAAIf,MAAM,IAEhEsO,EAAQhoD,KAAK,CACV,SAAO,oBAAKuoD,IAAQ,CACpB,cAAY,oBAAKC,IAAS,CAC1B,WAAS,oBAAK7O,IAAM,CACpB,cAAY,oBAAK+O,IAAS,CAC1B,eAAa,oBAAK1pD,IAAU,CAC5B,SAAO,oBAAK06C,KAIfsO,EAAQhoD,KAAK,IAEbioD,EAAa,WACbA,EAAa,YAqBf,CAEA,OAAOD,CACT,CO/CkBW,CAAoB5N,EAAaE,IAC/CngC,GACF,GAAG,CAACigC,EAAaE,EAAiBngC,IASlC,OANA5C,qBAAU,WACJ1jB,GAAWkoD,GACbxe,EAAsB0e,EAE1B,GAAG,CAACA,EAAW1e,EAAuBwe,EAAcloD,IAGlD,sBAAK+lB,UAAU,2EAA0E,SACvF,eAAC,GAAK,CACJ6D,WAAY,kBAAM8f,GAAsB,EAAM,EAC9Cr7B,MAAOA,EACPsb,MAAM,wBACN3pB,QAASA,EAAQ,SAEjB,uBAAK+lB,UAAU,kCAAiC,UAC9C,eAAC,GAAM,CACLoE,KAAK,YACL/C,QAAS,kBAAMsiB,GAAsB,EAAM,EAC3Cxf,KAAK,QAAO,oBAId,eAAC,WAAO,CACNkqC,cAAc,EACdruC,UACEmiC,EACI,0CACA,iCAENvoD,KAAM0zD,EACNgB,SAAS,eACTjtC,QAASmsC,EAAiB,SAE1B,eAAC,GAAM,CAACppC,KAAM+9B,EAAe,UAAY,UAAWh+B,KAAK,QAAO,SAC7Dg+B,EACC,+CACO,uBAAMniC,UAAU,qBAAoB,uBAG3C,iCAQhB,GCnEeuuC,GANG,SAAH,OAAMvuC,EAAS,EAATA,UAAS,OAC5B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,2GACJ,ECGO8tD,GANS,SAAH,OAAMxuC,EAAS,EAATA,UAAS,OAClC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,2EACJ,ECGO+tD,GANW,SAAH,OAAMzuC,EAAS,EAATA,UAAS,OACpC,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,8GACJ,ECYFguD,GAAqB,SAACxzD,GAC1B,MAAiB,KAAVA,GAA0B,OAAVA,EAAiB,IAAMA,CAChD,EAEMyzD,GAAa,SAAH,GAAiC,IAA3BC,EAAY,EAAZA,aAAc/qB,EAAK,EAALA,MAClC,EAAkCxmB,oBAAS,GAAM,oBAA1CwxC,EAAS,KAAEC,EAAY,KACtBvtB,EAAqBH,KAArBG,iBAEFwtB,EAAqBr5B,uBAAY,WACrCo5B,GAAa,EACf,GAAG,IAEGE,EAAU1uC,GAAgByuC,GAYhC,OACE,uBACE/uC,UAAU,sBACVqB,QAAS,kBAAMytC,GAAcD,EAAU,EACvC1uC,IAAK6uC,EAAQ,UAEb,sBACEhvC,UAAW+B,KAAW,cAAe,CACnC,uBAAwB8sC,IACvB,SAEH,sBACE7uC,UAAU,oBACVqB,QAAS,SAAC1Z,GAtBhB45B,EAAiB,CACfsC,QACAC,SAAU,CAAEF,UAAWgrB,KAIzBE,GAAa,GAkBLnnD,EAAEgoB,iBACJ,EAAE,SAEDi/B,EAAe,aAAe,eAGnC,eAAC,GAAU,CACTvrD,OAAQwrD,EACR9tC,UAAU,YACVf,UAAU,+BACVjhB,KAAMwvD,OAId,ECpEeU,GDsEK,SAAH,GAef,IAFK,IAZLvF,EAAS,EAATA,UACAtmB,EAAoB,EAApBA,qBAAqB,EAAD,EACpBC,yBAAiB,OAAQ,EACzB2nB,EAAW,EAAXA,YACAhM,EAAc,EAAdA,eACA6L,EAAS,EAATA,UAAU,EAAD,EACT/F,YAAI,MAAG,GAAE,EACToK,EAAY,EAAZA,aACAC,EAAoB,EAApBA,qBACAjC,EAAsB,EAAtBA,uBACA/B,EAAU,EAAVA,WACA7iD,EAAK,EAALA,MAEI4F,EAAe,CAAC,EACXvN,EAAI,EAAGA,EAAImkD,EAAK7jD,OAAQN,IAC/BuN,EAAavN,IAAK,EAGpB,MAAsC0c,mBAASnP,GAAa,oBAArDkhD,EAAW,KAAEC,EAAc,KAM5BC,EAAqB,SAAChvD,GAC1B,IAAMm/B,EAAWqlB,EAAKzwB,MAAK,SAAC6rB,GAAG,OAAKA,EAAI5/C,KAAOA,CAAE,IAEjD6uD,EAAqB1vB,GACrBytB,GAAuB,EACzB,EAEA,OACE,sBACEltC,UAAW+B,KAAW,mBAAoB,CACxC,iCAAgD,aAAd2nC,IACjC,SAEH,yBACE1pC,UAAW+B,KAAW,0BAA2B,CAC/C,0CAA2CqhB,IAC1C,UAEF0hB,EAAK9zC,KAAI,SAACkvC,EAAKv/C,GAAC,OACf,eAAC,IAAM2hB,SAAQ,UACN,IAAN3hB,EACC,iCACE,sBACEqf,UAAW+B,KACT,wBACA,2BACA,CACE,2CACEqhB,IAEJ,UAEF,qBAAIpjB,UAAU,0BAAyB,SACrC,uBACEA,UAAU,iCACVqB,QAAS,kBAAMiuC,EAAmBpP,EAAI5/C,GAAG,EACzCsjB,MAAO8qC,GAAmBxO,EAAIt8B,OAAO,SAEpC8qC,GAAmBxO,EAAIt8B,WAGb,UAAd8lC,EACC,uCACE,qBAAI1pC,UAAU,gCAA+B,wBAG7C,qBAAIA,UAAU,gCAA+B,2BAG7C,qBAAIA,UAAU,gCAA+B,qBAC7C,qBAAIA,UAAU,gCAA+B,wBAG7C,qBAAIA,UAAU,gCAA+B,yBAG7C,qBAAIA,UAAU,gCAA+B,sBAE7C,UAGN,MA1CekgC,EAAI5/C,GAAKK,EA2Cb,IAEnB,eAACyqD,GAAA,EAAe,CACdprC,UAAU,iCACVqrC,UAAW,QAAQ,SAElBvG,EAAK9zC,KAAI,SAACkvC,EAAKv/C,GACd,IAAM2+C,EAAoBhB,GAAoB4B,EAAI5/C,IAElD,OACE,eAACgrD,GAAA,EAAa,CACZ5vB,WAAY,kCACZ3jB,OAAOizC,EACPjiC,MAAMiiC,EAENjoB,QAAS,IAAI,SAEb,sBACE/iB,UAAW+B,KAAW,wBAAyB,CAC7C,mCAA0C,IAANphB,EACpC,mDACQ,IAANA,GAAWyiC,IACZ,UAEH,sBAAIpjB,UAAU,0BAAyB,UACrC,sBACEA,UAAW+B,KAAW,8BAA+B,CACnD,8CAAqD,IAANphB,EAC/C,+CAAsD,IAANA,EAChD,8CAAqD,IAANA,MAGnD,uBACEqf,UAAU,iCACVqB,QAAS,kBAAMiuC,EAAmBpP,EAAI5/C,GAAG,EACzCsjB,MAAO8qC,GAAmBxO,EAAIt8B,OAAO,SAEpC8qC,GAAmBxO,EAAIt8B,SAE1B,sBAAI5D,UAAU,4BAA2B,UACrCgrC,EAkCE,KAjCF,uCACE,eAAC,GAAU,CACT3nD,OAAQ68C,EAAI5/C,KAAOuqD,EACnB7pC,SAAS,SACThB,UAAW+B,KACT,+BACA,4BACA,CACE,0CACEm+B,EAAI5/C,KAAOuqD,IAGjB9rD,KACEmhD,EAAI5/C,KAAOuqD,EAAY0E,GAAcC,GAEvCruC,UACE++B,EAAI5/C,KAAOuqD,EACP,WACA,gBAENzpC,kBAAkB,SAClBC,QAAS,kBAAM6tC,EAAahP,EAAI5/C,GAAG,EACnCrG,QAASopC,IAEX,eAAC,GAAU,CACTriB,SAAS,SACThB,UAAU,sCACVjhB,KAAM88B,GACN1a,UAAU,aACVC,kBAAkB,SAClBC,QAAS,kBAAM29B,EAAekB,EAAI5/C,GAAG,OAI3C,eAAC,GAAU,CAACsuD,aAAc1O,EAAItc,SAAUC,MAAOqc,EAAI5/C,WAGxC,UAAdopD,EACC,uCACE,qBAAI1pC,UAAU,gCAA+B,SAC1C0uC,GAAmBxO,EAAIgO,UAE1B,qBAAIluC,UAAU,gCAA+B,mBAAKs/B,EAAiB,aAAKoP,GACtExO,EAAI5/C,IACL,OACD,qBAAI0f,UAAU,gCAA+B,SAC1C0uC,GAAmBxO,EAAId,UAE1B,qBAAIp/B,UAAU,gCAA+B,SAC1C0uC,GAAmBxO,EAAIiO,aAE1B,qBAAInuC,UAAU,gCAA+B,SAC1C0uC,GAAmBxO,EAAIz7C,cAE1B,sBAAIub,UAAU,gCAA+B,UAC3C,oBACEA,UAAW+B,KACT,0BACA,iCAEFV,QAAS,kBAAMiuC,EAAmBpP,EAAI5/C,GAAG,EACzCqlB,MAAOypC,EAAYzuD,GAAK,CAAEyI,QAAS,SAAY,KAAK,SAErC,KAAd82C,EAAIf,MAAee,EAAIf,MAAQ,qBAEjCe,EAAIf,MAAMl+C,OAAS,IAClB,yBACE+e,UAAU,oCACVqB,QAAS,kBA/KPmb,EA+KgC77B,OA9K1D0uD,EAAe,6BAAKD,GAAW,kBAAG5yB,GAAS4yB,EAAY5yB,MAD9B,IAACA,CA+KkC,EAAC,SAEpC4yB,EAAYzuD,GAAK,YAAc,cAEhC,WAGN,SAtGDu/C,EAAI5/C,GA0Gf,MAED6qD,GAAc,eAAC,GAAc,CAAClqD,OAAQ6jD,EAAK7jD,OAAQqH,MAAOA,QAInE,EErRemnD,GANM,SAAH,OAAMzvC,EAAS,EAATA,UAAS,OAC/B,sBAAKA,UAAWA,EAAWC,QAAQ,YAAW,SAC5C,uBAAMvf,EAAE,2dACJ,ECHOgvD,I,OCOO,SAAH,GAA6D,IAAvDC,EAAgB,EAAhBA,iBAAkB11D,EAAO,EAAPA,QAASixD,EAAoB,EAApBA,qBAC1CgB,EAA2CyD,EAA3CzD,WAAY5nD,EAA+BqrD,EAA/BrrD,YAAaqnD,EAAkBgE,EAAlBhE,cAC3BiE,EAAmC,OAAbjE,QAAa,IAAbA,OAAa,EAAbA,EAAen+C,QAAO,YAAQ,SAALtS,KAAiB,IAChE20D,EAAiC,OAAnBD,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB3uD,OACnC6uD,EACY,IAAhBD,EACI,cACgB,IAAhBA,EACA,YACA,WACAE,EAAyC,WAA9Br8C,GAAapP,GACxB0rD,EAAwC,UAA9Bt8C,GAAapP,GACvB27B,EAAevsB,GAAapP,GAE5Byf,EAAgB,SAACvD,GACC,KAAlBA,EAAMwD,SACRknC,GAAqB,EAEzB,EAUA,OARAvtC,qBAAU,WAKR,OAJI1jB,GACF6H,OAAO4e,iBAAiB,UAAWqD,GAG9B,kBAAMjiB,OAAO6e,oBAAoB,UAAWoD,EAAe,CACpE,IAEK9pB,EAKH,uBAAK+lB,UAAU,2BAA0B,UACvC,uBAAKA,UAAU,gCAA+B,UAC5C,0BACEA,UAAU,iCACVqB,QAAS,kBAAM6pC,GAAqB,EAAM,EAAC,UAE3C,eAAC,GAAY,CAAClrC,UAAU,wCACxB,uBAAMA,UAAU,sCAAqC,qBAEvD,uBAAKA,UAAU,mCAAkC,UAC/C,eAAC,GAAQ,CACPA,UAAU,iCACVjhB,KAAMkhC,IAER,uBAAMjgB,UAAU,kCAAiC,SAAEksC,UAGvD,uBACElsC,UAAW0b,KACT,oCAAoC,sCAAD,OACGo0B,GACtC,CACE,4CAA6CC,IAE/C,UAEDA,GACCH,EAAoB5+C,KAAI,SAACpX,GACvB,OACEA,EAAKsB,OACH,uBACE8kB,UAAW0b,KACT,mCAAmC,qCAAD,OACGo0B,IACrC,UAGF,eAAC,GAAW,CACVl2D,KAAMA,EAAKsB,MAAMtB,KACjB0hC,OAAQ1hC,EAAKsB,MAAMogC,OACnBzO,KAAMijC,IAER,uBAAK9vC,UAAU,gCAA+B,UAC5C,uBAAMA,UAAU,0CAAyC,SACtDpmB,EAAKiqC,QAER,uBAAM7jB,UAAU,mDAAkD,SAC/Ds+B,GAAoB1kD,EAAKiqC,cAZzBjqC,EAAKiqC,MAkBlB,IACDmsB,GACCJ,EAAoB5+C,KAAI,SAACpX,GACvB,OACE,uBACEomB,UAAW0b,KAAW,oCAAD,6CAEmBo0B,IACtC,UAGF,sBACEhvB,IAAI,uBACJ9gB,UAAW0b,KAAW,8BAAD,OACWo0B,IAEhC7xB,IAAG,gCAA2BrkC,EAAKsB,SAErC,uBAAK8kB,UAAU,gCAA+B,UAC5C,uBAAMA,UAAU,0CAAyC,SACtDpmB,EAAKiqC,QAER,uBAAM7jB,UAAU,mDAAkD,SAC/Ds+B,GAAoB1kD,EAAKiqC,cAdzBjqC,EAAKiqC,MAmBhB,UArFC,IAyFX,GCjHM2lB,I,OAAY,CAAC,WAAY,UAAW,UCZ3ByG,GDcC,SAAH,GAqBN,IApBL7sB,EAAoB,EAApBA,qBACAC,EAAiB,EAAjBA,kBACA6sB,EAAgB,EAAhBA,iBACAC,EAAW,EAAXA,YACAnR,EAAc,EAAdA,eACA6L,EAAS,EAATA,UACAuF,EAAY,EAAZA,aACA5P,EAAW,EAAXA,YACAE,EAAe,EAAfA,gBACAzB,EAAc,EAAdA,eACAoR,EAAsB,EAAtBA,uBACAnB,EAAY,EAAZA,aACAhC,EAAsB,EAAtBA,uBACAvpB,EAAqB,EAArBA,sBACAunB,EAAoB,EAApBA,qBACAxnB,EAAmB,EAAnBA,oBACA4sB,EAAkB,EAAlBA,mBACAC,EAAiB,EAAjBA,kBACAv6B,EAAc,EAAdA,eACA1tB,EAAK,EAALA,MAEA,EAAkD+U,mBAAS,MAAK,oBAAzD4vC,EAAiB,KAAEkC,EAAoB,KAC9C,EAAgD9xC,mBAAS,CAAC,GAAE,oBAArDsyC,EAAgB,KAAE1E,EAAmB,KAC5C,EAAsD5tC,oBAAS,GAAM,oBAA9DmzC,EAAmB,KAAEC,EAAsB,KAClD,EAAsCpzC,oBAAS,GAAM,oBAA9CqzC,EAAa,KAAEC,EAAY,KAClC,EAAkCtzC,mBAASmsC,GAAU,IAAG,oBAAjDE,EAAS,KAAEC,EAAY,KAG9BhsC,qBAAU,WAER,GAAIuyC,IAAqB9sB,EAAsB,CAC7C,IAAMwtB,EAA2B3uC,YAAW,WAC1CwuC,GAAuB,EACzB,GAAG,KAEH,OAAO,kBAAMtuC,aAAayuC,EAA0B,CACtD,CAKA,GAJEH,GAAuB,GAIrBP,GAAoBC,EAAa,CACnC,IAAMU,EAAqB5uC,YAAW,WACpC0uC,GAAa,EACf,GAAG,KAEH,OAAO,kBAAMxuC,aAAa0uC,EAAoB,CAChD,CACEF,GAAa,EAEjB,GAAG,CAACT,EAAkBC,EAAa/sB,IAEnCzlB,qBAAU,WACR,GAAI6iC,IAAgBpd,EAAsB,CACxC,IAAM3D,EAAW+gB,EAAYnsB,MAAK,SAAC6rB,GAAG,OAAKA,EAAI5/C,KAAO2+C,EAAe,EAAE,IAEvEkQ,EAAqB1vB,EACvB,CACF,GAAG,CAAC2D,EAAsBod,EAAavB,IAEvCthC,qBAAU,WAEN0yC,EADgB,YAAd3G,EAKN,GAAG,CAACA,EAAW2G,IAEf,IAAMrF,EAAsC,KAAb,OAAXxK,QAAW,IAAXA,OAAW,EAAXA,EAAav/C,QAEjC,OAAImvD,EACK,KAGLI,EAEA,uBACExwC,UAAW+B,KAAW,QAAS,oBAAqB,CAClD,qCAAsCiU,IACrC,UAEH,eAAC,GAAuB,CAAC1tB,MAAOA,IAChC,eAAC,GAAsB,CAACA,MAAOA,OAMnC,uCACE,gBAAC,GAA4B,WAC3B,eAAC,GAAe,CACd2kD,kBAAmBA,EACnBnI,KAAMtE,EACN0M,uBAAwBA,EACxB5kD,MAAOA,EACPrO,QAASypC,IAEX,eAAC,GAAc,CACb8c,YAAaA,EACbE,gBAAiBA,EACjB/c,sBAAuBA,EACvBr7B,MAAOA,EACPrO,QAASq2D,IAEX,eAAC,GAAa,CACZX,iBAAkBA,EAClBzE,qBAAsBA,EACtB5iD,MAAOA,EACPrO,QAASs2D,OAGb,uBACEvwC,UAAW+B,KAAW,QAAS,oBAAqB,CAClD,qCAAsCiU,IACrC,UAEH,sBAAKhW,UAAU,gBAAe,SAC3BwpC,GAAUx4C,KAAI,SAACs5C,GACd,OACE,sBACEtqC,UAAW+B,KAAW,aAAc,CAClC,qBAAsB2nC,IAAcY,IAGtCjpC,QAAS,kBAAMsoC,EAAaW,EAAI,EAAC,SAEhCA,GAHIA,EAMX,MAEa,YAAdZ,EACC,eAAC,GAAY,CAACzK,eAAgBA,IAE9B,uCACE,eAAC,GAAW,CACVyK,UAAWA,EACXtmB,qBAAsBA,EACtBC,kBAAmBA,EACnB2nB,YAAaA,EACbhM,eAAgBA,EAChB6L,UAAWA,EACX/F,KAAMtE,EACN0O,aAAcA,EACdC,qBAAsBA,EACtBjC,uBAAwBA,EACxB/B,WAAYuF,EACZpoD,MAAOA,IAET,eAAC,GAAU,CACTohD,UAAWA,EACXtmB,qBAAsBA,EACtBC,kBAAmBA,EACnB2nB,YAAaA,EACbH,UAAWA,EACXrK,YAAaA,EACbyK,oBAAqBA,EACrBC,qBAAsBA,EACtBC,WAAYuF,EACZrsD,aAAcq8C,EACdp4C,MAAOA,YAOrB,EEzKMs6B,I,OAAe,CACnBP,QAAS,EACTlZ,WAAW,4BAGP2nC,GAAmB,CACvB3uB,SAAU,CAAEE,QAAS,GACrBC,QAAS,CAAED,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpBG,OAAQ,CAAEH,QAAS,ICtBN0uB,GDgRA9tC,aAJgB,SAACzlB,GAAK,MAAM,CACzC8K,MAAO9K,EAAM8K,MACd,GAEc2a,EAvPW,SAAH,GAAmB,IAAb3a,EAAK,EAALA,MAC3B,EAAsD+U,oBAAS,GAAM,oBAA9D0hC,EAAmB,KAAEiS,EAAsB,KAClD,EAAwD3zC,oBAAS,GAAM,oBAAhE+lB,EAAoB,KAAE6tB,EAAuB,KACpD,EAAkD5zC,oBAAS,GAAK,oBAAzDgmB,EAAiB,KAAEE,EAAoB,KAC9C,EAAgDlmB,oBAAS,GAAK,oBAAvD6zC,EAAgB,KAAEC,EAAmB,KAC5C,EAAkC9zC,qBAAU,oBAArCwtC,EAAS,KAAEqE,EAAY,KAC9B,EAA4C7xC,mBAAS,IAAG,oBAAjD4hC,EAAc,KAAEmS,EAAiB,KACxC,EAA8C/zC,mBAAS,MAAK,oBAArDimB,EAAe,KAAE+tB,EAAkB,KAC1C,EAAsDh0C,oBAAS,GAAM,oBAA9DqmB,EAAmB,KAAEwpB,EAAsB,KAClD,EAAoD7vC,oBAAS,GAAM,oBAA5DizC,EAAkB,KAAE3sB,EAAqB,KAChD,EAAkDtmB,oBAAS,GAAM,oBAA1DkzC,EAAiB,KAAErF,EAAoB,KAC9C,EAAsC7tC,oBAAS,GAAM,oBAA9C8yC,EAAW,KAAEmB,EAAc,KAClC,EAAsDj0C,oBAAS,GAAM,oBAA9DyiC,EAAmB,KAAEuQ,EAAsB,KAGlD,EAA2CnzC,GAAewC,IAAlDjC,EAAe,EAAfA,gBAAiB7jB,EAAI,EAAJA,KAAMkD,GAAO,EAAPA,QAG/B,GAIIogB,GAAe0C,GAAc,CAC/B2xC,KAAgC,IAA1BtS,EAAeh+C,OACrBugC,UAAW,CAAEgqB,OAAQvM,EAAgBuS,UAAU,KAC/C,MANA53D,KADF,mBACwE,GAAE,IAAhE4mD,oBAAW,OAAG,GAAE,SAAEiR,cAAK,OAAG,GAAE,SAAEzM,gBAAO,OAAG,GAAE,SAAE0M,iBAAQ,OAAG,GAAE,GAC1DtB,GAAY,GAAnB7tD,MACS2tD,GAAgB,GAAzBpzD,QAME4jD,GAAkB,CAAC,EAEnB+Q,GAAMxwD,OAAS,EACjBy/C,GAAuB,MAAI+Q,GAE3B/Q,GAAuB,MAAI,GAGzBsE,GAAQ/jD,OAAS,IACnBy/C,GAAyB,QAAIsE,IAG3B0M,GAASzwD,OAAS,IACpBy/C,GAAgB,aAAegR,IAGjC,IAAM1S,GAAiB,SAAC1+C,GACtB,GAAI8iC,EACF,GAAI6b,EAAe/4C,SAAS5F,GAAK,CAC/B,GAA8B,IAA1B2+C,EAAeh+C,OACjB,OAEFmwD,EAAkBnS,EAAezxC,QAAO,SAAC0yC,GAAG,OAAKA,IAAQ5/C,CAAE,KAC3DgxD,GAAe,EACjB,MACEF,EAAkB,GAAD,oBAAKnS,GAAc,CAAE3+C,KACtCgxD,GAAe,OAEZ,CACL,GAAIrS,EAAe/4C,SAAS5F,GAC1B,OAEA8wD,EAAkB,CAAC9wD,GAEvB,CACF,EAgFA,OAtEAqd,qBAAU,WACJshC,EAAeh+C,OAvFQ,EAwFzB+vD,GAAuB,GAEvBA,GAAuB,EAE3B,GAAG,CAAC/R,IAEJthC,qBAAU,WACR,IAAQ,OAAJ/jB,QAAI,IAAJA,OAAI,EAAJA,EAAM+3D,SAAS1wD,QAAS,GAA+B,IAA1Bg+C,EAAeh+C,OAAc,CAK5D,IAAMm/C,EAAiBxmD,EAAK+3D,SAASnkD,QAAO,SAAC0yC,GAC3C,OAAwB,IAAjBA,EAAItc,QACb,IAEIwc,EAAen/C,OAAS,EAC1BmwD,EAAkBhR,EAAepvC,KAAI,SAACkvC,GAAG,OAAKA,EAAI5/C,EAAE,IAAEg8B,MAAM,EAAG,IAE/D80B,EAAkBx3D,EAAK+3D,SAAS3gD,KAAI,SAACkvC,GAAG,OAAKA,EAAI5/C,EAAE,IAAEg8B,MAAM,EAAG,GAElE,CACF,GAAG,CAAC1iC,EAAMqlD,IAEVthC,qBAAU,WAKR,IAAQ,OAAJ/jB,QAAI,IAAJA,OAAI,EAAJA,EAAM+3D,SAAS1wD,QAAS,IAAMmiC,EAAsB,CACtD,IAAMwuB,EAAwBh4D,EAAK+3D,SAASnkD,QAAO,SAAC0yC,GAClD,OAAOA,EAAI5/C,KAAO2+C,EAAe,EACnC,IAAG,GAEHoS,EAAmBO,EACrB,CACF,GAAG,CAACh4D,EAAMwpC,EAAsB6b,IAEhCthC,qBAAU,WAEe,qBAAdktC,GACN5L,EAAe/4C,SAAS2kD,IAGzBqE,EAAajQ,EAAe,GAEhC,GAAG,CAACA,EAAgB4L,IAEpBltC,qBAAU,WACC,OAAJ/jB,QAAI,IAAJA,KAAM+3D,UAAqC,IAAzB/3D,EAAK+3D,SAAS1wD,QAIrCwc,EAAgB,CACdlW,SAAUy6C,GACV6P,YAAa,SAACC,EAAK,GAA2B,IAAxBC,EAAgB,EAAhBA,iBACpB,IAAKA,EAAiBn4D,MAAa,OAAJk4D,QAAI,IAAJA,MAAMH,SACnC,OAAOG,EAET,IAAME,EAAUD,EAAiBn4D,KAAKq4D,UAEtC,OAAOn2D,OAAOC,OAAO,CAAC,EAAG+1D,EAAM,CAC7BH,SAAS,GAAD,oBAAMK,GAAO,aAAKF,EAAKH,YAEnC,GAEJ,GAAG,CAAC/3D,EAAM6jB,IAEN3gB,GAEA,sBAAKkjB,UAAU,qBAAoB,SACjC,oBAAGA,UAAU,2BAA0B,0BAM3C,qCACE,eAAC,GAAyB,WACnB,OAAJpmB,QAAI,IAAJA,OAAI,EAAJA,EAAM+3D,SAAS1wD,QAAS,EACvB,uCACE,eAAC,GAAO,CACN89C,oBAAqBA,EACrB3b,qBAAsBA,EACtBC,kBAAmBA,EACnByc,oBAAqBA,EACrBS,kBAAgB,EAChBvB,eAAgBA,GAChBe,uBAlGmB,WAC7BkR,GAAyB7tB,GAErBA,GAAwB6b,EAAeh+C,OAAS,GAClDmwD,EAAkBnS,EAAe3iB,MAAM,EAAG,GAE9C,EA6FYmkB,aAAc7mD,EAAK+3D,SACnBruB,gBAAiBA,EACjB2b,eAAgBA,EAChB1b,qBAAsBA,EACtBI,sBAAuBA,EACvBH,kBAAmB2tB,EACnBztB,oBAAqBwpB,EACrBl3B,eAAgBk7B,IAElB,eAACruB,GAAA,EAAU,CAACC,GAAImc,EAAeh+C,OAAS,EAAG8hC,QAAS,IAAI,SACrD,SAACvlC,GAAK,OACL,sBACEmoB,MAAK,6BACAid,IACAkuB,GAAiBtzD,IACpB,SAEDyhD,EAAeh+C,OAAS,EACvB,eAAC,GAAO,CACNmiC,qBAAsBA,EACtBC,kBACEA,GAAqB4b,EAAeh+C,OAAS,EAE/CivD,iBAAkBA,GAClBC,YAAaA,EACbnR,eAAgBA,GAChB6L,UAAWA,EACXuF,aAAcA,GACd5P,YAAaA,GACbE,gBAAiBA,GACjBzB,eAAgBA,EAChBoR,uBAAwBA,EACxBnB,aAAcA,EACdhC,uBAAwBA,EACxBvpB,sBAAuBA,EACvBunB,qBAAsBA,EACtBxnB,oBAAqBA,EACrB4sB,mBAAoBA,EACpBC,kBAAmBA,EACnBv6B,eAAgBk7B,EAChB5oD,MAAOA,IAEP,MACA,OAKZ,eAACu6B,GAAA,EAAU,CAACC,IAAQ,OAAJlpC,QAAI,IAAJA,OAAI,EAAJA,EAAM+3D,SAAS1wD,SAAU,EAAG8hC,QAAS,IAAI,SACtD,SAACvlC,GAAK,OACL,uBACEwiB,UAAU,qBACV2F,MAAK,6BACAid,IACAkuB,GAAiBtzD,IACpB,UAEF,qBAAIwiB,UAAU,6BAA4B,4CAG1C,qBAAGA,UAAU,2BAA0B,0IAE0B,OAEjE,oBACEvY,KAAK,0EACLyqD,IAAI,aACJlsD,OAAO,SAAQ,SAEf,eAAC,GAAM,4BAEL,OAOpB,IElPemsD,GApBU,SAAH,OACpB7xD,EAAE,EAAFA,GACA7G,EAAI,EAAJA,KACA24D,EAAW,EAAXA,YACAvzD,EAAW,EAAXA,YACAwzD,EAAc,EAAdA,eAAc,OAEd,uBAAKryC,UAAU,kCAAiC,UAC9C,sBAAKA,UAAU,gCAA+B,SAAEvmB,IAChD,eAAC,GAAM,CACL6G,GAAIA,EACJ0f,UAAU,iCACV4D,MAAOwuC,EAAc,KAAO,MAC5B/yB,QAAS+yB,EACT9yB,SAAU+yB,IAEZ,sBAAKryC,UAAU,uCAAsC,SAAEnhB,MATHyB,EAUhD,ECrBOgyD,GCsLArvC,aAlBgB,SAACzlB,GAAK,MAAM,CACzCmB,MAAOnB,EAAMmB,MACb4J,WAAY/K,EAAM+K,WAClBtO,QAASuD,EAAMvD,QAChB,IAEiC,SAAC2D,GAAQ,MAAM,CAC/C20D,kBAAmB,SAACr3D,GAClB0C,EAASzD,EAAoBe,GAC/B,EACAs3D,aAAc,SAAC/4D,EAAMyB,GACnB0C,EAAS3C,EAAWxB,EAAMyB,GAC5B,EACAu3D,mBAAoB,SAACv3D,GACnB0C,EjNlFK,CACL/D,KAAMW,EACN+N,WiNgF0BrN,GAC5B,EACD,GAEc+nB,EApKO,SAAH,GASZ,IARLtkB,EAAK,EAALA,MACAykB,EAAU,EAAVA,WACAsvC,EAAa,EAAbA,cACAF,EAAY,EAAZA,aACAC,EAAkB,EAAlBA,mBACAlqD,EAAU,EAAVA,WACAgqD,EAAiB,EAAjBA,kBACAt4D,EAAO,EAAPA,QAEM04D,EtMyDW/rD,GAAME,QACPkK,KAAI,SAAC7J,GACnB,MAAO,CACL1N,KAAMsN,GAAYI,GAAM1N,KACxByB,MAAOiM,EACPtI,YAAakI,GAAYI,GAAMtI,YAEnC,IsM/DA,EAAgDwe,oBAAS,GAAK,oBAAvDklC,EAAgB,KAAEC,EAAmB,KAC5C,EAA4DnlC,oBAAS,GAAM,oBAApEu1C,EAAuB,KAAEC,EAAwB,KACxD,EAA4Cx1C,mBAAS9U,GAAW,oBAAzDuqD,EAAc,KAAEC,EAAiB,KAExCp1C,qBAAU,WACR,IAAI+kC,EAAcC,EAiBlB,OAfIiQ,IACFlQ,EAAezgC,YAAW,WACxBswC,GAAkB,EACpB,GAAG,MAGH5P,EAAe1gC,YAAW,WACxBwwC,EAAmBK,GACnBtQ,GAAoB,GACpBqQ,GAAyB,GAEzB/wD,OAAO0F,SAASu5C,QAClB,GAAG,MAGE,WACL5+B,aAAaugC,GACbvgC,aAAawgC,EACf,CACF,GAAG,CACDiQ,EACAE,EACAL,EACAF,IAQF,OACE,sBAAKvyC,UAAU,0BAAyB,SACtC,eAAC,GAAK,CACJ6D,WAAY,kBAPhB0uC,GAAkB,QAClB/P,GAAoB,EAMwB,EACxC5+B,MAAM,WACN3pB,QAASA,EAAQ6O,cAAc,SAE/B,uBAAKkX,UAAU,mCAAkC,UAC/C,uBAAKA,UAAU,iCAAgC,UAC7C,sBAAKA,UAAU,oCAAmC,qBAClD,uBAAKA,UAAU,kCAAiC,UAC9C,sBAAKA,UAAU,gCAA+B,kBAC9C,sBAAKA,UAAU,iCAAgC,mBAC/C,sBAAKA,UAAU,uCAAsC,4BAIvD,eAAC,GAAgB,CACf1f,GAAG,aACH7G,KAAMu5D,GAA6Bv5D,KACnC24D,YAAaU,EACbj0D,YAAam0D,GAA6Bn0D,YAC1CwzD,eAAgB,SAAC7xC,GACfuyC,EAAkBvyC,EAAMxa,OAAOq5B,SAC/BmjB,GAAoB,EACtB,OAGJ,uBAAKxiC,UAAU,iCAAgC,UAC7C,sBAAKA,UAAU,oCAAmC,yBACjD2yC,EAAS3hD,KAAI,gBAAGvX,EAAI,EAAJA,KAAMyB,EAAK,EAALA,MAAO2D,EAAW,EAAXA,YAAW,OACvC,eAAC,GAAgB,CACfA,YAAaA,EACbyB,GAAIpF,EAEJzB,KAAMA,EACN44D,eAAgB,SAAC7xC,GACfgyC,EAAat3D,EAAOslB,EAAMxa,OAAOq5B,SACjCmjB,GAAoB,EACtB,EACA4P,YAAazzD,EAAMzD,IANdA,EAOL,IAEHkoB,EACC,uBAAKpD,UAAU,4CAA2C,UACxD,sDAAyB0yC,EAAa,gBACtC,oBACEjrD,KAAK,kDACLzB,OAAO,SACPksD,IAAI,sBAAqB,mCAM7B,sBAAKlyC,UAAU,0CAAyC,SACtD,wFAEG0yC,EAAa,YAKtB,uBAAK1yC,UAAU,mCAAkC,UAC/C,eAAC,GAAM,CACLoE,KAAK,YACL/C,QAAS,WACPkxC,GAAkB,GAClB/P,GAAoB,EACtB,EACAr+B,KAAK,QAAO,oBAId,eAAC,GAAM,CACL7gB,SAAUi/C,EACVlhC,QAAS,WACPwxC,GAAyB,EAC3B,EACAzuC,KAAMwuC,EAA0B,UAAY,UAC5CzuC,KAAK,QAAO,SAEXyuC,EACC,0DACkB,uBAAM5yC,UAAU,qBAAoB,uBAGtD,qCAQhB,IClKeizC,I,OCKQ,SAAH,GAAkC,IAA5BC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAClC,EAA4B91C,oBAAS,GAAM,oBAApC+1C,EAAM,KAAEC,EAAS,KAChBC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,UAIhB,OAAIH,EAEA,uCACE,uBAAKpzC,UAAU,kCAAiC,UAC9C,4CAAcszC,EAAM,gBAEpB,sBAAKtzC,UAAU,yBAAwB,SACrC,eAAC,GAAU,CACTe,UAAU,+BACVf,UAAU,eACViB,UAAWwP,IAAMnO,SACjBvjB,KAAM88B,GACNxa,QAAS,kBAAMgyC,GAAU,EAAM,SAIrC,uBAAKrzC,UAAU,kCAAiC,UAC9C,2EAC4CszC,EAAM,4GAE5B,wBACpB,wBAAM,kCAC0BC,EAAS,OAG3C,oBAAGvzC,UAAU,UAAS,4BACtB,sBAAKA,UAAU,iBAAgB,SAC7B,eAAC,GAAa,CAAC8W,QA7BT,+BAgCR,qBAAG9W,UAAU,iBAAgB,0EACkC,wBAC7D,oBACEvY,KAAK,kDACLzB,OAAO,SACPksD,IAAI,sBAAqB,yCAWnC,uBAAKlyC,UAAU,6BAA4B,UACzC,4CAAcszC,EAAM,gBACpB,uBAAKtzC,UAAU,oBAAmB,UAChC,yBAAQA,UAAU,QAAQqB,QAAS,kBAAMgyC,GAAU,EAAK,EAAC,oBAGzD,yBAAQrzC,UAAU,QAAQqB,QAAS,kBAAM8xC,GAAW,EAAK,EAAC,0BAMlE,GCrEe/wC,I,OCkGAa,aALgB,SAACzlB,GAAK,MAAM,CACzCg3B,qBAAsBh3B,EAAM4L,QAAQC,cACpCf,MAAO9K,EAAM8K,MACd,GAEc2a,EAhFQ,SAAH,GAAyC,IAAnCuR,EAAoB,EAApBA,qBAAsBlsB,EAAK,EAALA,MACtCuV,EAAa/b,OAAO0F,SAApBqW,SACFE,EAAoBjd,GAAe+c,EAAU,CACjD,sBAAuB,KAKzB,EAA4BR,oBAAS,GAAM,oBAApC0jC,EAAM,KAAEyS,EAAS,KAExB71C,qBAAU,kBAAM61C,GAAU,EAAK,GAAE,IAEjC71C,qBAAU,WACR,IAAM6Y,EAAQvU,YAAW,WACvBuxC,GAAU,EACZ,GAAG,KAEH,OAAO,kBAAMrxC,aAAaqU,EAAO,CACnC,GAAG,IAEH,IAAci9B,EAAgBv2C,GAAe4C,GAAc,CACzDf,UACAwyC,MAAO/8B,IAFD56B,KAIR,EAAkCyjB,oBAAS,GAAM,oBAA1Cq2C,EAAS,KAAEC,EAAY,KAC9B,EAAoCt2C,oBAAS,GAAM,oBAA5C+F,EAAU,KAAEwwC,EAAa,KAChC,EAA0Cv2C,mBAAS,MAAK,oBAAjDq1C,EAAa,KAAEmB,EAAgB,KAStC,OAPAl2C,qBAAU,WACJ81C,IACFG,EAAcH,EAAYK,QAAQ1wC,YAClCywC,EAAiBJ,EAAYK,QAAQR,QAEzC,GAAG,CAACG,IAGF,uBACEzzC,UAAW+B,KAAW,uBAAwB,CAC5C,kBAA6B,SAAVzZ,EACnB,mBAA8B,UAAVA,IACnB,UAEH,qBAAI0X,UAAU,iBAAgB,uBAC7BwU,EACC,eAAC,GAAe,UACd,gBAAC,KAAM,WACL,eAAC,GAAa,CAACpR,WAAYA,IAC3B,eAAC,GAAa,CACZA,WAAYA,EACZsvC,cAAeA,IAEhBe,GAAerwC,IAAeswC,GAC7B,eAAC,GAAc,CACbA,UAAWA,EACXP,WAAYQ,EACZT,SAAUO,EAAYK,UAG1B,gBAAC,KAAM,WACL,eAAC,KAAK,CAACzwC,OAAK,EAAC9hB,KAAMwc,EAAkB,SACnC,eAAC,GAAgB,CAACgjC,OAAQA,MAE5B,eAAC,KAAK,CAACx/C,KAAI,UAAKwc,EAAiB,uBAAsB,SACrD,eAAC,GAAiB,cAM1B,eAAC,GAAgB,MAIzB,KCvEMg2C,I,OAAG,kDACP,WAAY5rD,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAM+F,EAAe1E,GAAgBrB,GACsB,OAA3D,EAAKmU,MAAQL,GAAe/N,EAAc,EAAK/F,MAAMvO,MAAM,CAC7D,CAwCC,OAxCA,8CAED,WAC0B,SAApBse,KAAK/P,MAAMvO,MACbse,KAAKoE,MAAM1e,SzMuDf,iDAAO,WAAgBA,EAAUqM,GAAQ,yFAGvC,GACyB,UAFnBzM,EAAQyM,KAEJ/E,WAAqB,iDAWqC,OARpEtH,EAASf,IAAc,IAIjBwK,EAAMhH,GAAO,QAGbrB,EACJxB,EAAM4L,QAAQpK,oBAAsBxB,EAAMmB,MAAMK,mBAAmB,EAAD,OAC/CsC,GAAa+F,GAAKhK,MAAK,SAACzD,GAAI,OAC/CoO,GAAqBpO,GAAM,EAAMoF,EAAmB,IACpD,KAAD,EAFW,MApCsBiE,GAoC9BlF,EAAQ,QAIuBkF,UAtCvBC,IAAIjC,QAAWgC,EAASpD,MAKjCoD,EAASI,QAKPJ,EAASI,SAAWJ,EAASpD,MA4BW,CAAD,gBACG,OAAvCwH,EAAMyC,GAAe/L,EAASkF,UAAU,EAAD,QAC5B3B,GAAa+F,GAAKhK,MAAK,SAACzD,GAAI,OAC3CoO,GAAqBpO,GAAM,EAAOoF,EAAmB,IACrD,KAAD,GAFDjB,EAAQ,eAIVH,EAASjE,EAAUoE,IACnBH,EAASf,IAAc,IAAQ,kCA/CE,IAACoG,CA+CH,UAChC,qDA5BD,IyMrDEiV,KAAK87C,cAAc97C,KAAKoE,MAAMrS,WAAWtL,MAC3C,GAAC,gCAED,SAAmB8yB,GACbA,EAAU73B,OAASse,KAAK/P,MAAMvO,MAChCse,KAAK+7C,oBAET,GAEA,2BAGA,SAAct1D,GACZ,IAAMmlB,E3MeqB,SAACowC,GAC9B,IAAMC,EAAWvtD,GAAME,QAEvB,GAAIqtD,EAASlzD,OAAS,EAAG,CACvB,IAAImzD,EAAO,yDAiBX,OAfAD,EAAS33D,SAAQ,SAAC/C,GAChB,IAAIsN,GAAYtN,GAAM46D,QAAtB,CAGA,IAAMC,EAAYJ,EAAaz6D,GACzB86D,EAASD,EAAY,UAAY,WACjCE,EAAaF,EAAY,eAAO,eAChCv1D,EAAOgI,GAAYtN,GAAMsF,KACzBF,EAAckI,GAAYtN,GAAMoF,YACtCu1D,GAAI,YAASI,EAAU,YAAIz1D,EAAI,aAAKtF,EAAI,kBAAOoF,EAAW,iBAAM01D,EANhE,CAOF,IAEAH,GAAI,mDACJA,GAAI,gDAGN,CACF,C2MtCoBK,CAAgB91D,GAE5BmlB,GAA2B,qBAAT7nB,MACpBqG,QAAQ8xD,KAAKtwC,EAEjB,GAEA,gCAGA,WACE,IAAM/lB,EAAWiK,GAAqBkQ,KAAK/P,MAAMvO,MAAM,GACvDse,KAAKoE,MAAM1e,SAASjE,EAAUoE,GAChC,GAAC,oBAED,WACE,OAAOma,KAAK/P,MAAMvO,KAChB,eAAC,IAAQ,CAAC0iB,MAAOpE,KAAKoE,MAAM,SAC1B,eAAC,GAAO,MAER,IACN,KAAC,EA7CM,CAASmU,IAAMzB,YCpBT+kC,GD8GAA,G,qBEvFFW,GAAiB,WAC5B,IAAIrtD,EACAstD,EACJ,IAEEA,GADAttD,EAAM,IAAI/N,IAAIiO,SAASC,SAASC,OACrBC,aAAaktD,IAAI,OAI9B,CAHE,MAAOjtD,GAEP,YADArF,QAAQsF,KAAK,uDAEf,CAWA,OAVK+sD,IACHA,EA5BwB,SAAC1zD,GAI3B,IAHA,IAAMiG,EAAS,GACT2tD,EACJ,iEACOl0D,EAAI,EAAGA,EAAIM,EAAQN,IAC1BuG,EAAOzB,KACLovD,EAAWC,OAAOl6C,KAAK4xB,MAAM5xB,KAAKm6C,SAAWF,EAAW5zD,UAG5D,OAAOiG,EAAO3G,KAAK,GACrB,CAkBWy0D,CAAa,IACpB3tD,EAAIK,aAAautD,IAAI,OAAQN,IAEX,qBAAT14D,MACTqG,QAAQ8xD,KAAK,uBAAD,OACaO,EAAI,yCAAiCttD,EAAIuzC,YAChE,qBAGG+Z,CACT,EAMaO,GAAiB,SAACj0D,GAAM,OAAKmE,MAAM0nC,KAAK1nC,MAAMnE,GAAQ1E,OAAQ,EAE9D44D,GACX,uOAAuOz2C,MACrO,KA8EW02C,GAxEK,WAElB,IAAMT,EAAOD,KACPK,EAASM,KAAWV,GAMpBW,EAAc,SAACvuC,GAAG,OAAKnM,KAAK4xB,MAAMuoB,IAAWhuC,EAAK,EAMlDwuC,EAAe,SAACxuC,GAAG,OAAKnM,KAAKwxB,KAAK2oB,IAAWhuC,EAAK,EAalDyuC,EAAY,SAACjqB,GAAK,OAAKA,EAAM+pB,EAAY/pB,EAAMtqC,QAAS,EAiC9D,MAAO,CACL8zD,SACAO,cACAC,eACAE,oBA3C0B,SAAC/vC,EAAKqB,GAAG,OAAKwuC,EAAaxuC,EAAMrB,GAAOA,CAAI,EA4CtE8vC,YACAE,cAhCoB,SAACC,GAAQ,IAAEp1D,EAAI,uDAAG,IAAG,OACzC20D,GAAeS,GACZ3kD,KAAI,kBAAMwkD,EAAUL,GAAY,IAChC50D,KAAKA,EAAM,EA8Bdq1D,mBAtByB,SAACh1D,EAAKi1D,GAC/B,IAAM3uD,EAAS,IAAI9B,MAAMywD,GACrBC,EAAMl1D,EAAIK,OACR80D,EAAQ,IAAI3wD,MAAM0wD,GACxB,GAAID,EAAWC,EACb,OAAOl1D,EAET,KAAOi1D,KAAY,CACjB,IAAMp9C,EAAImC,KAAK4xB,MAAMuoB,IAAWe,GAChC5uD,EAAO2uD,GAAYj1D,EAAI6X,KAAKs9C,EAAQA,EAAMt9C,GAAKA,GAC/Cs9C,EAAMt9C,KAAOq9C,KAAOC,EAAQA,EAAMD,GAAOA,CAC3C,CACA,OAAO5uD,CACT,EAWF,ECjHM8uD,GAAS,CACb,MACA,eACA,UACA,UACA,cACA,gBAMIC,GAAQ,WACZ,aAAe,oBACb/9C,KAAKg+C,MAAQd,KACbl9C,KAAKvU,UAAYuU,KAAKi+C,oBACtBj+C,KAAKk+C,UAAYl+C,KAAKm+C,eACtBn+C,KAAKo+C,WAAap+C,KAAKq+C,gBACvBr+C,KAAKzU,KAAOyU,KAAKs+C,eACjBt+C,KAAK3S,MAAQ2S,KAAKu+C,gBAClBv+C,KAAK5S,MAAQ4S,KAAKw+C,gBAClBx+C,KAAKxT,iBAAmBwT,KAAKy+C,yBAAyBz+C,KAAK3S,OAE3D2S,KAAKqZ,SACLrZ,KAAK0+C,UACP,CAwZC,OAtZD,8CAIA,WAME,IALA,IAAMjzD,EAAY,CAAC,WACbkzD,EAAgB3+C,KAAKg+C,MAAMT,oBAnCT,EACA,IAsCf90D,EAAI,EAAGA,EAAIk2D,EAAel2D,IACjCgD,EAAU8B,KAAKyS,KAAKg+C,MAAMR,cAAcx9C,KAAKg+C,MAAMX,aAAa,GAAI,MAEtE,OAAO5xD,EAAU6J,OAAO/M,GAC1B,GAEA,sCAIA,SAAyB8E,GACvB,MAAO,CACLuxD,SAAU,CACRx2D,GAAI,WACJ7G,KAAM,OACN8M,SAAUhB,EAAMyL,KAAI,SAACzN,GAAI,MAAM,CAAEjD,GAAIiD,EAAKjD,GAAIzG,KAAM0J,EAAK1J,KAAM,KAGrE,GAEA,0BAKA,WACE,IAAIu8D,EAAYl+C,KAAKg+C,MAAMT,oBAxER,GADA,IAiFnB,OAHKW,EAAY,IACfA,GAAa,GAERA,CACT,GAEA,2BAIA,WAGE,IAFA,IAAMW,EAAY/2D,GAAcg2D,IAAQ,kBAAM,CAAC,IAEtCr1D,EAAI,EAAGA,EAAIuX,KAAKk+C,UAAWz1D,IAClCo2D,EAAU7+C,KAAKg+C,MAAMV,UAAUQ,OAIjC,IADA,IAAMM,EAAa,CAAC,EACXlhD,EAAO,EAAG1R,EAAQ,EAAG0R,EAAO8C,KAAKk+C,UAAWhhD,IAAQ,CAC3D,KAAO2hD,EAAUf,GAAOtyD,IAAU,GAChCA,IAEF4yD,EAAWlhD,GAAQ4gD,GAAOtyD,GAC1BqzD,EAAUf,GAAOtyD,KACnB,CACA,OAAO4yD,CACT,GAEA,0BAIA,WAAgB,IAAD,OACPvkD,EAAWmG,KAAKg+C,MAAMX,aAzGV,IA0GlB,OAAOL,GAAenjD,GACnBf,KAAI,kBACH,EAAKklD,MAAMR,cAAc,EAAKQ,MAAMX,aA7GjB,GA6GkD,IAEtE/nD,OAAO/M,GACZ,GAEA,2BAIA,WAEE,IADA,IAAM8E,EAAQ,GACL6P,EAAO,EAAGA,EAAO8C,KAAKk+C,UAAWhhD,IAExC,IADA,IAAM4hD,EAAgB9+C,KAAK++C,iBAAiB7hD,GACnCzU,EAAI,EAAGA,EAAIq2D,EAAer2D,IAAK,CACtC,IAAM4C,EAAO2U,KAAKg/C,WAAWv2D,EAAGyU,GAChC7P,EAAME,KAAKlC,EACb,CAEF,OAAOgC,CACT,GAEA,8BAIA,WACE,OAAOqV,KAAK8K,IAzIY,EA0IAxN,KAAKg+C,MAAMnB,SA3IX,GA8I1B,GAEA,qBAKA,SAAQxxD,GACN,OAAIA,EAAK6R,KAAO,EACP,QAGJ7R,EAAK4zD,SAASl2D,QAAUiX,KAAKg+C,MAAMnB,SArJf,GAsJhB,aAGF,MACT,GAEA,wBAOA,SAAWp0D,EAAGy2D,GACZ,IAAM1zD,EAAQwU,KAAKo+C,WAAWc,GAc9B,MAba,CACX92D,GAAG,GAAD,OAAKoD,EAAK,YAAI0zD,EAAW,YAAIz2D,GAC/BlH,KAAM,KACNiM,UAAW,KACX7L,KAAM,KACNub,KAAMgiD,EACN1zD,MAAOA,EACPC,UAAWuU,KAAKm/C,mBAChBvxD,kBAAmB,KACnBrC,KAAMyU,KAAKo/C,gBACXH,SAAU,GACVI,SAAU,GAGd,GAEA,yBAKA,SAAY19D,GACV,IAAMJ,EAAOye,KAAKg+C,MAAMR,cAAcx9C,KAAKg+C,MAAMX,aAAa,IAAK,KACnE,MAAgB,eAAT17D,EAAqB,qBAAiBJ,GAASA,CACxD,GAEA,6BAIA,SAAgB8J,GAAO,IAAD,OACpB,EAAwC2U,KAAKg+C,MAArCR,EAAa,EAAbA,cAAeH,EAAY,EAAZA,aAEL,SAAdhyD,EAAK1J,KACP0J,EAAKQ,KAAOmU,KAAKs/C,sBACM,SAAdj0D,EAAK1J,OACd0J,EAAKe,YAAcoxD,EAAcH,EAAa,KAEhDhyD,EAAKS,SAAW0xD,EAAcH,EAAa,IAAK,KAChDhyD,EAAKhE,WAAaS,GAChBk1D,GAAeK,EAAa,KAAKvkD,KAAI,kBACnC0kD,EAAcH,EAAa,GAAI,IAAI,KAErC,kBAAM,EAAKW,MAAMX,aAAa,IAAM,EAAE,GAE1C,GAEA,iCAGA,WACE,IAAMt8D,EAAU6C,OAAO27D,oBAAoBxB,EAASyB,WAC9Cl7B,EAAQtkB,KAAKg+C,MAAMZ,YAAYr8D,EAAQgI,QACzC8C,EAAOkyD,EAASyB,UAAUz+D,EAAQujC,IAAQoe,WAI9C,OAHIpe,EAAQ,IACVz4B,EAAO,YAAcA,EAAK3C,QAAQ,UAAW,OAExC2C,CACT,GAEA,8BAIA,WAAoB,IAAD,OACjB,OAAOmU,KAAKvU,UAAUsD,QAAO,SAACtD,EAAWrD,EAAIK,GAC3C,OAAU,IAANA,GAAW,EAAKu1D,MAAMZ,YAAY,GAC7B3xD,EAAUyQ,OAAO9T,GAEnBqD,CACT,GAAG,GACL,GAEA,2BAIA,WACE,OAAOuU,KAAKg+C,MAAMN,mBAChB19C,KAAKzU,KACLyU,KAAKg+C,MAAMX,aAAar9C,KAAKzU,KAAKxC,QAEtC,GAEA,4BAIA,WACE,IAE6B,EAFvB02D,EAAc,CAAC,EAAE,eAEJz/C,KAAK3S,OAAK,IAA7B,2BAA+B,CAAC,IAArBhC,EAAI,QACbo0D,EAAYp0D,EAAK6R,MAAQuiD,EAAYp0D,EAAK6R,OAAS,GACnDuiD,EAAYp0D,EAAK6R,MAAM3P,KAAKlC,EAC9B,CAAC,+BAED,OAAOo0D,CACT,GAEA,2BAIA,WAsBE,IAtBe,IAAD,OACRryD,EAAQ,GACRsyD,EAAY1/C,KAAKg+C,MAAMT,oBAtRV,IADA,KA2RbkC,EAAcz/C,KAAK2/C,iBAGnBC,EAAQh8D,OAAOS,KAAKo7D,GACvB3mD,KAAI,SAACoE,GAAI,OAAKkT,WAAWlT,EAAK,IAC9BrE,MAAK,SAACgG,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAGjB+gD,EAAsB,SAACC,GAC3B,IAAMC,EAAYH,EAAME,GAClBE,EAAYP,EAAYM,GAE9B,OAAOC,EADe,EAAKhC,MAAMZ,YAAY4C,EAAUj3D,QAEzD,EAGSN,EAAI,EAAGA,EAAIi3D,EAAWj3D,GAAK,EAAG,CAErC,IAAMw3D,EAAkBjgD,KAAKg+C,MAAMZ,YAAYwC,EAAM72D,OAAS,GACxDkE,EAAS4yD,EAAoBI,GAG7BC,EAAqBN,EAAM72D,OAAS,EAAIk3D,EACxCE,EAAez9C,KAAKC,MAAM,GAAM3C,KAAKg+C,MAAMnB,UAG3C/uD,EAAS+xD,EADbI,EAAkBv9C,KAAK8K,IAAI2yC,EAAcD,IAIrCxzD,EAAO,CACXO,OAAQA,EAAO7E,GACf0F,OAAQA,EAAO1F,GACfg4D,YAAanzD,EACbozD,YAAavyD,GAGfV,EAAMG,KAAKb,GAGXO,EAAOoyD,SAAS9xD,KAAKb,GACrBoB,EAAOmxD,SAAS1xD,KAAKb,EACvB,CAEA,OAAOU,CACT,GAEA,yBAIA,WACE,IAK6B,EALvBC,EAAQ,CAAC,EAGTizD,EAAS,SAACj1D,GAAI,OAAKA,EAAK4zD,SAASl2D,OAASsC,EAAKg0D,SAASt2D,MAAO,iBAElDiX,KAAK5S,OAAK,IAA7B,2BAA+B,CAAC,IAArBV,EAAI,QAGX4zD,EAAO5zD,EAAK0zD,aAAeE,EAAO5zD,EAAK2zD,aAhVvB,IAmVhBhzD,EAAMX,EAAK0zD,YAAYh4D,IAAMsE,EAAK0zD,YAClC/yD,EAAMX,EAAK2zD,YAAYj4D,IAAMsE,EAAK2zD,YAEtC,CAAC,+BAED,OAAOz8D,OAAOkQ,OAAOzG,EACvB,GAEA,wBAIA,WACE,OAAO2S,KAAK3S,MACT0B,QAAO,SAACxD,EAAMF,GAAI,OAAMA,EAAKE,KAAOA,EAAK2Q,OAAO7Q,EAAKE,MAAQA,CAAI,GAAG,IACpE+J,OAAO/M,IACPuQ,KAAI,SAAC5R,GAAG,MAAM,CAAE3F,KAAM2F,EAAKkB,GAAIlB,EAAK,GACzC,GAEA,yBAIA,WACE,IAAMq5D,EAAez4D,GACnBkY,KAAK3S,MAAMyL,KAAI,SAACzN,GAAI,OAAKA,EAAKjD,EAAE,KAChC,kBAAM,CAAI,IAGZ,OAAO4X,KAAK5S,MAAMkI,QAChB,SAAC5I,GAAI,OAAK6zD,EAAa7zD,EAAKoB,SAAWyyD,EAAa7zD,EAAKO,OAAO,GAEpE,GAEA,oBAGA,WAAU,IAGqB,EAHtB,OACD/I,EAAQ,CAAC,EAAE,eAEE8b,KAAK3S,OAAK,IAA7B,2BAA+B,CAC7BnJ,EADa,QACFkE,IAAM,EACnB,CAAC,mCAE4B,EAF5B,eAEkB4X,KAAK5S,OAAK,IAA7B,2BAA+B,CAAC,IAArBV,EAAI,QACbxI,EAAMwI,EAAKO,QAAQM,KAAKb,EAAKoB,OAC/B,CAEA,+BAGA,IAFA,IAAM0yD,EAAcxjD,KAAiB9Y,GAE5BgZ,EAAO,EAAGA,EAAOsjD,EAAYz3D,OAAQmU,IAAQ,CAAC,IACnB,EADkB,eACnCsjD,EAAYtjD,IAAK,yBAAvB9U,EAAE,QACLiD,EAAO,EAAKgC,MAAM8uB,MAAK,SAAC9wB,GAAI,OAAKA,EAAKjD,KAAOA,CAAE,IACrDiD,EAAK6R,KAAOA,EACZ7R,EAAK1J,KAAO,EAAK8+D,QAAQp1D,GACzBA,EAAK9J,KAAO,EAAK4b,YAAY9R,EAAK1J,MAClC0J,EAAKmC,UACH,UAAGnC,EAAKG,MAAK,YAAIH,EAAK1J,KAAI,YAAI0J,EAAK6R,KAAI,YAAI7R,EAAK9J,MAAO2H,QACrD,MACA,KAEJ,EAAKw3D,gBAAgBr1D,EAAM,EAV7B,2BAAqC,GAWpC,+BACH,CACF,GAEA,sBAGA,WACE2U,KAAK3S,MAAQ2S,KAAK2gD,cAClB3gD,KAAKzU,KAAOyU,KAAK4gD,aACjB5gD,KAAK5S,MAAQ4S,KAAK6gD,cAAc,IAEH,EAFG,eAEb7gD,KAAK3S,OAAK,IAA7B,2BAA+B,CAAC,IAArBhC,EAAI,eACNA,EAAK4zD,gBACL5zD,EAAKg0D,QACd,CAAC,mCAE4B,EAF5B,eAEkBr/C,KAAK5S,OAAK,IAA7B,2BAA+B,CAAC,IAArBV,EAAI,eACNA,EAAK2zD,mBACL3zD,EAAK0zD,WACd,CAAC,+BACH,GAEA,iBAIA,WACE,MAAO,CACLhzD,MAAO4S,KAAK5S,MACZoB,OAAQsvD,GACRzwD,MAAO2S,KAAK3S,MACZ5B,UAAWuU,KAAKvU,UAAUqN,KAAI,SAACvX,GAAI,MAAM,CAAE6G,GAAI7G,EAAMA,OAAM,IAE3DqM,kBAAmBoS,KAAKxT,iBACxBjB,KAAMyU,KAAKzU,KAEf,KAAC,EAraW,GA0aCu1D,GAFgB,WAAH,OAAS,IAAI/C,IAAWgD,KAAM,E,8BC/X3CC,GAFS,WAAH,OA/BO,SAAC/zD,GAE3B,IAAMg0D,EAAa,SAACv/D,GAAI,OAAKkC,OAAOC,OAAOnC,EAAM,CAAEuL,UAAU,EAE7D,OAAQA,GACN,IAAK,eAEH,OAAOg0D,EAAWC,IACpB,IAAK,OAEH,OAAOD,EAAWE,IACpB,IAAK,YAEH,OAAOF,EAAWG,IACpB,IAAK,SAEH,OAAOH,EAAWI,MACpB,IAAK,OAEH,OAAOp0D,EACT,QACE,MAAM,IAAI3E,MAAM,iCAAD,OACoB2E,EAAM,kHAG/C,CAM8Bq0D,CAvDH,WACzB,IACMt0D,EADY,IAAI5L,IAAIiO,SAASC,SAASC,MAAMC,aACrBktD,IAAI,QACzB6E,EAA0BC,oIAA1BD,sBACFE,EAAoC,wBAA3BpyD,SAASC,SAASoW,KAEjC,OAAI1Y,EACK00D,mBAAmB10D,GAExBu0D,IAGAE,EACK,OAEF,OACT,CAuC2CE,GAAe,ECpE3Cx3C,I,OCOG,WAAH,OACb,qCACE,eAAC,GAAG,CAACzoB,KAAMs/D,QACV,GCRLY,IAASC,OAAO,eAAC,GAAQ,IAAKxyD,SAASyyD,eAAe,Q,qGCEzCC,EAAoB,GAAVr/C,KAAKs/C,GAkBfC,EAAO,SAACj/D,EAAOk/D,GAAI,OAAKx/C,KAAKC,MAAM3f,EAAQk/D,GAAQA,CAAK,EAgBxDC,EAAQ,SAACtjD,EAAGC,GAAC,OAAK4D,KAAK0/C,MAAMvjD,EAAE2B,EAAI1B,EAAE0B,EAAG3B,EAAE0B,EAAIzB,EAAEyB,EAAG,EAOnD8hD,EAAW,SAACh3D,GAAI,OAAKA,EAAKkV,EAAiB,GAAblV,EAAK0U,KAAY,EAO/CuiD,EAAY,SAACj3D,GAAI,OAAKA,EAAKkV,EAAiB,GAAblV,EAAK0U,KAAY,EAOhDwiD,EAAU,SAACl3D,GAAI,OAAKA,EAAKmV,EAAkB,GAAdnV,EAAKuV,MAAa,EAO/C4hD,EAAa,SAACn3D,GAAI,OAAKA,EAAKmV,EAAkB,GAAdnV,EAAKuV,MAAa,EASlD6hD,EAAa,SAACp1D,GACzB,IAGwB,EAHlBwnD,EAAO,CAAC,EAEd,cACmBxnD,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QACbwpD,EAAKxpD,EAAKmV,GAAKq0C,EAAKxpD,EAAKmV,IAAM,GAC/Bq0C,EAAKxpD,EAAKmV,GAAGjT,KAAKlC,EACpB,CAEA,+BACA,IAAMq3D,EAAa9+D,OAAOS,KAAKwwD,GAAM/7C,KAAI,SAAC6pD,GAAG,OAAKvyC,WAAWuyC,EAAI,IACjED,EAAW7pD,MAAK,SAACgG,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAI/B,IADA,IAAM8jD,EAAaF,EAAW5pD,KAAI,SAAC6pD,GAAG,OAAK9N,EAAK8N,EAAI,IAC3Cl6D,EAAI,EAAGA,EAAIm6D,EAAW75D,OAAQN,GAAK,EAAG,CAC7Cm6D,EAAWn6D,GAAGoQ,MAAK,SAACgG,EAAGC,GAAC,OAAK+jD,EAAQhkD,EAAE0B,EAAGzB,EAAEyB,EAAG1B,EAAEzW,GAAI0W,EAAE1W,GAAG,IAAE,IAE5B,EAF4B,cAEzCw6D,EAAWn6D,IAAE,IAAhC,2BAAkC,CAAnB,QACRk6D,IAAMl6D,CACb,CAAC,+BACH,CAEA,OAAOm6D,CACT,EAYaC,EAAU,SAAVA,EAAWhkD,EAAGC,GACwC,IAAjE,IAAMgkD,EAAqB,kBAANjkD,EAAiBA,EAAE4C,cAAc3C,GAAKD,EAAIC,EAAE,mBADlChL,EAAM,iCAANA,EAAM,kBAErC,OAAiB,IAAVgvD,GAAiC,IAAlBhvD,EAAO/K,OAAe+5D,EAAQD,EAAO,aAAI/uD,EACjE,EAQaivD,EAAa,SAAC13D,EAAM+pB,GAK/B,OAJA/pB,EAAKkV,EAAIlV,EAAKkV,EAAI6U,EAAO7U,EACzBlV,EAAKmV,EAAInV,EAAKmV,EAAI4U,EAAO5U,EAEzBnV,EAAKynB,MAAQznB,EAAKkV,EAAa,KAATlV,EAAKmV,EACpBnV,CACT,EAQa23D,EAAa,SAACt2D,EAAM0oB,GAK/B,OAJA1oB,EAAK+mB,OAAOnvB,SAAQ,SAAC2+D,GACnBA,EAAM1iD,EAAI0iD,EAAM1iD,EAAI6U,EAAO7U,EAC3B0iD,EAAMziD,EAAIyiD,EAAMziD,EAAI4U,EAAO5U,CAC7B,IACO9T,CACT,EAYaw2D,EAAgB,SAAC3iD,EAAGC,EAAG2iD,EAAIC,EAAIC,EAAIC,GAC9C,IA9IoBtgE,EAAOwqB,EAAKqB,EA8I1B00C,EAAKF,EAAKF,EACVK,EAAKF,EAAKF,EAEVK,GAjJ0B50C,EAiJW,GAjJvB7rB,IAgJDud,EAAI4iD,GAAMI,GAAM/iD,EAAI4iD,GAAMI,IAAOD,EAAKA,EAAKC,EAAKA,GAAM,KAhJ9Ch2C,EAiJa,GAhJ1BA,EAAMxqB,EAAQ6rB,EAAMA,EAAM7rB,GAkJxC,MAAO,CACLud,EAAG4iD,EAAKI,EAAKE,EACbjjD,EAAG4iD,EAAKI,EAAKC,EACbN,KACAC,KACAC,KACAC,KAEJ,E,gBCtJaI,EAAa,SAACC,EAAaC,EAAYC,GAClD,IAAK,IAAIp7D,EAAI,EAAGA,EAAIm7D,EAAYn7D,GAAK,EAAG,CAAC,IACH,EADE,cACbk7D,GAAW,IAApC,2BAAsC,CAAC,IAA5BG,EAAU,QACnBA,EAAWC,KAAKC,MAAMF,EAAYD,EACpC,CAAC,+BACH,CACF,EAgBaI,EAAc,SAACN,EAAaE,GACvC,IAeoC,EAf9BK,EAAS,IAAIC,IACb76B,EAAY,CAAC,EAEb86B,EAAa,SAACx5D,EAAKk5B,GAAQ,gBAAQl5B,EAAIxC,GAAE,YAAI07B,EAAQ,EAErDugC,EAAc,SAACz5D,EAAKk5B,GACxB,IAAM17B,EAAKg8D,EAAWx5D,EAAKk5B,GAE3B,IAAKwF,EAAUlhC,GAAK,CAClB,IAAMk8D,EAAYh7B,EAAUlhC,GAAM,IAAIm8D,IACtCD,EAASxgC,SAAWA,EACpBwgC,EAAS15D,IAAMA,CACjB,CACF,EAAE,cAEuB+4D,GAAW,IAApC,2BAAsC,CAAC,IAA5BG,EAAU,QACnBO,EAAYP,EAAWjlD,EAAGilD,EAAWC,KAAKjgC,UAC1CugC,EAAYP,EAAWhlD,EAAGglD,EAAWC,KAAKjgC,SAC5C,CAAC,+BAED,IAEoC,EAFhC0gC,EAAkB,EAAE,cAECb,GAAW,IAApC,2BAAsC,CAAC,IAA5BG,EAAU,QACnB,IACEI,EAAOO,cACLX,EAAWC,KAAKW,OACdZ,EACAD,EACAv6B,EAAU86B,EAAWN,EAAWjlD,EAAGilD,EAAWC,KAAKjgC,WACnDwF,EAAU86B,EAAWN,EAAWhlD,EAAGglD,EAAWC,KAAKjgC,YAKzD,CAFE,MAAO35B,GACPq6D,GAAmB,CACrB,CACF,CAAC,+BAEGA,EAAkB,GACpBp6D,QAAQsF,KAAK,WAAD,OAAY80D,EAAe,4BAGzCN,EAAOS,kBAIP,IAFA,IAEA,MAFsB/gE,OAAOkQ,OAAOw1B,GAEA,eAAE,CAAjC,IAAMg7B,EAAQ,KACjBA,EAAS15D,IAAI05D,EAASxgC,UAAYwgC,EAASthE,OAC7C,CACF,EC9Ea4hE,EAAgB,CAC3B9gC,SAAU,IAEV4gC,OAAQ,SAACZ,EAAYD,EAAWgB,EAAWC,GAAS,OAClD,IAAIC,IACFF,EAAUG,MAAMF,GAChBG,IAASC,GACTrB,EAAUsB,OACVC,IAASC,SACV,GAMQC,EAAkB,CAC7BxhC,SAAU,IAEV4gC,OAAQ,SAACZ,EAAYD,EAAWgB,EAAWC,GAAS,OAClD,IAAIC,IACFF,EAAUG,MAAMF,GAChBG,IAASC,GACTrB,EAAU0B,WACVH,IAASC,SACV,GAMQG,EAAqB,CAChC1hC,SAAU,IAEVkgC,MAAO,SAACF,GACN,IAAQjlD,EAAmBilD,EAAnBjlD,EAAGC,EAAgBglD,EAAhBhlD,EACLra,EADqBq/D,EAAb2B,UACc5mD,EAAE0B,EAAIzB,EAAEyB,GACpC1B,EAAE0B,GAAK9b,EACPqa,EAAEyB,GAAK9b,CACT,EAEAigE,OAAQ,SAACZ,EAAYD,EAAWgB,EAAWC,GAAS,OAClD,IAAIC,IACFF,EAAUG,MAAMF,GAChBG,IAASS,GACT,EACAN,IAASO,OAAO,EAAG,EAAG,EAAG7B,EAAW2B,UACrC,GAMQG,EAAqB,CAChC9hC,SAAU,IAEVkgC,MAAO,SAACF,GACN,IAAQ+B,EAAqD/B,EAArD+B,MAAOC,EAA8ChC,EAA9CgC,MAAOC,EAAuCjC,EAAvCiC,YAAaC,EAA0BlC,EAA1BkC,YAAaP,EAAa3B,EAAb2B,SAG1CQ,EACJR,IACEI,EAAMtyC,WAAWhT,EAAIulD,EAAMvyC,WAAWhT,EAAIwlD,GAAeA,GAEvDG,EACJT,IACEI,EAAMM,WAAW5lD,EAAIulD,EAAMK,WAAW5lD,EAAIylD,GAAeA,GAG7DH,EAAMtyC,WAAWhT,GAAK0lD,EACtBH,EAAMvyC,WAAWhT,GAAK0lD,EACtBJ,EAAMM,WAAW5lD,GAAK2lD,EACtBJ,EAAMK,WAAW5lD,GAAK2lD,CACxB,GAMWE,EAAuB,CAClCtiC,SAAU,IAEV4gC,OAAQ,SAACZ,EAAYD,EAAWgB,EAAWC,GAAS,OAClD,IAAIC,IACFD,EAAUE,MAAMH,GAChBI,IAASC,GACTpB,EAAWuC,WACXjB,IAASC,SACV,GC3EQjiC,EAAS,SAAH,GASZ,IAEmB,EAVxB/1B,EAAK,EAALA,MACAD,EAAK,EAALA,MACAoB,EAAM,EAANA,OACA83D,EAAM,EAANA,OACAnB,EAAM,EAANA,OACAoB,EAAO,EAAPA,QACAC,EAAW,EAAXA,YACA5C,EAAU,EAAVA,WAEA,cACmBv2D,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QACbA,EAAKkV,EAAI,EACTlV,EAAKmV,EAAI,CACX,CAEA,+BACA,IAAMqjD,EAAY,CAChByC,SACAnB,SACAoB,UACAhB,WAAqC,IAAxBJ,EAASqB,IAIlBC,EAAiBC,EAAqBt5D,GACtCu5D,EAAmBC,EAAuBv5D,EAAOmB,GAGvDy1D,EAAY,GAAD,mBAAKwC,GAAc,YAAKE,IAAmB9C,GAUtD,IAPA,IAAMhP,EAAO4N,EAAWp1D,GAGlBw5D,EAAsBC,EAA0B15D,EAAOy2D,GACvDkD,EAAsBC,EAA0B55D,EAAOy2D,GAGpDp7D,EAAI,EAAGA,EAAIm7D,EAAYn7D,GAAK,EACnCi7D,EAAWmD,EAAqB,EAAGhD,GACnCH,EAAWqD,EAAqB,GAAIlD,GAItC,IAAMoD,EAAwBC,EAA4BrS,EAAMgP,GAGhEI,EAAY,GAAD,mBAAKgD,GAAqB,YAAKF,IAAsBlD,GAGhEsD,EAAgB/5D,EAAOynD,EAAMsQ,EAC/B,EAOMuB,EAAuB,SAACt5D,GAAK,OACjCA,EAAM0L,KAAI,SAACpM,GAAI,MAAM,CACnBq3D,KAAMa,EACN/lD,EAAGnS,EAAKy5D,WACRrnD,EAAGpS,EAAK6mB,WACT,GAAG,EAQAqzC,EAAyB,SAACv5D,EAAOmB,GACrC,IAAMm4D,EAAmB,GAGzB,IAAKn4D,EACH,OAAOm4D,EAST,IALA,IAAMS,EAAc54D,EAAOsK,KAAI,SAACvX,GAAI,OAClC8L,EAAMiI,QAAO,SAACjK,GAAI,OAAKA,EAAK+iB,eAAiB7sB,CAAI,GAAC,IAI3CkH,EAAI,EAAGA,EAAI2+D,EAAYr+D,OAAS,EAAGN,GAAK,EAAG,CAClD,IAO6B,EAPvBiU,EAAa0qD,EAAY3+D,GACzB4+D,EAAiBD,EAAY3+D,EAAI,GAGjC6+D,EAAe,CAAEl/D,GAAG,SAAD,OAAWK,GAAK8X,EAAG,EAAGC,EAAG,GAElD,cACmB9D,GAAU,IAA7B,2BAA+B,CAAC,IAArBrR,EAAI,QACbs7D,EAAiBp5D,KAAK,CACpBw2D,KAAMuB,EACNzmD,EAAGyoD,EACHxoD,EAAGzT,GAEP,CAEA,mCACiC,EADjC,cACmBg8D,GAAc,IAAjC,2BAAmC,CAAC,IAAzBh8D,EAAI,QACbs7D,EAAiBp5D,KAAK,CACpBw2D,KAAMuB,EACNzmD,EAAGxT,EACHyT,EAAGwoD,GAEP,CAAC,+BACH,CAEA,OAAOX,CACT,EASMG,EAA4B,SAAC15D,EAAOy2D,GAKxC,IAJA,IAAQyC,EAAWzC,EAAXyC,OACFO,EAAsB,GAGnBp+D,EAAI,EAAGA,EAAI2E,EAAMrE,OAAQN,GAAK,EAWrC,IAVA,IAAMo9D,EAAQz4D,EAAM3E,GACA8+D,EAAiC1B,EAA7CtyC,WAAiCi0C,EAAY3B,EAAxBM,WAGvBsB,EACJF,EAAQ56D,QAAQ5D,OAChBw+D,EAAQ36D,QAAQ7D,OAChBy+D,EAAQ76D,QAAQ5D,OAChBy+D,EAAQ56D,QAAQ7D,OAETw5C,EAAI95C,EAAI,EAAG85C,EAAIn1C,EAAMrE,OAAQw5C,GAAK,EAAG,CAC5C,IAAMujB,EAAQ14D,EAAMm1C,GACAmlB,EAAiC5B,EAA7CvyC,WAAiCo0C,EAAY7B,EAAxBK,WAG7B,KAAIoB,EAAQ5E,KAAOgF,EAAQhF,KAAO6E,EAAQ7E,KAAO+E,EAAQ/E,KAAzD,CAKA,IAAMiF,EACJF,EAAQ/6D,QAAQ5D,OAChB2+D,EAAQ96D,QAAQ7D,OAChB4+D,EAAQh7D,QAAQ5D,OAChB4+D,EAAQ/6D,QAAQ7D,OAElB89D,EAAoBt5D,KAAK,CACvBw2D,KAAM6B,EACNC,MAAOA,EACPC,MAAOA,EAEPC,YAA6B,GAAhBwB,EAAQxnD,MAAcumD,EAAyB,GAAhBoB,EAAQ3nD,MACpDimD,YAA6B,GAAhBwB,EAAQznD,MAAcumD,EAAyB,GAAhBqB,EAAQ5nD,MAEpD0lD,SAAU,EAAI/iD,KAAKmM,IAAI,GAAI44C,EAAcG,GAAe,IAjB1D,CAmBF,CAGF,OAAOf,CACT,EAUMG,EAA4B,SAAC55D,GAAK,OACtCA,EAAM0L,KAAI,gBAAGya,EAAU,EAAVA,WAAY4yC,EAAU,EAAVA,WAAU,MAAQ,CACzCpC,KAAMyB,EACN3mD,EAAG0U,EACHzU,EAAGqnD,EAEHV,SACE,GACA/iD,KAAKmM,IAAI,EAAG0E,EAAW3mB,QAAQ7D,OAASo9D,EAAWx5D,QAAQ5D,OAAS,GACvE,GAAG,EAOAm+D,EAA8B,SAACrS,EAAMgP,GAKzC,IAJA,IAAQyC,EAAWzC,EAAXyC,OACFW,EAAwB,GAGrBx+D,EAAI,EAAGA,EAAIosD,EAAK9rD,OAAQN,GAAK,EAAG,CACvC,IAAMo/D,EAAWhT,EAAKpsD,GAGtBo/D,EAAShvD,MAAK,SAACgG,EAAGC,GAAC,OAAK+jD,EAAQhkD,EAAE0B,EAAGzB,EAAEyB,EAAG1B,EAAEzW,GAAI0W,EAAE1W,GAAG,IAGrD,IAAK,IAAIm6C,EAAI,EAAGA,EAAIslB,EAAS9+D,OAAS,EAAGw5C,GAAK,EAAG,CAC/C,IAAMulB,EAAQD,EAAStlB,GACjBwlB,EAAQF,EAAStlB,EAAI,GAGrBylB,EAAUtlD,KAAKmM,IACnB,EACAi5C,EAAMl7D,QAAQ7D,OAAS++D,EAAMn7D,QAAQ5D,OAAS,GAE1Ck/D,EAAUvlD,KAAKmM,IACnB,EACAk5C,EAAMn7D,QAAQ7D,OAASg/D,EAAMp7D,QAAQ5D,OAAS,GAI1Cm/D,EAASxlD,KAAK8K,IAAI,GAAIw6C,EAAUC,EAAUpE,EAAU0C,SACpD4B,EAAQlG,EAAKiG,EAAS5B,EAAQA,GAEpCW,EAAsB15D,KAAK,CACzBw2D,KAAMqC,EACNvnD,EAAGipD,EACHhpD,EAAGipD,EACH1B,WAA0B,GAAdyB,EAAM/nD,MAAcooD,EAAsB,GAAdJ,EAAMhoD,OAElD,CACF,CAEA,OAAOknD,CACT,EAWME,EAAkB,SAAC/5D,EAAOynD,EAAMsQ,GAMpC,IAN2E,IAA/BpwC,EAAK,uDAAG,KAAMmtC,EAAI,uDAAG,IAC3DkG,EAAYC,EAAWj7D,GACvBk7D,EAAa5lD,KAAKC,MAAMwiD,EAASjD,GACnCqG,EAAiB,EAGZ9/D,EAAI,EAAGA,EAAIosD,EAAK9rD,OAAS,EAAGN,GAAK,EAAG,CAC3C,IAAM+/D,EAAUJ,EAAU3/D,IAAM,EAG1BggE,EAAUxG,EAAKuG,EAAUzzC,EAAQowC,EAAQmD,GAC/CC,GAAkBE,EAElB,IAC8B,EAD9B,cACmB5T,EAAKpsD,EAAI,IAAE,IAA9B,2BAAgC,CAAC,IAAtB4C,EAAI,QACbA,EAAKmV,GAAK+nD,CACZ,CAAC,+BACH,CACF,EAWMF,EAAa,SAACj7D,GAClB,IAEwB,EAFlBynD,EAAO,CAAC,EAAE,cAEGznD,GAAK,IAAxB,2BAA0B,CAAC,IAAhBV,EAAI,QAEPg8D,EACJhmD,KAAKimD,IAAIxG,EAAMz1D,EAAKy5D,WAAYz5D,EAAK6mB,YAAcwuC,GAAWA,EAE1D6G,EAAYl8D,EAAK6mB,WAAWovC,IAC5BkG,EAAYn8D,EAAKy5D,WAAWxD,IAAM,EAGxC9N,EAAK+T,GAAa/T,EAAK+T,IAAc,CAAC,EAAG,GACzC/T,EAAK+T,GAAW,IAAMF,EACtB7T,EAAK+T,GAAW,IAAM,EAElBC,IAAcD,IAEhB/T,EAAKgU,GAAahU,EAAKgU,IAAc,CAAC,EAAG,GACzChU,EAAKgU,GAAW,IAAMH,EACtB7T,EAAKgU,GAAW,IAAM,EAE1B,CAEA,+BACA,IAAK,IAAMlG,KAAO9N,EAChBA,EAAK8N,GAAO9N,EAAK8N,GAAK,IAAM9N,EAAK8N,GAAK,IAAM,GAG9C,OAAO/+D,OAAOkQ,OAAO+gD,EACvB,EC3SaiU,EAAU,SAAH,GAYb,IAKmB,EAhBxBz7D,EAAK,EAALA,MACAD,EAAK,EAALA,MACAk5D,EAAM,EAANA,OACAnB,EAAM,EAANA,OACA4D,EAAa,EAAbA,cACAC,EAAQ,EAARA,SACAC,EAAa,EAAbA,cACAC,EAAa,EAAbA,cACAC,EAAO,EAAPA,QACAC,EAAe,EAAfA,gBACAC,EAAe,EAAfA,gBAGMxU,EAAO4N,EAAWp1D,GAExB,cACmBA,GAAK,IAAxB,2BAA0B,CAAX,QAERT,QAAQiM,MAAK,SAACgG,EAAGC,GAAC,OACrB+jD,EACEV,EAAMrjD,EAAEyU,WAAYzU,EAAEqnD,YACtBhE,EAAMtjD,EAAE0U,WAAY1U,EAAEsnD,YACvB,GAEL,CAEA,qCACwB,EJ1BCtnD,EAAGC,EIyB5B,cACmB1R,GAAK,IAAxB,2BAA0B,CAAC,IAAhBV,EAAI,QACPO,EAASP,EAAK6mB,WACdzlB,EAASpB,EAAKy5D,WAGpBz5D,EAAK+mB,OAAS,GAkBd,IAfA,IAQM61C,EARmB5mD,KAAK8K,KAC3BvgB,EAAO8S,MAAQqpD,GAAmBn8D,EAAOL,QAAQ7D,OAClDqgE,IAIAn8D,EAAOL,QAAQjE,QAAQ+D,GAAsC,IAA7BO,EAAOL,QAAQ7D,OAAS,IAMtDwgE,EADe,CAAEhpD,EAAGtT,EAAOsT,EAAI+oD,EAAe9oD,EAAGvT,EAAOuT,GAInD/X,EAAIwE,EAAO01D,IAAM,EAAGl6D,EAAIqF,EAAO60D,IAAKl6D,GAAK,EAAG,CAenD,IAdA,IAAM+gE,EAAY3U,EAAKpsD,GAAG,GAGtBghE,EAAe,CAAElpD,EAAG8hD,EAASmH,GAAalD,EAAQ9lD,EAAGgpD,EAAUhpD,GAC/DkpD,EAAkBp7C,IAGhBq7C,EAAW,4BACVH,GAAS,IAAEjpD,EAAGotB,OAAOi8B,oBAAgB,mBACvC/U,EAAKpsD,IAAE,4BACL+gE,GAAS,IAAEjpD,EAAGotB,OAAOk8B,qBAInBphE,EAAI,EAAGA,EAAIkhE,EAAY5gE,OAAS,EAAGN,GAAK,EAAG,CAClD,IAAM4C,EAAOs+D,EAAYlhE,GACnBqhE,EAAWH,EAAYlhE,EAAI,GAC3BshE,EAAU1H,EAASyH,GAAYxH,EAAUj3D,GAG/C,KAAI0+D,EAAUhB,GAAd,CAIA,IAAMiB,EAAUtnD,KAAK8K,IAAI84C,EAAkB,GAAVyD,GAG3BE,EAAiB/G,EACrBqG,EAAahpD,EACbgpD,EAAa/oD,EACb8hD,EAAUj3D,GAAQ2+D,EAClBzH,EAAQl3D,GAAQ85D,EAChB9C,EAASyH,GAAYE,EACrBzH,EAAQuH,GAAY3E,GAGhB+E,GJtFarrD,EIsFS0qD,EAAahpD,EJtFnBzB,EIsFsBmrD,EAAe1pD,EJtF/BmC,KAAKimD,IAAI9pD,EAAIC,IIyFzC,GAAIorD,EAAWR,EACb,MAIEQ,EAAWR,IACbA,EAAkBQ,EAClBT,EAAeQ,EAxBjB,CA0BF,CAGA,IAAMxB,EAAUe,EAAU5oD,OAASukD,EACnCz4D,EAAK+mB,OAAOlmB,KAAK,CACfgT,EAAGkpD,EAAalpD,EAAI+oD,EACpB9oD,EAAGipD,EAAajpD,IAElB9T,EAAK+mB,OAAOlmB,KAAK,CACfgT,EAAGkpD,EAAalpD,EAAI+oD,EACpB9oD,EAAGipD,EAAajpD,EAAIioD,IAGtBc,EAAe,CACbhpD,EAAGkpD,EAAalpD,EAChBC,EAAGipD,EAAajpD,EAAIioD,EAExB,CACF,CAEA,qCACwB,EADxB,cACmBp7D,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QAEbA,EAAKuB,QAAQiM,MAAK,SAACgG,EAAGC,GAAC,OACrB+jD,EACEV,EAAMrjD,EAAEyU,WAAYzU,EAAE2U,OAAO,IAAM3U,EAAEqnD,YACrChE,EAAMtjD,EAAE0U,WAAY1U,EAAE4U,OAAO,IAAM5U,EAAEsnD,YACtC,IAGH96D,EAAKsB,QAAQkM,MAAK,SAACgG,EAAGC,GAAC,OACrB+jD,EACEV,EAAMtjD,EAAE4U,OAAO5U,EAAE4U,OAAO1qB,OAAS,IAAM8V,EAAE0U,WAAY1U,EAAEsnD,YACvDhE,EAAMrjD,EAAE2U,OAAO3U,EAAE2U,OAAO1qB,OAAS,IAAM+V,EAAEyU,WAAYzU,EAAEqnD,YACxD,GAEL,CAEA,qCACwB,EADxB,cACmB/4D,GAAK,IAAxB,2BAA0B,CAAC,IAyEC,EAzEjBV,GAAI,QACPO,GAASP,GAAK6mB,WACdzlB,GAASpB,GAAKy5D,WAGdgE,GAAmBznD,KAAK8K,KAC3BvgB,GAAO8S,MAAQqpD,GAAmBn8D,GAAOL,QAAQ7D,OAClDqgE,GAGIgB,GAAmB1nD,KAAK8K,KAC3B1f,GAAOiS,MAAQspD,GAAmBv7D,GAAOnB,QAAQ5D,OAClDsgE,GAGIgB,GACJp9D,GAAOL,QAAQjE,QAAQ+D,IAAsC,IAA7BO,GAAOL,QAAQ7D,OAAS,GACpDuhE,GACJx8D,GAAOnB,QAAQhE,QAAQ+D,IAAsC,IAA7BoB,GAAOnB,QAAQ5D,OAAS,GAEpDugE,GAAgBa,GAAmBE,GACnCE,GAAgBH,GAAmBE,GAGnCE,GACJxB,EACA/7D,GAAOL,QAAQ7D,QACd,EAAI2Z,KAAKimD,IAAI0B,IAAsBp9D,GAAOL,QAAQ7D,QAE/C0hE,GACJzB,EACAl7D,GAAOnB,QAAQ5D,QACd,EAAI2Z,KAAKimD,IAAI2B,IAAsBx8D,GAAOnB,QAAQ5D,QAG/C2hE,GAAa,CACjB,CACEnqD,EAAGtT,GAAOsT,EAAI+oD,GACd9oD,EAAGgiD,EAAWv1D,KAEhB,CACEsT,EAAGtT,GAAOsT,EAAI+oD,GACd9oD,EAAGgiD,EAAWv1D,IAAUg8D,GAE1B,CACE1oD,EAAGtT,GAAOsT,EAAI+oD,GACd9oD,EACEgiD,EAAWv1D,IAAUg8D,EAAgBvmD,KAAK8K,IAAIg9C,GAAerB,KAK7DwB,GAAa,CACjB,CACEpqD,EAAGzS,GAAOyS,EAAIgqD,GACd/pD,EAAG+hD,EAAQz0D,IAAUo7D,EAAgBxmD,KAAK8K,IAAIi9C,GAAetB,IAE/D,CACE5oD,EAAGzS,GAAOyS,EAAIgqD,GACd/pD,EAAG+hD,EAAQz0D,IAAUo7D,GAEvB,CACE3oD,EAAGzS,GAAOyS,EAAIgqD,GACd/pD,EAAG+hD,EAAQz0D,MAKT2lB,GAAM,UAAOi3C,GAAW,YAAIh+D,GAAK+mB,QAAWk3C,IAG9CC,GAAYn3C,GAAO,GAAGjT,EAAE,eAERiT,IAAM,IAA1B,6BAA4B,CAAC,IAAlBwvC,GAAK,QAEVA,GAAMziD,EAAIoqD,GACZ3H,GAAMziD,EAAIoqD,GAEVA,GAAY3H,GAAMziD,CAEtB,CAEA,mCACA9T,GAAK+mB,OAASA,EAChB,CAAC,iCACH,ECpPMtM,EAAiB,CACrBic,OAAQ,CACNkjC,OAAQ,GACRnB,OAAQ,IACRqB,YAAa,GACbD,QAAS,IACTlmD,QAAS,IACTujD,WAAY,IAEdkF,QAAS,CACPxC,OAAQ,GACRnB,OAAQ,GACR4D,cAAe,GACfC,SAAU,EACVC,cAAe,EACfC,cAAe,EACfC,QAAS,GACTC,gBAAiB,EACjBC,gBAAiB,KAuCRwB,EAAe,SAACx9D,EAAOD,GAClC,IAEwB,EAFlB09D,EAAW,CAAC,EAAE,cAEDz9D,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QACby/D,EAASz/D,EAAKjD,IAAMiD,EACpBA,EAAKuB,QAAU,GACfvB,EAAKsB,QAAU,EACjB,CAAC,mCAEuB,EAFvB,cAEkBS,GAAK,IAAxB,2BAA0B,CAAC,IAAhBV,EAAI,QACbA,EAAK6mB,WAAau3C,EAASp+D,EAAKO,QAChCP,EAAKy5D,WAAa2E,EAASp+D,EAAKoB,QAChCpB,EAAK6mB,WAAW3mB,QAAQW,KAAKb,GAC7BA,EAAKy5D,WAAWx5D,QAAQY,KAAKb,EAC/B,CAAC,+BACH,EAOMq+D,EAAmB,SAAC19D,EAAOmB,GAC/B,GAAIA,GAAUA,EAAOzF,OAAS,EAAG,CAE/B,IAC0B,EADpBiiE,EAAc,CAAC,EAAE,cACHx8D,GAAM,IAA1B,2BAA4B,CAAC,IAAlBhD,EAAK,QACdw/D,EAAYx/D,IAAS,CACvB,CAAC,+BAED,IAIwB,EAJlBy/D,EAAgB,SAAC5/D,GAAI,OAAK0N,QAAQ1N,GAAQA,EAAKG,SAASw/D,EAAa,EACrEE,EAAY18D,EAAOA,EAAOzF,OAAS,GAEzC,cACmBsE,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QAEP8/D,EAAYC,EAEhB//D,EAEAggE,EAEAC,EAEAL,GAIF5/D,EAAK+iB,aAAe+8C,EAAYA,EAAU3/D,MAAQ0/D,CACpD,CAAC,+BACH,CACF,EAOMG,EAAc,SAAChgE,GAAI,OAAKA,EAAKuB,QAAQkM,KAAI,SAACpM,GAAI,OAAKA,EAAKy5D,UAAU,GAAE,EAQpEmF,EAAqB,SAACxD,EAAOC,GAAK,OAAKD,EAAM5qD,KAAO6qD,EAAM7qD,IAAK,EAW/DkuD,EAAa,SAAbA,EAAc//D,EAAMkgE,EAAYz4C,EAAO04C,EAAQr8C,GAEnD,OAAIq8C,EAAOngE,GACFA,IAIT8jB,EAAUA,GAAW,CAAC,GACd9jB,EAAKjD,KAAM,EAEHmjE,EAAWlgE,GAExBiK,QAAO,SAACm2D,GAAS,OAAMt8C,EAAQs8C,EAAUrjE,GAAG,IAE5CyQ,KAAKia,GAELha,KAAI,SAAC2yD,GAAS,OACbL,EAAWK,EAAWF,EAAYz4C,EAAO04C,EAAQr8C,EAAQ,IAG1D7Z,OAAOk2D,GAEP3yD,KAAKia,GAGO,GACjB,EAQM3E,EAAS,SAAC9gB,EAAOgT,GACrB,IAKwB,EALlB4L,EAAO,CACXuB,IAAK,CAAEjN,EAAG+N,IAAU9N,EAAG8N,KACvBO,IAAK,CAAEtO,GAAI+N,IAAU9N,GAAI8N,MACzB,cAEiBjhB,GAAK,IAAxB,2BAA0B,CAAC,IAAhBhC,EAAI,QACPkV,EAAIlV,EAAKkV,EACTC,EAAInV,EAAKmV,EAEXD,EAAI0L,EAAKuB,IAAIjN,IACf0L,EAAKuB,IAAIjN,EAAIA,GAEXA,EAAI0L,EAAK4C,IAAItO,IACf0L,EAAK4C,IAAItO,EAAIA,GAEXC,EAAIyL,EAAKuB,IAAIhN,IACfyL,EAAKuB,IAAIhN,EAAIA,GAEXA,EAAIyL,EAAK4C,IAAIrO,IACfyL,EAAK4C,IAAIrO,EAAIA,EAEjB,CAAC,+BAOD,OALAyL,EAAKlM,MAAQkM,EAAK4C,IAAItO,EAAI0L,EAAKuB,IAAIjN,EAAI,EAAIF,EAC3C4L,EAAKrL,OAASqL,EAAK4C,IAAIrO,EAAIyL,EAAKuB,IAAIhN,EAAI,EAAIH,EAC5C4L,EAAKuB,IAAIjN,GAAKF,EACd4L,EAAKuB,IAAIhN,GAAKH,EAEP4L,CACT,ECxMa1mB,EAAW,SAAH,GAAkC,IAC/CyJ,EDkCa,SAAC3B,EAAOD,EAAOoB,GAAsC,IAA9B0W,EAAO,uDAAGiC,EACpD0jD,EAAax9D,EAAOD,GACpB29D,EAAiB19D,EAAOmB,GAExB40B,EAAO,aAAE/1B,QAAOD,QAAOoB,UAAW0W,EAAQke,SAC1C0lC,EAAQ,aAAEz7D,QAAOD,QAAOoB,UAAW0W,EAAQ4jD,UAE3C,IAAM78C,EAAOkC,EAAO9gB,EAAO6X,EAAQke,OAAO/iB,SAI1C,OAHAhT,EAAM/I,SAAQ,SAAC+G,GAAI,OAAK03D,EAAW13D,EAAM4gB,EAAKuB,IAAI,IAClDpgB,EAAM9I,SAAQ,SAACoI,GAAI,OAAKs2D,EAAWt2D,EAAMuf,EAAKuB,IAAI,IAE3C,CACLngB,QACAD,QACAoB,SACAyd,OAEJ,CCnDiB/nB,CADe,EAALmJ,MAAY,EAALD,MAAa,EAANoB,QAEvC,OAAO,2BACFQ,GAAM,IACTid,KAAK,2BAAMjd,EAAOid,MAAI,IAAEmB,QAAS,IAAKC,QAAS,OAEnD,C","file":"static/js/main.e8667778.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"graphNew\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(URL.createObjectURL(new Blob([\"!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\\\"undefined\\\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\\\"object\\\"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\\\"default\\\",{enumerable:!0,value:t}),2&e&&\\\"string\\\"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\\\"a\\\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\\\"./\\\",r(r.s=0)}([function(t,e,r){\\\"use strict\\\";function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function s(t,e){if(t){if(\\\"string\\\"===typeof t)return a(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return\\\"Object\\\"===r&&t.constructor&&(r=t.constructor.name),\\\"Map\\\"===r||\\\"Set\\\"===r?Array.from(t):\\\"Arguments\\\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(t,e):void 0}}function u(t,e){var r=\\\"undefined\\\"!==typeof Symbol&&t[Symbol.iterator]||t[\\\"@@iterator\\\"];if(!r){if(Array.isArray(t)||(r=s(t))||e&&t&&\\\"number\\\"===typeof t.length){r&&(t=r);var n=0,o=function(){};return{s:o,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:o}}throw new TypeError(\\\"Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\")}var i,a=!0,u=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return a=t.done,t},e:function(t){u=!0,i=t},f:function(){try{a||null==r.return||r.return()}finally{if(u)throw i}}}}r.r(e),r.d(e,\\\"graphNew\\\",(function(){return ut}));var c=.5*Math.PI,f=function(t,e){return Math.round(t/e)*e},p=function(t,e){return Math.atan2(t.y-e.y,t.x-e.x)},l=function(t){return t.x-.5*t.width},h=function(t){return t.x+.5*t.width},d=function(t){return t.y-.5*t.height},y=function(t){return t.y+.5*t.height},v=function(t){var e,r={},n=u(t);try{for(n.s();!(e=n.n()).done;){var o=e.value;r[o.y]=r[o.y]||[],r[o.y].push(o)}}catch(p){n.e(p)}finally{n.f()}var i=Object.keys(r).map((function(t){return parseFloat(t)}));i.sort((function(t,e){return t-e}));for(var a=i.map((function(t){return r[t]})),s=0;s<a.length;s+=1){a[s].sort((function(t,e){return m(t.x,e.x,t.id,e.id)}));var c,f=u(a[s]);try{for(f.s();!(c=f.n()).done;){c.value.row=s}}catch(p){f.e(p)}finally{f.f()}}return a},m=function t(e,r){for(var n=\\\"string\\\"===typeof e?e.localeCompare(r):e-r,o=arguments.length,i=new Array(o>2?o-2:0),a=2;a<o;a++)i[a-2]=arguments[a];return 0!==n||0===i.length?n:t.apply(void 0,i)},g=function(t,e){return t.x=t.x-e.x,t.y=t.y-e.y,t.order=t.x+9999*t.y,t},_=function(t,e){return t.points.forEach((function(t){t.x=t.x-e.x,t.y=t.y-e.y})),t},b=function(t,e,r,n,o,i){var a,s,u,c=o-r,f=i-n,p=(u=1,(a=((t-r)*c+(e-n)*f)/(c*c+f*f||1))<(s=0)?s:a>u?u:a);return{x:r+c*p,y:n+f*p,ax:r,ay:n,bx:o,by:i}};function x(t){return function(t){if(Array.isArray(t))return a(t)}(t)||function(t){if(\\\"undefined\\\"!==typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\\\"@@iterator\\\"])return Array.from(t)}(t)||s(t)||function(){throw new TypeError(\\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\")}()}function w(){return new M}var M=function(){function t(){this.index={},this.array=[]}return t.prototype.size=function(){return this.array.length},t.prototype.empty=function(){return 0===this.array.length},t.prototype.itemAt=function(t){return this.array[t]},t.prototype.contains=function(t){return void 0!==this.index[t.id()]},t.prototype.find=function(t){var e=this.index[t.id()];return void 0===e?void 0:this.array[e]},t.prototype.setDefault=function(t,e){var r=this.index[t.id()];if(void 0===r){var n=new S(t,e());return this.index[t.id()]=this.array.length,this.array.push(n),n}return this.array[r]},t.prototype.insert=function(t,e){var r=new S(t,e),n=this.index[t.id()];return void 0===n?(this.index[t.id()]=this.array.length,this.array.push(r)):this.array[n]=r,r},t.prototype.erase=function(t){var e=this.index[t.id()];if(void 0!==e){this.index[t.id()]=void 0;var r=this.array[e],n=this.array.pop();return r!==n&&(this.array[e]=n,this.index[n.first.id()]=e),r}},t.prototype.copy=function(){for(var e=new t,r=0;r<this.array.length;r++){var n=this.array[r].copy();e.array[r]=n,e.index[n.first.id()]=r}return e},t}(),S=function(){function t(t,e){this.first=t,this.second=e}return t.prototype.copy=function(){return new t(this.first,this.second)},t}(),E=function(){function t(t){void 0===t&&(t=\\\"\\\"),this._value=0,this._context=null,this._id=N++,this._name=t}return t.prototype.id=function(){return this._id},t.prototype.name=function(){return this._name},t.prototype.setName=function(t){this._name=t},t.prototype.context=function(){return this._context},t.prototype.setContext=function(t){this._context=t},t.prototype.value=function(){return this._value},t.prototype.setValue=function(t){this._value=t},t.prototype.plus=function(t){return new k(this,t)},t.prototype.minus=function(t){return new k(this,\\\"number\\\"===typeof t?-t:[-1,t])},t.prototype.multiply=function(t){return new k([t,this])},t.prototype.divide=function(t){return new k([1/t,this])},t.prototype.toJSON=function(){return{name:this._name,value:this._value}},t.prototype.toString=function(){return this._context+\\\"[\\\"+this._name+\\\":\\\"+this._value+\\\"]\\\"},t}(),N=0,k=function(){function t(){var t=A(arguments);this._terms=t.terms,this._constant=t.constant}return t.prototype.terms=function(){return this._terms},t.prototype.constant=function(){return this._constant},t.prototype.value=function(){for(var t=this._constant,e=0,r=this._terms.size();e<r;e++){var n=this._terms.itemAt(e);t+=n.first.value()*n.second}return t},t.prototype.plus=function(e){return new t(this,e)},t.prototype.minus=function(e){return new t(this,\\\"number\\\"===typeof e?-e:[-1,e])},t.prototype.multiply=function(e){return new t([e,this])},t.prototype.divide=function(e){return new t([1/e,this])},t.prototype.isConstant=function(){return 0==this._terms.size()},t.prototype.toString=function(){var t=this._terms.array.map((function(t){return t.second+\\\"*\\\"+t.first.toString()})).join(\\\" + \\\");return this.isConstant()||0===this._constant||(t+=\\\" + \\\"),t+=this._constant},t}();function A(t){for(var e=0,r=function(){return 0},n=w(),o=0,i=t.length;o<i;++o){var a=t[o];if(\\\"number\\\"===typeof a)e+=a;else if(a instanceof E)n.setDefault(a,r).second+=1;else if(a instanceof k){e+=a.constant();for(var s=0,u=(l=a.terms()).size();s<u;s++){var c=l.itemAt(s);n.setDefault(c.first,r).second+=c.second}}else{if(!(a instanceof Array))throw new Error(\\\"invalid Expression argument: \\\"+a);if(2!==a.length)throw new Error(\\\"array must have length 2\\\");var f=a[0],p=a[1];if(\\\"number\\\"!==typeof f)throw new Error(\\\"array item 0 must be a number\\\");if(p instanceof E)n.setDefault(p,r).second+=f;else{if(!(p instanceof k))throw new Error(\\\"array item 1 must be a variable or expression\\\");e+=p.constant()*f;var l;for(s=0,u=(l=p.terms()).size();s<u;s++){c=l.itemAt(s);n.setDefault(c.first,r).second+=c.second*f}}}}return{terms:n,constant:e}}var j,O=function(){function t(){}return t.create=function(t,e,r,n){void 0===n&&(n=1);var o=0;return o+=1e6*Math.max(0,Math.min(1e3,t*n)),o+=1e3*Math.max(0,Math.min(1e3,e*n)),o+=Math.max(0,Math.min(1e3,r*n))},t.clip=function(e){return Math.max(0,Math.min(t.required,e))},t.required=t.create(1e3,1e3,1e3),t.strong=t.create(1,0,0),t.medium=t.create(0,1,0),t.weak=t.create(0,0,1),t}();!function(t){t[t.Le=0]=\\\"Le\\\",t[t.Ge=1]=\\\"Ge\\\",t[t.Eq=2]=\\\"Eq\\\"}(j||(j={}));var z,P=function(){function t(t,e,r,n){void 0===n&&(n=O.required),this._id=C++,this._operator=e,this._strength=O.clip(n),this._expression=void 0===r&&t instanceof k?t:t.minus(r)}return t.prototype.id=function(){return this._id},t.prototype.expression=function(){return this._expression},t.prototype.op=function(){return this._operator},t.prototype.strength=function(){return this._strength},t.prototype.toString=function(){return this._expression.toString()+\\\" \\\"+[\\\"<=\\\",\\\">=\\\",\\\"=\\\"][this._operator]+\\\" 0 (\\\"+this._strength.toString()+\\\")\\\"},t}(),C=0,D=function(){function t(){this._cnMap=w(),this._rowMap=w(),this._varMap=w(),this._editMap=w(),this._infeasibleRows=[],this._objective=new q,this._artificial=null,this._idTick=0}return t.prototype.createConstraint=function(t,e,r,n){void 0===n&&(n=O.required);var o=new P(t,e,r,n);return this.addConstraint(o),o},t.prototype.addConstraint=function(t){if(void 0!==this._cnMap.find(t))throw new Error(\\\"duplicate constraint\\\");var e=this._createRow(t),r=e.row,n=e.tag,o=this._chooseSubject(r,n);if(o.type()===z.Invalid&&r.allDummies()){if(!I(r.constant()))throw new Error(\\\"unsatisfiable constraint\\\");o=n.marker}if(o.type()===z.Invalid){if(!this._addWithArtificialVariable(r))throw new Error(\\\"unsatisfiable constraint\\\")}else r.solveFor(o),this._substitute(o,r),this._rowMap.insert(o,r);this._cnMap.insert(t,n),this._optimize(this._objective)},t.prototype.removeConstraint=function(t){var e=this._cnMap.erase(t);if(void 0===e)throw new Error(\\\"unknown constraint\\\");this._removeConstraintEffects(t,e.second);var r=e.second.marker,n=this._rowMap.erase(r);if(void 0===n){var o=this._getMarkerLeavingSymbol(r);if(o.type()===z.Invalid)throw new Error(\\\"failed to find leaving row\\\");(n=this._rowMap.erase(o)).second.solveForEx(o,r),this._substitute(r,n.second)}this._optimize(this._objective)},t.prototype.hasConstraint=function(t){return this._cnMap.contains(t)},t.prototype.addEditVariable=function(t,e){if(void 0!==this._editMap.find(t))throw new Error(\\\"duplicate edit variable\\\");if((e=O.clip(e))===O.required)throw new Error(\\\"bad required strength\\\");var r=new k(t),n=new P(r,j.Eq,void 0,e);this.addConstraint(n);var o={tag:this._cnMap.find(n).second,constraint:n,constant:0};this._editMap.insert(t,o)},t.prototype.removeEditVariable=function(t){var e=this._editMap.erase(t);if(void 0===e)throw new Error(\\\"unknown edit variable\\\");this.removeConstraint(e.second.constraint)},t.prototype.hasEditVariable=function(t){return this._editMap.contains(t)},t.prototype.suggestValue=function(t,e){var r=this._editMap.find(t);if(void 0===r)throw new Error(\\\"unknown edit variable\\\");var n=this._rowMap,o=r.second,i=e-o.constant;o.constant=e;var a=o.tag.marker,s=n.find(a);if(void 0!==s)return s.second.add(-i)<0&&this._infeasibleRows.push(a),void this._dualOptimize();var u=o.tag.other;if(void 0!==(s=n.find(u)))return s.second.add(i)<0&&this._infeasibleRows.push(u),void this._dualOptimize();for(var c=0,f=n.size();c<f;++c){var p=n.itemAt(c),l=p.second,h=l.coefficientFor(a);0!==h&&l.add(i*h)<0&&p.first.type()!==z.External&&this._infeasibleRows.push(p.first)}this._dualOptimize()},t.prototype.updateVariables=function(){for(var t=this._varMap,e=this._rowMap,r=0,n=t.size();r<n;++r){var o=t.itemAt(r),i=e.find(o.second);void 0!==i?o.first.setValue(i.second.constant()):o.first.setValue(0)}},t.prototype._getVarSymbol=function(t){var e=this;return this._varMap.setDefault(t,(function(){return e._makeSymbol(z.External)})).second},t.prototype._createRow=function(t){for(var e=t.expression(),r=new q(e.constant()),n=e.terms(),o=0,i=n.size();o<i;++o){var a=n.itemAt(o);if(!I(a.second)){var s=this._getVarSymbol(a.first),u=this._rowMap.find(s);void 0!==u?r.insertRow(u.second,a.second):r.insertSymbol(s,a.second)}}var c=this._objective,f=t.strength(),p={marker:R,other:R};switch(t.op()){case j.Le:case j.Ge:var l=t.op()===j.Le?1:-1,h=this._makeSymbol(z.Slack);if(p.marker=h,r.insertSymbol(h,l),f<O.required){var d=this._makeSymbol(z.Error);p.other=d,r.insertSymbol(d,-l),c.insertSymbol(d,f)}break;case j.Eq:if(f<O.required){var y=this._makeSymbol(z.Error),v=this._makeSymbol(z.Error);p.marker=y,p.other=v,r.insertSymbol(y,-1),r.insertSymbol(v,1),c.insertSymbol(y,f),c.insertSymbol(v,f)}else{var m=this._makeSymbol(z.Dummy);p.marker=m,r.insertSymbol(m)}}return r.constant()<0&&r.reverseSign(),{row:r,tag:p}},t.prototype._chooseSubject=function(t,e){for(var r=t.cells(),n=0,o=r.size();n<o;++n){var i=r.itemAt(n);if(i.first.type()===z.External)return i.first}var a=e.marker.type();return(a===z.Slack||a===z.Error)&&t.coefficientFor(e.marker)<0?e.marker:((a=e.other.type())===z.Slack||a===z.Error)&&t.coefficientFor(e.other)<0?e.other:R},t.prototype._addWithArtificialVariable=function(t){var e=this._makeSymbol(z.Slack);this._rowMap.insert(e,t.copy()),this._artificial=t.copy(),this._optimize(this._artificial);var r=I(this._artificial.constant());this._artificial=null;var n=this._rowMap.erase(e);if(void 0!==n){var o=n.second;if(o.isConstant())return r;var i=this._anyPivotableSymbol(o);if(i.type()===z.Invalid)return!1;o.solveForEx(e,i),this._substitute(i,o),this._rowMap.insert(i,o)}for(var a=this._rowMap,s=0,u=a.size();s<u;++s)a.itemAt(s).second.removeSymbol(e);return this._objective.removeSymbol(e),r},t.prototype._substitute=function(t,e){for(var r=this._rowMap,n=0,o=r.size();n<o;++n){var i=r.itemAt(n);i.second.substitute(t,e),i.second.constant()<0&&i.first.type()!==z.External&&this._infeasibleRows.push(i.first)}this._objective.substitute(t,e),this._artificial&&this._artificial.substitute(t,e)},t.prototype._optimize=function(t){for(;;){var e=this._getEnteringSymbol(t);if(e.type()===z.Invalid)return;var r=this._getLeavingSymbol(e);if(r.type()===z.Invalid)throw new Error(\\\"the objective is unbounded\\\");var n=this._rowMap.erase(r).second;n.solveForEx(r,e),this._substitute(e,n),this._rowMap.insert(e,n)}},t.prototype._dualOptimize=function(){for(var t=this._rowMap,e=this._infeasibleRows;0!==e.length;){var r=e.pop(),n=t.find(r);if(void 0!==n&&n.second.constant()<0){var o=this._getDualEnteringSymbol(n.second);if(o.type()===z.Invalid)throw new Error(\\\"dual optimize failed\\\");var i=n.second;t.erase(r),i.solveForEx(r,o),this._substitute(o,i),t.insert(o,i)}}},t.prototype._getEnteringSymbol=function(t){for(var e=t.cells(),r=0,n=e.size();r<n;++r){var o=e.itemAt(r),i=o.first;if(o.second<0&&i.type()!==z.Dummy)return i}return R},t.prototype._getDualEnteringSymbol=function(t){for(var e=Number.MAX_VALUE,r=R,n=t.cells(),o=0,i=n.size();o<i;++o){var a=n.itemAt(o),s=a.first,u=a.second;if(u>0&&s.type()!==z.Dummy){var c=this._objective.coefficientFor(s)/u;c<e&&(e=c,r=s)}}return r},t.prototype._getLeavingSymbol=function(t){for(var e=Number.MAX_VALUE,r=R,n=this._rowMap,o=0,i=n.size();o<i;++o){var a=n.itemAt(o),s=a.first;if(s.type()!==z.External){var u=a.second,c=u.coefficientFor(t);if(c<0){var f=-u.constant()/c;f<e&&(e=f,r=s)}}}return r},t.prototype._getMarkerLeavingSymbol=function(t){for(var e=Number.MAX_VALUE,r=e,n=e,o=R,i=o,a=o,s=o,u=this._rowMap,c=0,f=u.size();c<f;++c){var p=u.itemAt(c),l=p.second,h=l.coefficientFor(t);if(0!==h){var d=p.first;if(d.type()===z.External)s=d;else if(h<0){(y=-l.constant()/h)<r&&(r=y,i=d)}else{var y;(y=l.constant()/h)<n&&(n=y,a=d)}}}return i!==o?i:a!==o?a:s},t.prototype._removeConstraintEffects=function(t,e){e.marker.type()===z.Error&&this._removeMarkerEffects(e.marker,t.strength()),e.other.type()===z.Error&&this._removeMarkerEffects(e.other,t.strength())},t.prototype._removeMarkerEffects=function(t,e){var r=this._rowMap.find(t);void 0!==r?this._objective.insertRow(r.second,-e):this._objective.insertSymbol(t,-e)},t.prototype._anyPivotableSymbol=function(t){for(var e=t.cells(),r=0,n=e.size();r<n;++r){var o=e.itemAt(r),i=o.first.type();if(i===z.Slack||i===z.Error)return o.first}return R},t.prototype._makeSymbol=function(t){return new F(t,this._idTick++)},t}();function I(t){return t<0?-t<1e-8:t<1e-8}!function(t){t[t.Invalid=0]=\\\"Invalid\\\",t[t.External=1]=\\\"External\\\",t[t.Slack=2]=\\\"Slack\\\",t[t.Error=3]=\\\"Error\\\",t[t.Dummy=4]=\\\"Dummy\\\"}(z||(z={}));var F=function(){function t(t,e){this._id=e,this._type=t}return t.prototype.id=function(){return this._id},t.prototype.type=function(){return this._type},t}(),R=new F(z.Invalid,-1),q=function(){function t(t){void 0===t&&(t=0),this._cellMap=w(),this._constant=t}return t.prototype.cells=function(){return this._cellMap},t.prototype.constant=function(){return this._constant},t.prototype.isConstant=function(){return this._cellMap.empty()},t.prototype.allDummies=function(){for(var t=this._cellMap,e=0,r=t.size();e<r;++e){if(t.itemAt(e).first.type()!==z.Dummy)return!1}return!0},t.prototype.copy=function(){var e=new t(this._constant);return e._cellMap=this._cellMap.copy(),e},t.prototype.add=function(t){return this._constant+=t},t.prototype.insertSymbol=function(t,e){void 0===e&&(e=1),I(this._cellMap.setDefault(t,(function(){return 0})).second+=e)&&this._cellMap.erase(t)},t.prototype.insertRow=function(t,e){void 0===e&&(e=1),this._constant+=t._constant*e;for(var r=t._cellMap,n=0,o=r.size();n<o;++n){var i=r.itemAt(n);this.insertSymbol(i.first,i.second*e)}},t.prototype.removeSymbol=function(t){this._cellMap.erase(t)},t.prototype.reverseSign=function(){this._constant=-this._constant;for(var t=this._cellMap,e=0,r=t.size();e<r;++e){var n=t.itemAt(e);n.second=-n.second}},t.prototype.solveFor=function(t){var e=this._cellMap,r=-1/e.erase(t).second;this._constant*=r;for(var n=0,o=e.size();n<o;++n)e.itemAt(n).second*=r},t.prototype.solveForEx=function(t,e){this.insertSymbol(t,-1),this.solveFor(e)},t.prototype.coefficientFor=function(t){var e=this._cellMap.find(t);return void 0!==e?e.second:0},t.prototype.substitute=function(t,e){var r=this._cellMap.erase(t);void 0!==r&&this.insertRow(e,r.second)},t}(),V=function(t,e,r){for(var n=0;n<e;n+=1){var o,i=u(t);try{for(i.s();!(o=i.n()).done;){var a=o.value;a.base.solve(a,r)}}catch(s){i.e(s)}finally{i.f()}}},X=function(t,e){var r,n=new D,o={},i=function(t,e){return\\\"\\\".concat(t.id,\\\"_\\\").concat(e)},a=function(t,e){var r=i(t,e);if(!o[r]){var n=o[r]=new E;n.property=e,n.obj=t}},s=u(t);try{for(s.s();!(r=s.n()).done;){var c=r.value;a(c.a,c.base.property),a(c.b,c.base.property)}}catch(m){s.e(m)}finally{s.f()}var f,p=0,l=u(t);try{for(l.s();!(f=l.n()).done;){var h=f.value;try{n.addConstraint(h.base.strict(h,e,o[i(h.a,h.base.property)],o[i(h.b,h.base.property)]))}catch(m){p+=1}}}catch(m){l.e(m)}finally{l.f()}p>0&&console.warn(\\\"Skipped \\\".concat(p,\\\" unsolvable constraints\\\")),n.updateVariables();for(var d=0,y=Object.values(o);d<y.length;d++){var v=y[d];v.obj[v.property]=v.value()}},L={property:\\\"y\\\",strict:function(t,e,r,n){return new P(r.minus(n),j.Ge,e.spaceY,O.required)}},T={property:\\\"y\\\",strict:function(t,e,r,n){return new P(r.minus(n),j.Ge,e.layerSpace,O.required)}},G={property:\\\"x\\\",solve:function(t){var e=t.a,r=t.b,n=t.strength*(e.x-r.x);e.x-=n,r.x+=n},strict:function(t,e,r,n){return new P(r.minus(n),j.Eq,0,O.create(1,0,0,t.strength))}},Y={property:\\\"x\\\",solve:function(t){var e=t.edgeA,r=t.edgeB,n=t.separationA,o=t.separationB,i=t.strength,a=i*((e.sourceNode.x-r.sourceNode.x-n)/n),s=i*((e.targetNode.x-r.targetNode.x-o)/o);e.sourceNode.x-=a,r.sourceNode.x+=a,e.targetNode.x-=s,r.targetNode.x+=s}},U={property:\\\"x\\\",strict:function(t,e,r,n){return new P(n.minus(r),j.Ge,t.separation,O.required)}},B=function(t){var e,r=t.nodes,n=t.edges,o=t.layers,i=t.spaceX,a=t.spaceY,s=t.spreadX,c=t.layerSpaceY,f=t.iterations,p=u(r);try{for(p.s();!(e=p.n()).done;){var l=e.value;l.x=0,l.y=0}}catch(M){p.e(M)}finally{p.f()}var h={spaceX:i,spaceY:a,spreadX:s,layerSpace:.5*(a+c)},d=W(n),y=J(r,o);X([].concat(x(d),x(y)),h);for(var m=v(r),g=$(n,h),_=H(n,h),b=0;b<f;b+=1)V(g,1,h),V(_,50,h);var w=K(m,h);X([].concat(x(w),x(_)),h),Q(n,m,a)},W=function(t){return t.map((function(t){return{base:L,a:t.targetNode,b:t.sourceNode}}))},J=function(t,e){var r=[];if(!e)return r;for(var n=e.map((function(e){return t.filter((function(t){return t.nearestLayer===e}))})),o=0;o<n.length-1;o+=1){var i,a=n[o],s=n[o+1],c={id:\\\"layer-\\\".concat(o),x:0,y:0},f=u(a);try{for(f.s();!(i=f.n()).done;){var p=i.value;r.push({base:T,a:c,b:p})}}catch(y){f.e(y)}finally{f.f()}var l,h=u(s);try{for(h.s();!(l=h.n()).done;){var d=l.value;r.push({base:T,a:d,b:c})}}catch(y){h.e(y)}finally{h.f()}}return r},$=function(t,e){for(var r=e.spaceX,n=[],o=0;o<t.length;o+=1)for(var i=t[o],a=i.sourceNode,s=i.targetNode,u=a.sources.length+a.targets.length+s.sources.length+s.targets.length,c=o+1;c<t.length;c+=1){var f=t[c],p=f.sourceNode,l=f.targetNode;if(!(a.row>=l.row||s.row<=p.row)){var h=p.sources.length+p.targets.length+l.sources.length+l.targets.length;n.push({base:Y,edgeA:i,edgeB:f,separationA:.5*a.width+r+.5*p.width,separationB:.5*s.width+r+.5*l.width,strength:1/Math.max(1,(u+h)/4)})}}return n},H=function(t){return t.map((function(t){var e=t.sourceNode,r=t.targetNode;return{base:G,a:e,b:r,strength:.6/Math.max(1,e.targets.length+r.sources.length-2)}}))},K=function(t,e){for(var r=e.spaceX,n=[],o=0;o<t.length;o+=1){var i=t[o];i.sort((function(t,e){return m(t.x,e.x,t.id,e.id)}));for(var a=0;a<i.length-1;a+=1){var s=i[a],u=i[a+1],c=Math.max(1,s.targets.length+s.sources.length-2),p=Math.max(1,u.targets.length+u.sources.length-2),l=Math.min(10,c*p*e.spreadX),h=f(l*r,r);n.push({base:U,a:s,b:u,separation:.5*s.width+h+.5*u.width})}}return n},Q=function(t,e,r){for(var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1.25,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.25,i=Z(t),a=Math.round(r*o),s=0,c=0;c<e.length-1;c+=1){var p=i[c]||0,l=f(p*n*r,a);s+=l;var h,d=u(e[c+1]);try{for(d.s();!(h=d.n()).done;){var y=h.value;y.y+=s}}catch(v){d.e(v)}finally{d.f()}}},Z=function(t){var e,r={},n=u(t);try{for(n.s();!(e=n.n()).done;){var o=e.value,i=Math.abs(p(o.targetNode,o.sourceNode)-c)/c,a=o.sourceNode.row,s=o.targetNode.row-1;r[a]=r[a]||[0,0],r[a][0]+=i,r[a][1]+=1,s!==a&&(r[s]=r[s]||[0,0],r[s][0]+=i,r[s][1]+=1)}}catch(l){n.e(l)}finally{n.f()}for(var f in r)r[f]=r[f][0]/(r[f][1]||1);return Object.values(r)},tt=function(t){var e,r=t.nodes,n=t.edges,o=t.spaceX,a=t.spaceY,s=t.minPassageGap,c=t.stemUnit,f=t.stemMinSource,g=t.stemMinTarget,_=t.stemMax,w=t.stemSpaceSource,M=t.stemSpaceTarget,S=v(r),E=u(r);try{for(E.s();!(e=E.n()).done;){e.value.targets.sort((function(t,e){return m(p(e.sourceNode,e.targetNode),p(t.sourceNode,t.targetNode))}))}}catch(mt){E.e(mt)}finally{E.f()}var N,k,A,j=u(n);try{for(j.s();!(N=j.n()).done;){var O=N.value,z=O.sourceNode,P=O.targetNode;O.points=[];for(var C=Math.min((z.width-w)/z.targets.length,w)*(z.targets.indexOf(O)-.5*(z.targets.length-1)),D={x:z.x+C,y:z.y},I=z.row+1;I<P.row;I+=1){for(var F=S[I][0],R={x:l(F)-o,y:F.y},q=1/0,V=[i(i({},F),{},{x:Number.MIN_SAFE_INTEGER})].concat(x(S[I]),[i(i({},F),{},{x:Number.MAX_SAFE_INTEGER})]),X=0;X<V.length-1;X+=1){var L=V[X],T=V[X+1],G=l(T)-h(L);if(!(G<s)){var Y=Math.min(o,.5*G),U=b(D.x,D.y,h(L)+Y,d(L)-a,l(T)-Y,d(T)-a),B=(k=D.x,A=U.x,Math.abs(k-A));if(B>q)break;B<q&&(q=B,R=U)}}var W=F.height+a;O.points.push({x:R.x+C,y:R.y}),O.points.push({x:R.x+C,y:R.y+W}),D={x:R.x,y:R.y+W}}}}catch(mt){j.e(mt)}finally{j.f()}var J,$=u(r);try{for($.s();!(J=$.n()).done;){var H=J.value;H.targets.sort((function(t,e){return m(p(e.sourceNode,e.points[0]||e.targetNode),p(t.sourceNode,t.points[0]||t.targetNode))})),H.sources.sort((function(t,e){return m(p(t.points[t.points.length-1]||t.sourceNode,t.targetNode),p(e.points[e.points.length-1]||e.sourceNode,e.targetNode))}))}}catch(mt){$.e(mt)}finally{$.f()}var K,Q=u(n);try{for(Q.s();!(K=Q.n()).done;){var Z,tt=K.value,et=tt.sourceNode,rt=tt.targetNode,nt=Math.min((et.width-w)/et.targets.length,w),ot=Math.min((rt.width-M)/rt.sources.length,M),it=et.targets.indexOf(tt)-.5*(et.targets.length-1),at=rt.sources.indexOf(tt)-.5*(rt.sources.length-1),st=nt*it,ut=ot*at,ct=c*et.targets.length*(1-Math.abs(it)/et.targets.length),ft=c*rt.sources.length*(1-Math.abs(at)/rt.sources.length),pt=[{x:et.x+st,y:y(et)},{x:et.x+st,y:y(et)+f},{x:et.x+st,y:y(et)+f+Math.min(ct,_)}],lt=[{x:rt.x+ut,y:d(rt)-g-Math.min(ft,_)},{x:rt.x+ut,y:d(rt)-g},{x:rt.x+ut,y:d(rt)}],ht=[].concat(pt,x(tt.points),lt),dt=ht[0].y,yt=u(ht);try{for(yt.s();!(Z=yt.n()).done;){var vt=Z.value;vt.y<dt?vt.y=dt:dt=vt.y}}catch(mt){yt.e(mt)}finally{yt.f()}tt.points=ht}}catch(mt){Q.e(mt)}finally{Q.f()}},et={layout:{spaceX:14,spaceY:110,layerSpaceY:55,spreadX:2.2,padding:100,iterations:25},routing:{spaceX:26,spaceY:28,minPassageGap:40,stemUnit:8,stemMinSource:5,stemMinTarget:5,stemMax:20,stemSpaceSource:6,stemSpaceTarget:10}},rt=function(t,e){var r,n={},o=u(t);try{for(o.s();!(r=o.n()).done;){var i=r.value;n[i.id]=i,i.targets=[],i.sources=[]}}catch(f){o.e(f)}finally{o.f()}var a,s=u(e);try{for(s.s();!(a=s.n()).done;){var c=a.value;c.sourceNode=n[c.source],c.targetNode=n[c.target],c.sourceNode.targets.push(c),c.targetNode.sources.push(c)}}catch(f){s.e(f)}finally{s.f()}},nt=function(t,e){if(e&&e.length>0){var r,n={},o=u(e);try{for(o.s();!(r=o.n()).done;){var i=r.value;n[i]=!0}}catch(h){o.e(h)}finally{o.f()}var a,s=function(t){return Boolean(t&&t.layer in n)},c=e[e.length-1],f=u(t);try{for(f.s();!(a=f.n()).done;){var p=a.value,l=at(p,ot,it,s);p.nearestLayer=l?l.layer:c}}catch(h){f.e(h)}finally{f.f()}}},ot=function(t){return t.targets.map((function(t){return t.targetNode}))},it=function(t,e){return t.rank-e.rank},at=function t(e,r,n,o,i){return o(e)?e:((i=i||{})[e.id]=!0,r(e).filter((function(t){return!i[t.id]})).sort(n).map((function(e){return t(e,r,n,o,i)})).filter(o).sort(n)[0])},st=function(t,e){var r,n={min:{x:1/0,y:1/0},max:{x:-1/0,y:-1/0}},o=u(t);try{for(o.s();!(r=o.n()).done;){var i=r.value,a=i.x,s=i.y;a<n.min.x&&(n.min.x=a),a>n.max.x&&(n.max.x=a),s<n.min.y&&(n.min.y=s),s>n.max.y&&(n.max.y=s)}}catch(c){o.e(c)}finally{o.f()}return n.width=n.max.x-n.min.x+2*e,n.height=n.max.y-n.min.y+2*e,n.min.x-=e,n.min.y-=e,n},ut=function(t){var e=function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:et;rt(t,e),nt(t,r),B(i({nodes:t,edges:e,layers:r},n.layout)),tt(i({nodes:t,edges:e,layers:r},n.routing));var o=st(t,n.layout.padding);return t.forEach((function(t){return g(t,o.min)})),e.forEach((function(t){return _(t,o.min)})),{nodes:t,edges:e,layers:r,size:o}}(t.nodes,t.edges,t.layers);return i(i({},e),{},{size:i(i({},e.size),{},{marginx:100,marginy:100})})};addEventListener(\\\"message\\\",(function(t){var r,n=t.data,o=n.type,i=n.method,a=n.id,s=n.params;\\\"RPC\\\"===o&&i&&((r=e[i])?Promise.resolve().then((function(){return r.apply(e,s)})):Promise.reject(\\\"No such method\\\")).then((function(t){postMessage({type:\\\"RPC\\\",id:a,result:t})})).catch((function(t){var e={message:t};t.stack&&(e.message=t.message,e.stack=t.stack,e.name=t.name),postMessage({type:\\\"RPC\\\",id:a,error:e})}))})),postMessage({type:\\\"RPC\\\",method:\\\"ready\\\"})}]);\\n//# sourceMappingURL=5f6a049c22ec275f2967.worker.js.map\"])), { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export const RESET_DATA = 'RESET_DATA';\n\n/**\n * Overwrite the existing data store when receiving new data from upstream\n * @param {Object} data New pipeline state data\n */\nexport function resetData(data) {\n  return {\n    type: RESET_DATA,\n    data,\n  };\n}\n\nexport const TOGGLE_LAYERS = 'TOGGLE_LAYERS';\n\n/**\n * Toggle whether to show layers on/off\n * @param {Boolean} visible True if layers are to be shown\n */\nexport function toggleLayers(visible) {\n  return {\n    type: TOGGLE_LAYERS,\n    visible,\n  };\n}\n\nexport const TOGGLE_EXPORT_MODAL = 'TOGGLE_EXPORT_MODAL';\n\n/**\n * Toggle whether to show the export modal\n * @param {Boolean} visible True if the modal is to be shown\n */\nexport function toggleExportModal(visible) {\n  return {\n    type: TOGGLE_EXPORT_MODAL,\n    visible,\n  };\n}\n\nexport const TOGGLE_SETTINGS_MODAL = 'TOGGLE_SETTINGS_MODAL';\n\n/**\n * Toggle whether to show the settings modal\n * @param {Boolean} visible True if the modal is to be shown\n */\nexport function toggleSettingsModal(visible) {\n  return {\n    type: TOGGLE_SETTINGS_MODAL,\n    visible,\n  };\n}\n\nexport const TOGGLE_METADATA_MODAL = 'TOGGLE_METADATA_MODAL';\n\n/**\n * Toggle whether to show the plot modal\n * @param {Boolean} visible True if the modal is to be shown\n */\nexport function togglePlotModal(visible) {\n  return {\n    type: TOGGLE_METADATA_MODAL,\n    visible,\n  };\n}\n\nexport const TOGGLE_GRAPH = 'TOGGLE_GRAPH';\n\n/**\n * Toggle graph visible/hidden\n * @param {Boolean} visible Whether graph is shown\n */\nexport function toggleGraph(visible) {\n  return {\n    type: TOGGLE_GRAPH,\n    visible,\n  };\n}\n\nexport const TOGGLE_TEXT_LABELS = 'TOGGLE_TEXT_LABELS';\n\n/**\n * Toggle whether to show text labels on/off\n * @param {Boolean} textLabels True if text labels are to be shown\n */\nexport function toggleTextLabels(textLabels) {\n  return {\n    type: TOGGLE_TEXT_LABELS,\n    textLabels,\n  };\n}\n\nexport const TOGGLE_PRETTY_NAME = 'TOGGLE_PRETTY_NAME';\n\n/**\n * Toggle whether to show pretty name on/off\n * @param {Boolean} prettyName True if pretty name is to be shown\n */\nexport function togglePrettyName(prettyName) {\n  return {\n    type: TOGGLE_PRETTY_NAME,\n    prettyName,\n  };\n}\n\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\n\n/**\n * Toggle sidebar visible/hidden\n * @param {Boolean} visible Whether sidebar nav is shown\n */\nexport function toggleSidebar(visible) {\n  return {\n    type: TOGGLE_SIDEBAR,\n    visible,\n  };\n}\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n\n/**\n * Switch between light/dark theme\n * @param {String} theme Theme name\n */\nexport function toggleTheme(theme) {\n  return {\n    type: TOGGLE_THEME,\n    theme,\n  };\n}\n\nexport const UPDATE_CHART_SIZE = 'UPDATE_CHART_SIZE';\n\n/**\n * Store the chart size, based on the window\n * @param {Object} chartSize getBoundingClientRect value\n */\nexport function updateChartSize(chartSize) {\n  return {\n    type: UPDATE_CHART_SIZE,\n    chartSize,\n  };\n}\n\nexport const UPDATE_ZOOM = 'UPDATE_ZOOM';\n\n/**\n * Store the zoom\n * @param {Object} zoom The zoom transform\n */\nexport function updateZoom(zoom) {\n  return {\n    type: UPDATE_ZOOM,\n    zoom,\n  };\n}\n\nexport const TOGGLE_MINIMAP = 'TOGGLE_MINIMAP';\n\n/**\n * Toggle mini map\n * @param {String} visible Visibility status\n */\nexport function toggleMiniMap(visible) {\n  return {\n    type: TOGGLE_MINIMAP,\n    visible,\n  };\n}\n\nexport const CHANGE_FLAG = 'CHANGE_FLAG';\n\n/**\n * Change the given feature flag\n * @param {String} name The flag name\n * @param {Value} value The value to set\n */\nexport function changeFlag(name, value) {\n  return {\n    type: CHANGE_FLAG,\n    name,\n    value,\n  };\n}\n\nexport const TOGGLE_IGNORE_LARGE_WARNING = 'TOGGLE_IGNORE_LARGE_WARNING';\n\n/**\n * Resets the ignoreLargeWarning field in the state indicating user preference to enable large graphs to load\n * @param {Boolean} ignoreLargeWarning\n */\nexport function toggleIgnoreLargeWarning(ignoreLargeWarning) {\n  return {\n    type: TOGGLE_IGNORE_LARGE_WARNING,\n    ignoreLargeWarning,\n  };\n}\n\nexport const TOGGLE_CODE = 'TOGGLE_CODE';\n\n/**\n * Toggle code panel\n * @param {String} visible Visibility status\n */\nexport function toggleCode(visible) {\n  return {\n    type: TOGGLE_CODE,\n    visible,\n  };\n}\n\nexport const TOGGLE_PARAMETERS_HOVERED = 'TOGGLE_PARAMETERS_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {Boolean} hoveredParameters True if parameters heading in the sidebar has been hovered\n */\nexport function toggleParametersHovered(hoveredParameters) {\n  return {\n    type: TOGGLE_PARAMETERS_HOVERED,\n    hoveredParameters,\n  };\n}\n\nexport const TOGGLE_MODULAR_PIPELINE_FOCUS_MODE =\n  'TOGGLE_MODULAR_PIPELINE_FOCUS_MODE';\n\n/**\n * Update the value of the selected modular pipeline under focus mode\n * @param {Object} modularPipeline The selected modular pipeline for focus mode\n */\nexport function toggleFocusMode(modularPipeline) {\n  return {\n    type: TOGGLE_MODULAR_PIPELINE_FOCUS_MODE,\n    modularPipeline,\n  };\n}\n\nexport const TOGGLE_HOVERED_FOCUS_MODE = 'TOGGLE_HOVERED_FOCUS_MODE';\n\n/**\n * Update the value of the of the currently-active hovered node from focus mode\n * @param {Boolean} hoveredFocusMode True if FocudModeIcon in the sidebar has been hovered\n */\nexport function toggleHoveredFocusMode(hoveredFocusMode) {\n  return {\n    type: TOGGLE_HOVERED_FOCUS_MODE,\n    hoveredFocusMode,\n  };\n}\n","import { CHANGE_FLAG } from '../actions';\n\nfunction flagsReducer(flagsState = {}, action) {\n  switch (action.type) {\n    case CHANGE_FLAG: {\n      return Object.assign({}, flagsState, {\n        [action.name]: action.value,\n      });\n    }\n\n    default:\n      return flagsState;\n  }\n}\n\nexport default flagsReducer;\n","// This file contains any web-workers used in the app, which are inlined by\n// webpack + workerize-loader, so that they can be used in the exported library\n// without needing any special configuration on the part of the consumer.\n// Web workers don't work in Jest, so in a test environment we directly import\n// them instead, and then mock up a faux-worker function\n\n/* eslint-disable import/no-webpack-loader-syntax */\n\n// Check for test environment\nconst isTest = typeof jest !== 'undefined';\n\n// Conditionally load task via web worker only in non-test env\nconst graphWorker = isTest\n  ? require('./graph')\n  : require('workerize-loader?inline!./graph');\n\n/**\n * Emulate a web worker for testing purposes\n */\nconst createMockWorker = (worker) => {\n  if (!isTest) {\n    return worker;\n  }\n  return () => {\n    const mockWorker = {\n      terminate: () => {},\n    };\n    Object.keys(worker).forEach((name) => {\n      mockWorker[name] = (payload) =>\n        new Promise((resolve) => resolve(worker[name](payload)));\n    });\n    return mockWorker;\n  };\n};\n\nexport const graph = createMockWorker(graphWorker);\n\n/**\n * Manage the worker, avoiding race conditions by terminating running\n * processes when a new request is made, and reinitialising the instance.\n * Example getJob: (instance, payload) => instance.job(payload)\n * @param {Function} worker Init worker and return job functions\n * @param {Function} getJob Callback to select correct job function\n * @return {Function} Function which returns a promise\n */\nexport function preventWorkerQueues(worker, getJob) {\n  let instance = worker();\n  let running = false;\n\n  return (payload) => {\n    if (running) {\n      // If worker is already processing a job, cancel it and restart\n      instance.terminate();\n      instance = worker();\n    }\n    running = true;\n\n    return getJob(instance, payload).then((response) => {\n      running = false;\n      return response;\n    });\n  };\n}\n","import { graph as worker, preventWorkerQueues } from '../utils/worker';\nimport { toggleGraph } from './index';\n\nexport const TOGGLE_GRAPH_LOADING = 'TOGGLE_GRAPH_LOADING';\n\n/**\n * Toggle whether to display the loading spinner\n * @param {Boolean} loading\n */\nexport function toggleLoading(loading) {\n  return {\n    type: TOGGLE_GRAPH_LOADING,\n    loading,\n  };\n}\n\nexport const UPDATE_GRAPH_LAYOUT = 'UPDATE_GRAPH_LAYOUT';\n\n/**\n * Update the graph layout object\n * @param {Object} graph\n */\nexport function updateGraph(graph) {\n  return {\n    type: UPDATE_GRAPH_LAYOUT,\n    graph,\n  };\n}\n\n/**\n * Assign layout engine to use based on the newgraph\n * @param {Object} instance Worker parent instance\n * @param {Object} state A subset of main state\n * @return {Function} Promise function\n */\nconst layout = (instance, state) => instance.graphNew(state);\n\n// Prepare new layout worker\nconst layoutWorker = preventWorkerQueues(worker, layout);\n\n/**\n * Async action to calculate graph layout in a web worker\n * whiled displaying a loading spinner\n * @param {Object} graphState A subset of main state\n * @return {Function} A promise that resolves when the calculation is done\n */\nexport function calculateGraph(graphState) {\n  if (!graphState) {\n    return updateGraph(graphState);\n  }\n  return async function (dispatch) {\n    dispatch(toggleLoading(true));\n    const graph = await layoutWorker(graphState);\n    dispatch(toggleGraph(true));\n    dispatch(toggleLoading(false));\n    return dispatch(updateGraph(graph));\n  };\n}\n","import { UPDATE_GRAPH_LAYOUT } from '../actions/graph';\n\nfunction nodeReducer(graphState = {}, action) {\n  const updateState = (newState) => Object.assign({}, graphState, newState);\n\n  switch (action.type) {\n    case UPDATE_GRAPH_LAYOUT: {\n      return updateState(action.graph);\n    }\n\n    default:\n      return graphState;\n  }\n}\n\nexport default nodeReducer;\n","import { TOGGLE_LAYERS } from '../actions';\n\nfunction layerReducer(layerState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_LAYERS: {\n      return Object.assign({}, layerState, {\n        visible: action.visible,\n      });\n    }\n\n    default:\n      return layerState;\n  }\n}\n\nexport default layerReducer;\n","export const pathRoot = './api';\n\nexport const localStorageName = 'KedroViz';\n\n// These values are used in both SCSS and JS, and we don't have variable-sharing\n// across Sass and JavaScript, so they're defined in two places. If you update their\n// value here, please also update their corresponding value in src/styles/_variables.scss\nexport const globalToolbarWidth = 80;\n\nexport const metaSidebarWidth = {\n  open: 400,\n  closed: 0,\n};\n\nexport const sidebarWidth = {\n  open: 400 + globalToolbarWidth,\n  closed: 56 + globalToolbarWidth,\n  breakpoint: 700,\n};\n\nexport const codeSidebarWidth = {\n  open: 480,\n  closed: 0,\n};\n\n// these colours variables come from styles/variables';\nconst slate600 = '#0e222d';\nconst slate200 = '#21333e';\n\nconst grey200 = '#d5d8da';\nconst grey100 = '#eaebed';\n\nexport const experimentTrackingLazyLoadingColours = {\n  backgroundLightTheme: grey200,\n  foregroundLightTheme: grey100,\n  backgroundDarkTheme: slate600,\n  foregroundDarkTheme: slate200,\n};\n\nexport const metricLimit = 50;\n\nexport const experimentTrackingLazyLoadingGap = 38;\n\nexport const chartMinWidthScale = 0.25;\n\n// Determine the number of nodes and edges in pipeline to trigger size warning\nexport const largeGraphThreshold = 1000;\n\n// Remember to update the 'Flags' section in the README when updating these:\nexport const flags = {\n  sizewarning: {\n    name: 'Size warning',\n    description: 'Show a warning before rendering very large graphs',\n    default: true,\n    icon: '🐳',\n  },\n  expandAllPipelines: {\n    name: 'Expand all modular pipelines',\n    description: 'Expand all modular pipelines on first load',\n    default: false,\n    icon: '🔛',\n  },\n};\n\nexport const settings = {\n  prettyName: {\n    name: 'Pretty name',\n    description: 'Display a formatted name for the kedro nodes',\n    default: true,\n  },\n};\n\n// Sidebar groups is an ordered map of { id: label }\nexport const sidebarGroups = {\n  elementType: 'Element types',\n  tag: 'Tags',\n};\n\n// Sidebar element types is an ordered map of { id: label }\nexport const sidebarElementTypes = {\n  task: 'Nodes',\n  data: 'Datasets',\n  parameters: 'Parameters',\n};\n\nexport const shortTypeMapping = {\n  'plotly.plotly_dataset.PlotlyDataSet': 'plotly',\n  'plotly.json_dataset.JSONDataSet': 'plotly',\n  'matplotlib.matplotlib_writer.MatplotlibWriter': 'image',\n  'tracking.json_dataset.JSONDataSet': 'tracking',\n  'tracking.metrics_dataset.MetricsDataSet': 'tracking',\n};\n\n// URL parameters for each element/section\nexport const params = {\n  focused: 'focused_id=',\n  selected: 'selected_id=',\n  pipeline: 'pipeline_id=',\n};\n\nconst activePipeline = `${params.pipeline}:pipelineId`;\n\nexport const routes = {\n  flowchart: {\n    main: '/',\n    focusedNode: `/?${activePipeline}&${params.focused}:id`,\n    selectedNode: `/?${activePipeline}&${params.selected}:id`,\n  },\n};\n","//--- Useful JS utility functions ---//\nimport { pathRoot } from '../config';\n\n/**\n * Loop through an array and output to an object\n * @param {Array} array\n * @param {Function} callback\n */\nexport const arrayToObject = (array, callback) => {\n  const newObject = {};\n  array.forEach((key) => {\n    newObject[key] = callback(key);\n  });\n  return newObject;\n};\n\n/**\n * Determine the endpoint URL for loading different data types\n * @param {String} type Data type\n * @param {String=} id Endpoint identifier e.g. pipeline ID\n */\nexport const getUrl = (type, id) => {\n  switch (type) {\n    case 'main':\n      return [pathRoot, 'main'].join('/');\n    case 'pipeline':\n      if (!id) {\n        throw new Error('No pipeline ID provided');\n      }\n      return [pathRoot, 'pipelines', id].join('/');\n    case 'nodes':\n      if (!id) {\n        throw new Error('No node ID provided');\n      }\n      return [pathRoot, 'nodes', id].join('/');\n    default:\n      throw new Error('Unknown URL type');\n  }\n};\n\n/**\n * Filter duplicate values from an array\n * @param {any} d Datum\n * @param {Number} i Index\n * @param {Array} arr The array to remove duplicate values from\n */\nexport const unique = (d, i, arr) => arr.indexOf(d) === i;\n\n/**\n * Returns true if any of the given props are different between given objects.\n * Only shallow changes are detected.\n * @param {Array} props The prop names to check\n * @param {Object} objectA The first object\n * @param {Object} objectB The second object\n * @returns {Boolean} True if any prop changed else false\n */\nexport const changed = (props, objectA, objectB) => {\n  return (\n    objectA && objectB && props.some((prop) => objectA[prop] !== objectB[prop])\n  );\n};\n\n/**\n * Replace any parts of a string that match the keys in the toReplace object\n * @param {String} str The string to check\n * @param {Object} toReplace The object of strings to replace and their replacements\n * @returns {String} The string with or without replaced values\n */\nexport const replaceMatches = (str, toReplace) => {\n  if (str?.length > 0) {\n    const regex = new RegExp(Object.keys(toReplace).join('|'), 'gi');\n\n    return str.replace(regex, (matched) => {\n      return toReplace[matched];\n    });\n  } else {\n    return str;\n  }\n};\n","import { json } from 'd3-fetch';\nimport { getUrl } from '../utils';\n\n/**\n * Asynchronously load and parse data from json file using d3-fetch.\n * Throws an error if the request for `main` fails.\n * For requests other than `main`, returns the given or default fallback response.\n * @param {String} path JSON file location. Defaults to main data url from config.js\n * @param {Object} fallback The fallback response object on request failure. Default `{}`.\n * @return {Function} A promise that will return when the file is loaded and parsed\n */\nconst loadJsonData = (path = getUrl('main'), fallback = {}) =>\n  json(path).catch(() => {\n    const fullPath = `/public${path.substr(1)}`;\n\n    // For main route throw a user error\n    if (path === getUrl('main')) {\n      throw new Error(\n        `Unable to load data from ${path}. If you're running Kedro-Viz as a standalone (e.g. for JavaScript development), please check that you have placed a data file at ${fullPath}.`\n      );\n    }\n\n    return new Promise((resolve) => resolve(fallback));\n  });\n\nexport default loadJsonData;\n","import { localStorageName } from '../config';\n\nconst noWindow = typeof window === 'undefined';\n\n/**\n * Retrieve state data from localStorage\n * @return {Object} State\n */\nexport const loadState = () => {\n  if (noWindow) {\n    return {};\n  }\n  try {\n    const serializedState = window.localStorage.getItem(localStorageName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\n/**\n * Save updated state to localStorage\n * @param {Object} state New state object\n */\nexport const saveState = (state) => {\n  if (noWindow) {\n    return;\n  }\n  try {\n    const newState = Object.assign(loadState(), state);\n    // Remove deprecated key from localStorage to suppress error.\n    // This can be removed in future versions of KedroViz:\n    if (newState.hasOwnProperty('nodeTypeDisabled')) {\n      delete newState.nodeTypeDisabled;\n    }\n    const serializedState = JSON.stringify(newState);\n    window.localStorage.setItem(localStorageName, serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * Remove unnecessary keys to prevent them being stored in state forever\n * @param {Object} obj An object containing keys and booleans\n * @return {Object} A new clone object but with the falsey keys removed\n */\nexport const pruneFalseyKeys = (obj) => {\n  const newObj = {};\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key]) {\n      newObj[key] = obj[key];\n    }\n  }\n  return newObj;\n};\n","import { arrayToObject } from '../utils';\n\n/**\n * Create new default pipeline state instance\n * @return {Object} state\n */\nexport const createInitialPipelineState = () => ({\n  pipeline: {\n    ids: [],\n    name: {},\n  },\n  modularPipeline: {\n    ids: [],\n    tree: {},\n    visible: {},\n    expanded: [],\n    active: {},\n    disabled: {},\n  },\n  node: {\n    ids: [],\n    name: {},\n    fullName: {},\n    type: {},\n    tags: {},\n    layer: {},\n    disabled: {},\n    pipelines: {},\n    clicked: null,\n    hovered: null,\n    fetched: {},\n    code: {},\n    parameters: {},\n    filepath: {},\n    inputs: {},\n    outputs: {},\n    plot: {},\n    image: {},\n    trackingData: {},\n    datasetType: {},\n    originalType: {},\n    transcodedTypes: {},\n    runCommand: {},\n    modularPipelines: {},\n  },\n  nodeType: {\n    ids: ['task', 'data', 'parameters', 'modularPipeline'],\n    name: {\n      data: 'Datasets',\n      task: 'Nodes',\n      parameters: 'Parameters',\n      modularPipeline: 'Modular Pipelines',\n    },\n    disabled: {},\n  },\n  edge: {\n    ids: [],\n    sources: {},\n    targets: {},\n  },\n  layer: {\n    ids: [],\n    name: {},\n    visible: true,\n  },\n  tag: {\n    ids: [],\n    name: {},\n    active: {},\n    enabled: {},\n  },\n  hoveredParameters: false,\n  hoveredFocusMode: false,\n});\n\n/**\n * Check whether data is in expected format\n * @param {Object} data - The parsed data input\n * @return {Boolean} True if valid for formatting\n */\nconst validateInput = (data) => {\n  if (!data) {\n    throw new Error('No data provided to Kedro-Viz');\n  }\n  if (data === 'json') {\n    // Data is still loading\n    return false;\n  }\n  if (!Array.isArray(data.edges) || !Array.isArray(data.nodes)) {\n    if (typeof jest === 'undefined') {\n      console.error('Invalid Kedro-Viz data:', data);\n    }\n    throw new Error(\n      'Invalid Kedro-Viz data input. Please ensure that your pipeline data includes arrays of nodes and edges'\n    );\n  }\n  return true;\n};\n\n/**\n * Get unique, reproducible ID for each edge, based on its nodes\n * @param {Object} source - Name and type of the source node\n * @param {Object} target - Name and type of the target node\n */\nconst createEdgeID = (source, target) => [source, target].join('|');\n\n/**\n * Add a new pipeline\n * @param {String} pipeline.id - Unique ID\n * @param {String} pipeline.name - Pipeline name\n */\nconst addPipeline = (state) => (pipeline) => {\n  const { id } = pipeline;\n  if (state.pipeline.name[id]) {\n    return;\n  }\n  state.pipeline.ids.push(id);\n  state.pipeline.name[id] = pipeline.name;\n};\n\n/**\n * Add a new node if it doesn't already exist\n * @param {String} name - Default node name\n * @param {String} type - 'data' or 'task'\n * @param {Array} tags - List of associated tags\n */\nconst addNode = (state) => (node) => {\n  const { id } = node;\n  if (state.node.name[id]) {\n    return;\n  }\n  state.node.ids.push(id);\n  state.node.name[id] = node.name;\n  state.node.fullName[id] = node.full_name || node.name;\n  state.node.type[id] = node.type;\n  state.node.layer[id] = node.layer;\n  state.node.pipelines[id] = node.pipelines\n    ? arrayToObject(node.pipelines, () => true)\n    : {};\n  state.node.tags[id] = node.tags || [];\n  // supports for metadata in case it exists on initial load\n  state.node.code[id] = node.code;\n  state.node.parameters[id] = node.parameters;\n  state.node.filepath[id] = node.filepath;\n  state.node.plot[id] = node.plot;\n  state.node.image[id] = node.image;\n  state.node.datasetType[id] = node.dataset_type;\n  state.node.originalType[id] = node.original_type;\n  state.node.transcodedTypes[id] = node.transcoded_types;\n  state.node.runCommand[id] = node.runCommand;\n  state.node.modularPipelines[id] = node.modular_pipelines || [];\n};\n\n/**\n * Create a new link between two nodes and add it to the edges array\n * @param {Object} source - Parent node\n * @param {Object} target - Child node\n */\nconst addEdge =\n  (state) =>\n  ({ source, target }) => {\n    const id = createEdgeID(source, target);\n    if (state.edge.ids.includes(id)) {\n      return;\n    }\n    state.edge.ids.push(id);\n    state.edge.sources[id] = source;\n    state.edge.targets[id] = target;\n  };\n\n/**\n * Add a new Tag if it doesn't already exist\n * @param {Object} tag - Tag object\n */\nconst addTag = (state) => (tag) => {\n  const { id } = tag;\n  state.tag.ids.push(id);\n  state.tag.name[id] = tag.name;\n};\n\n/**\n * Add a new Layer if it doesn't already exist\n * @param {Object} layer - Layer object\n */\nconst addLayer = (state) => (layer) => {\n  // using layer name as both layerId and name.\n  // It futureproofs it if we need a separate layer ID in the future.\n  state.layer.ids.push(layer);\n  state.layer.name[layer] = layer;\n};\n\n/**\n * Convert the pipeline data into a normalized state object\n * @param {Object} data Raw unformatted data input\n * @return {Object} Formatted, normalized state\n */\nconst normalizeData = (data, expandAllPipelines) => {\n  const state = createInitialPipelineState();\n\n  if (data === 'json') {\n    state.dataSource = 'json';\n  } else if (data.source) {\n    state.dataSource = data.source;\n  }\n\n  if (!validateInput(data)) {\n    return state;\n  }\n\n  data.nodes.forEach(addNode(state));\n  data.edges.forEach(addEdge(state));\n  if (data.pipelines) {\n    data.pipelines.forEach(addPipeline(state));\n    if (state.pipeline.ids.length) {\n      state.pipeline.main = data.selected_pipeline || state.pipeline.ids[0];\n      state.pipeline.active = state.pipeline.main;\n    }\n  }\n  if (data.modular_pipelines) {\n    state.modularPipeline.ids = Object.keys(data.modular_pipelines);\n    state.modularPipeline.tree = data.modular_pipelines;\n\n    // Case for expandAllPipelines in component props or within flag\n    if (expandAllPipelines) {\n      // assign all modular pipelines into expanded state\n      state.modularPipeline.expanded = state.modularPipeline.ids;\n      // assign all nodes as visible nodes in modular pipelines\n      const nodeIds = state.node.ids;\n      nodeIds.forEach((nodeId) => {\n        if (!state.modularPipeline.ids.includes(nodeId)) {\n          state.modularPipeline.visible[nodeId] = true;\n        }\n      });\n    } else {\n      for (const child of data.modular_pipelines['__root__'].children) {\n        state.modularPipeline.visible[child.id] = true;\n      }\n    }\n  }\n\n  if (data.tags) {\n    data.tags.forEach(addTag(state));\n  }\n  if (data.layers) {\n    data.layers.forEach(addLayer(state));\n  }\n\n  return state;\n};\n\nexport default normalizeData;\n","import { flags as flagsConfig } from '../config';\n\n/**\n * Flag definitions\n */\nexport const Flags = {\n  /**\n   * Returns `true` if the flag is defined otherwise `false`\n   * @param {String} name The flag name to test\n   * @returns {Boolean} The result\n   */\n  isDefined: (name) => Flags.names().includes(name),\n\n  /**\n   * Returns an array of defined flag names\n   * @returns {Array} The defined flag names\n   */\n  names: () => Object.keys(flagsConfig),\n\n  /**\n   * Returns an object mapping flag names to their default values\n   * @returns {Object} The defined flag defaults\n   */\n  defaults: () =>\n    Flags.names().reduce(\n      (result, flag) =>\n        Object.assign(result, { [flag]: flagsConfig[flag].default }),\n      {}\n    ),\n};\n\n/**\n * Returns an object with flags as set in given or current URL\n * @param {String=} url The URL (optional, default current location)\n * @returns {Object} An object with flags and their values\n */\nexport const getFlagsFromUrl = (url) => {\n  const flags = {};\n\n  let urlParams;\n  try {\n    urlParams = new URL(url || document.location.href).searchParams;\n  } catch (e) {\n    console.warn('Feature flags are not supported in this browser');\n    return flags;\n  }\n\n  [...urlParams].forEach(([name, value]) =>\n    Flags.isDefined(name)\n      ? (flags[name] = value === 'true' || value === '1' || value === '')\n      : null\n  );\n\n  return flags;\n};\n\n/**\n * Returns a user info message describing the status of all defined flags\n * @param {Object} flagsEnabled An object mapping of flag status\n * @returns {String} The info message\n */\nexport const getFlagsMessage = (flagsEnabled) => {\n  const allNames = Flags.names();\n\n  if (allNames.length > 0) {\n    let info = 'Experimental features 🏄‍♂️\\n';\n\n    allNames.forEach((name) => {\n      if (flagsConfig[name].private) {\n        return;\n      }\n      const isEnabled = flagsEnabled[name];\n      const status = isEnabled ? 'Enabled' : 'Disabled';\n      const statusIcon = isEnabled ? '🟢' : '⚪️';\n      const icon = flagsConfig[name].icon;\n      const description = flagsConfig[name].description;\n      info += `\\n${statusIcon} ${icon} \"${name}\" · ${description} · ${status}`;\n    });\n\n    info += `\\n\\nSee docs on flags for more info 📖`;\n    info += `\\nhttps://github.com/kedro-org/kedro-viz#flags`;\n\n    return info;\n  }\n};\n\nexport const getFlagsState = () => {\n  const allNames = Flags.names();\n  return allNames.map((flag) => {\n    return {\n      name: flagsConfig[flag].name,\n      value: flag,\n      description: flagsConfig[flag].description,\n    };\n  });\n};\n","import deepmerge from 'deepmerge';\nimport { loadState, saveState } from './helpers';\nimport normalizeData from './normalize-data';\nimport { getFlagsFromUrl, Flags } from '../utils/flags';\nimport { settings, sidebarWidth } from '../config';\n\n/**\n * Create new default state instance for properties that aren't overridden\n * when the pipeline is reset with new data via the App component's data prop\n * @return {Object} state\n */\nexport const createInitialState = () => ({\n  chartSize: {},\n  flags: Flags.defaults(),\n  textLabels: true,\n  theme: 'dark',\n  prettyName: settings.prettyName.default,\n  ignoreLargeWarning: false,\n  loading: {\n    graph: false,\n    pipeline: false,\n    node: false,\n  },\n  visible: {\n    graph: true,\n    labelBtn: true,\n    layerBtn: true,\n    exportBtn: true,\n    exportModal: false,\n    metadataModal: false,\n    settingsModal: false,\n    sidebar: window.innerWidth > sidebarWidth.breakpoint,\n    code: false,\n    miniMapBtn: true,\n    miniMap: true,\n    modularPipelineFocusMode: null,\n  },\n  display: {\n    globalToolbar: true,\n    sidebar: true,\n    miniMap: true,\n    expandAllPipelines: false,\n  },\n  zoom: {},\n});\n\n/**\n * Load values from localStorage and combine with existing state,\n * but filter out any unused values from localStorage\n * @param {Object} state Initial/extant state\n * @return {Object} Combined state from localStorage\n */\nexport const mergeLocalStorage = (state) => {\n  const localStorageState = loadState();\n  Object.keys(localStorageState).forEach((key) => {\n    if (!state[key]) {\n      delete localStorageState[key];\n    }\n  });\n  return deepmerge(state, localStorageState);\n};\n\n/**\n * Prepare the pipeline data part of the state by normalizing the raw data,\n * and applying saved state from localStorage.\n * This part is separated so that it can be reset without overriding user settings,\n * because it can be run both on initial state load and again later on.\n * The applyFixes part should only ever be run once, on first load.\n * Exactly when it runs depends on whether the data is loaded asynchronously or not.\n * @param {Object} data Data prop passed to App component\n * @param {Boolean} applyFixes Whether to override initialState\n */\nexport const preparePipelineState = (data, applyFixes, expandAllPipelines) => {\n  const state = mergeLocalStorage(normalizeData(data, expandAllPipelines));\n  if (applyFixes) {\n    // Use main pipeline if active pipeline from localStorage isn't recognised\n    if (!state.pipeline.ids.includes(state.pipeline.active)) {\n      state.pipeline.active = state.pipeline.main;\n    }\n  }\n\n  return state;\n};\n\n/**\n * Prepare the non-pipeline data part of the state. This part is separated so that it\n * will persist if the pipeline data is reset.\n * Merge local storage and add custom state overrides from props etc\n * @param {Object} props Props passed to App component\n * @return {Object} Updated initial state\n */\nexport const prepareNonPipelineState = (props) => {\n  const state = mergeLocalStorage(createInitialState());\n\n  let newVisibleProps = {};\n  if (props.display?.sidebar === false || state.display.sidebar === false) {\n    newVisibleProps['sidebar'] = false;\n  }\n\n  if (props.display?.minimap === false || state.display.miniMap === false) {\n    newVisibleProps['miniMap'] = false;\n  }\n\n  return {\n    ...state,\n    flags: { ...state.flags, ...getFlagsFromUrl() },\n    theme: props.theme || state.theme,\n    visible: { ...state.visible, ...props.visible, ...newVisibleProps },\n    display: { ...state.display, ...props.display },\n  };\n};\n\n/**\n * Configure the redux store's initial state, by merging default values\n * with normalised pipeline data and localStorage.\n * If parameters flag is set to true, then disable parameters on initial load\n * @param {Object} props App component props\n * @return {Object} Initial state\n */\nconst getInitialState = (props = {}) => {\n  const nonPipelineState = prepareNonPipelineState(props);\n  saveState({\n    nodeType: {\n      // Default to disabled parameters and other types enabled\n      disabled: { parameters: true, task: false, data: false },\n    },\n  });\n\n  const expandAllPipelines =\n    nonPipelineState.display.expandAllPipelines ||\n    nonPipelineState.flags.expandAllPipelines;\n\n  const pipelineState = preparePipelineState(\n    props.data,\n    props.data !== 'json',\n    expandAllPipelines\n  );\n\n  return {\n    ...nonPipelineState,\n    ...pipelineState,\n  };\n};\n\nexport default getInitialState;\n","import { getUrl } from '../utils';\nimport loadJsonData from '../store/load-data';\nimport { preparePipelineState } from '../store/initial-state';\nimport { resetData } from './index';\n\n/**\n * This file contains actions that update the active pipeline, and if loading data\n * asynchronously, they also handle loading this pipeline data from different endpoints.\n *\n * Many different cases need to be addressed, including:\n * 1. Loading data synchronously, or asynchonously.\n * 2. Loading data and updating the pipeline on first page load, or on user actions.\n * 3. Whether the dataset has pipelines defined in it, or not.\n * 4. Whether localStorage has an active pipeline already defined.\n * 5. If so, whether it exists in the current dataset.\n * 6. Whether the requested endpoint is the 'main' one, or not.\n *\n * These are mostly handled either within this file, in the preparePipelineState\n * utility, or in the getNodeDisabledPipeline selector. Please see their tests\n * for more info about implementation requirements.\n */\n\nexport const UPDATE_ACTIVE_PIPELINE = 'UPDATE_ACTIVE_PIPELINE';\n\n/**\n * Update the actively-selected pipeline\n * @param {String} pipeline Pipeline ID\n */\nexport function updateActivePipeline(pipeline) {\n  return {\n    type: UPDATE_ACTIVE_PIPELINE,\n    pipeline,\n  };\n}\n\nexport const TOGGLE_PIPELINE_LOADING = 'TOGGLE_PIPELINE_LOADING';\n\n/**\n * Toggle whether to display the loading spinner\n * @param {Boolean} loading True if pipeline is still loading\n */\nexport function toggleLoading(loading) {\n  return {\n    type: TOGGLE_PIPELINE_LOADING,\n    loading,\n  };\n}\n\n/**\n * Determine where to load data from\n * @param {Object} pipeline Pipeline state\n */\nexport const getPipelineUrl = (pipeline) => {\n  if (pipeline.active === pipeline.main) {\n    return getUrl('main');\n  }\n  return getUrl('pipeline', pipeline.active);\n};\n\n/**\n * Check whether another async data pipeline request is needed on first page-load.\n * A second request is typically only required when an active pipeline is set in\n * localStorage, and it's not the 'main' pipeline endpoint.\n * @param {Object} pipeline Pipeline state\n * @return {Boolean} True if another request is needed\n */\nexport const requiresSecondRequest = (pipeline) => {\n  // Pipelines are not present in the data\n  if (!pipeline.ids.length || !pipeline.main) {\n    return false;\n  }\n\n  // There is no active pipeline set\n  if (!pipeline.active) {\n    return false;\n  }\n\n  // The active pipeline is not 'main'\n  return pipeline.active !== pipeline.main;\n};\n\n/**\n * Load pipeline data on initial page-load\n * @return {Function} A promise that resolves when the data is loaded\n */\nexport function loadInitialPipelineData() {\n  return async function (dispatch, getState) {\n    // Get a copy of the full state from the store\n    const state = getState();\n    // If data is passed synchronously then this process isn't necessary\n    if (state.dataSource !== 'json') {\n      return;\n    }\n    dispatch(toggleLoading(true));\n    // Load 'main' data file. This is always loaded first, because it's needed\n    // in order to obtain the list of pipelines, which is required for determining\n    // whether the active pipeline (from localStorage) exists in the data.\n    const url = getUrl('main');\n    // obtain the status of expandAllPipelines to decide whether it needs to overwrite the\n    // list of visible nodes\n    const expandAllPipelines =\n      state.display.expandAllPipelines || state.flags.expandAllPipelines;\n    let newState = await loadJsonData(url).then((data) =>\n      preparePipelineState(data, true, expandAllPipelines)\n    );\n    // If the active pipeline isn't 'main' then request data from new URL\n    if (requiresSecondRequest(newState.pipeline)) {\n      const url = getPipelineUrl(newState.pipeline);\n      newState = await loadJsonData(url).then((data) =>\n        preparePipelineState(data, false, expandAllPipelines)\n      );\n    }\n    dispatch(resetData(newState));\n    dispatch(toggleLoading(false));\n  };\n}\n\n/**\n * Change pipeline on selection, loading new data if necessary\n * @param {String} pipelineID Unique ID for new pipeline\n * @return {Function} A promise that resolves when the data is loaded\n */\nexport function loadPipelineData(pipelineID) {\n  return async function (dispatch, getState) {\n    const { dataSource, pipeline, display, flags } = getState();\n\n    if (pipelineID && pipelineID === pipeline.active) {\n      return;\n    }\n\n    if (dataSource === 'json') {\n      dispatch(toggleLoading(true));\n\n      const url = getPipelineUrl({\n        main: pipeline.main,\n        active: pipelineID,\n      });\n\n      const expandAllPipelines =\n        display.expandAllPipelines || flags.expandAllPipelines;\n      const newState = await loadJsonData(url).then((data) =>\n        preparePipelineState(data, false, expandAllPipelines)\n      );\n\n      // Set active pipeline here rather than dispatching two separate actions,\n      // to improve performance by only requiring one state recalculation\n      newState.pipeline.active = pipelineID;\n      dispatch(resetData(newState));\n      dispatch(toggleLoading(false));\n    } else {\n      dispatch(updateActivePipeline(pipelineID));\n    }\n  };\n}\n","import { getUrl } from '../utils';\nimport loadJsonData from '../store/load-data';\n\nexport const TOGGLE_NODE_CLICKED = 'TOGGLE_NODE_CLICKED';\n\n/**\n * Update the value of the currently-active clicked node\n * @param {String|null} nodeClicked The node's unique identifier\n */\nexport function toggleNodeClicked(nodeClicked) {\n  return {\n    type: TOGGLE_NODE_CLICKED,\n    nodeClicked,\n  };\n}\n\nexport const TOGGLE_NODES_DISABLED = 'TOGGLE_NODES_DISABLED';\n\n/**\n * Toggle a selected group of nodes' visibility on/off\n * @param {Array} nodeIDs The nodes' unique identifiers\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodesDisabled(nodeIDs, isDisabled) {\n  return {\n    type: TOGGLE_NODES_DISABLED,\n    nodeIDs,\n    isDisabled,\n  };\n}\n\nexport const TOGGLE_NODE_HOVERED = 'TOGGLE_NODE_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {String|null} nodeHovered The node's unique identifier\n */\nexport function toggleNodeHovered(nodeHovered) {\n  return {\n    type: TOGGLE_NODE_HOVERED,\n    nodeHovered,\n  };\n}\n\nexport const TOGGLE_NODE_DATA_LOADING = 'TOGGLE_NODE_DATA_LOADING';\n\n/**\n * Toggle whether to display the loading spinner\n * @param {Boolean} loading True if pipeline is still loading\n */\nexport function toggleNodeDataLoading(loading) {\n  return {\n    type: TOGGLE_NODE_DATA_LOADING,\n    loading,\n  };\n}\n\nexport const ADD_NODE_METADATA = 'ADD_NODE_METADATA';\n\n/**\n * Toggle whether to display the loading spinner\n * @param {Object} data The node's data\n */\nexport function addNodeMetadata(data) {\n  return {\n    type: ADD_NODE_METADATA,\n    data,\n  };\n}\n\n/**\n * update node metadata on selection, loading new data if it has not been previously called\n * @param {String} nodeID node id of clicked node\n * @return {Function} A promise that resolves when the data is loaded\n */\nexport function loadNodeData(nodeID) {\n  return async function (dispatch, getState) {\n    const { dataSource, node } = getState();\n\n    dispatch(toggleNodeClicked(nodeID));\n\n    if (dataSource === 'json' && nodeID && !node.fetched[nodeID]) {\n      dispatch(toggleNodeDataLoading(true));\n      const url = getUrl('nodes', nodeID);\n      const nodeData = await loadJsonData(url);\n      dispatch(addNodeMetadata({ id: nodeID, data: nodeData }));\n      dispatch(toggleNodeDataLoading(false));\n    }\n  };\n}\n","import { TOGGLE_GRAPH_LOADING } from '../actions/graph';\nimport { TOGGLE_PIPELINE_LOADING } from '../actions/pipelines';\nimport { TOGGLE_NODE_DATA_LOADING } from '../actions/nodes';\n\nfunction loadingReducer(loadingState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_PIPELINE_LOADING: {\n      return Object.assign({}, loadingState, {\n        pipeline: action.loading,\n      });\n    }\n\n    case TOGGLE_GRAPH_LOADING: {\n      return Object.assign({}, loadingState, {\n        graph: action.loading,\n      });\n    }\n\n    case TOGGLE_NODE_DATA_LOADING: {\n      return Object.assign({}, loadingState, {\n        node: action.loading,\n      });\n    }\n\n    default:\n      return loadingState;\n  }\n}\n\nexport default loadingReducer;\n","import {\n  TOGGLE_NODE_CLICKED,\n  TOGGLE_NODES_DISABLED,\n  TOGGLE_NODE_HOVERED,\n  ADD_NODE_METADATA,\n} from '../actions/nodes';\nimport { UPDATE_ACTIVE_PIPELINE } from '../actions/pipelines';\n\nfunction nodeReducer(nodeState = {}, action) {\n  const updateState = (newState) => Object.assign({}, nodeState, newState);\n\n  switch (action.type) {\n    case TOGGLE_NODE_CLICKED: {\n      return updateState({\n        clicked: action.nodeClicked,\n      });\n    }\n\n    case TOGGLE_NODES_DISABLED: {\n      return updateState({\n        clicked: action.nodeIDs.includes(nodeState.clicked)\n          ? null\n          : nodeState.clicked,\n        disabled: action.nodeIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: action.isDisabled,\n            }),\n          nodeState.disabled\n        ),\n      });\n    }\n\n    case TOGGLE_NODE_HOVERED: {\n      return updateState({\n        hovered: action.nodeHovered,\n      });\n    }\n\n    case UPDATE_ACTIVE_PIPELINE: {\n      return updateState({\n        clicked: null,\n        hovered: null,\n      });\n    }\n\n    case ADD_NODE_METADATA: {\n      const { id, data } = action.data;\n      return updateState({\n        fetched: Object.assign({}, nodeState.fetched, {\n          [id]: true,\n        }),\n        code: Object.assign({}, nodeState.code, {\n          [id]: data.code,\n        }),\n        filepath: Object.assign({}, nodeState.filepath, {\n          [id]: data.filepath,\n        }),\n        parameters: Object.assign({}, nodeState.parameters, {\n          [id]: data.parameters,\n        }),\n        inputs: Object.assign({}, nodeState.inputs, {\n          [id]: data.inputs,\n        }),\n        outputs: Object.assign({}, nodeState.outputs, {\n          [id]: data.outputs,\n        }),\n        // the data returned from the API under the field name 'type' for dataset type nodes\n        datasetType: Object.assign({}, nodeState.datasetType, {\n          [id]: data.type,\n        }),\n        originalType: Object.assign({}, nodeState.originalType, {\n          [id]: data.original_type,\n        }),\n        transcodedTypes: Object.assign({}, nodeState.transcodedTypes, {\n          [id]: data.transcoded_types,\n        }),\n        plot: Object.assign({}, nodeState.plot, {\n          [id]: data.plot,\n        }),\n        image: Object.assign({}, nodeState.image, {\n          [id]: data.image,\n        }),\n        trackingData: Object.assign({}, nodeState.trackingData, {\n          [id]: data.tracking_data,\n        }),\n        runCommand: Object.assign({}, nodeState.runCommand, {\n          [id]: data.run_command,\n        }),\n      });\n    }\n\n    default:\n      return nodeState;\n  }\n}\n\nexport default nodeReducer;\n","export const TOGGLE_TYPE_DISABLED = 'TOGGLE_TYPE_DISABLED';\n\n/**\n * The default enabled / disabled value for all types is 'unset', meaning not explicitly set by user.\n * The value `0` is chosen to be falsy, JSON serializable but distinct from `false`.\n * In this state the type is effectively enabled by default, see reducers/node-type.js for usage.\n */\nexport const NODE_TYPE_DISABLED_UNSET = 0;\n\n/**\n * Toggle one or more node-type's visibility on/off\n * @param {String|Object} typeIDs A single type id string, or an object map of type id to disabled booleans\n * @param {?Boolean} disabled True if type is disabled (when passing a single type id string)\n */\nexport function toggleTypeDisabled(typeIDs, disabled) {\n  return {\n    type: TOGGLE_TYPE_DISABLED,\n    typeIDs: typeof typeIDs === 'string' ? { [typeIDs]: disabled } : typeIDs,\n  };\n}\n","import {\n  TOGGLE_TYPE_DISABLED,\n  NODE_TYPE_DISABLED_UNSET,\n} from '../actions/node-type';\n\n/**\n * See actions/node-type.js for details on the 'unset' value.\n */\nconst allNodeTypesUnset = {\n  parameters: NODE_TYPE_DISABLED_UNSET,\n  task: NODE_TYPE_DISABLED_UNSET,\n  data: NODE_TYPE_DISABLED_UNSET,\n};\n\nconst isNodeTypeUnset = (nodeTypeValue) =>\n  nodeTypeValue === NODE_TYPE_DISABLED_UNSET;\n\nconst isNodeTypeDisabled = (nodeTypeValue) => nodeTypeValue === true;\n\nfunction nodeTypeReducer(nodeTypeState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_TYPE_DISABLED: {\n      const nextDisabledState = {\n        ...nodeTypeState.disabled,\n        ...action.typeIDs,\n      };\n\n      const nextTypesDisabled = Object.values(nextDisabledState);\n\n      // If no types will be enabled\n      if (nextTypesDisabled.every(isNodeTypeDisabled)) {\n        // Then reset all types to unset (defaulting to enabled)\n        return {\n          ...nodeTypeState,\n          disabled: { ...allNodeTypesUnset },\n        };\n      }\n\n      // At least one type is enabled, set any unset types to disabled\n      for (const type in nextDisabledState) {\n        if (isNodeTypeUnset(nextDisabledState[type])) {\n          nextDisabledState[type] = true;\n        }\n      }\n\n      return {\n        ...nodeTypeState,\n        disabled: nextDisabledState,\n      };\n    }\n    default:\n      return nodeTypeState;\n  }\n}\n\nexport default nodeTypeReducer;\n","import { UPDATE_ACTIVE_PIPELINE } from '../actions/pipelines';\n\nfunction pipelineReducer(pipelineState = {}, action) {\n  switch (action.type) {\n    case UPDATE_ACTIVE_PIPELINE: {\n      return Object.assign({}, pipelineState, {\n        active: action.pipeline,\n      });\n    }\n\n    default:\n      return pipelineState;\n  }\n}\n\nexport default pipelineReducer;\n","export const TOGGLE_TAG_ACTIVE = 'TOGGLE_TAG_ACTIVE';\n\n/**\n * Toggle a tag's highlighting on/off (or array of tags)\n * @param {String|Array} tagIDs Tag id(s)\n * @param {Boolean} active True if tag(s) active\n */\nexport function toggleTagActive(tagIDs, active) {\n  return {\n    type: TOGGLE_TAG_ACTIVE,\n    tagIDs: Array.isArray(tagIDs) ? tagIDs : [tagIDs],\n    active,\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag's filtering on/off (or array of tags)\n * @param {String|Array} tagIDs Tag id(s)\n * @param {Boolean} enabled True if tag(s) enabled\n */\nexport function toggleTagFilter(tagIDs, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagIDs: Array.isArray(tagIDs) ? tagIDs : [tagIDs],\n    enabled,\n  };\n}\n","import { TOGGLE_TAG_ACTIVE, TOGGLE_TAG_FILTER } from '../actions/tags';\n\nfunction tagReducer(tagState = {}, action) {\n  const updateState = (newState) => Object.assign({}, tagState, newState);\n\n  /**\n   * Batch update tags from an array of tag IDs\n   * @param {String} key Tag action value prop\n   */\n  const batchChanges = (key) =>\n    action.tagIDs.reduce((result, tagID) => {\n      result[tagID] = action[key];\n      return result;\n    }, {});\n\n  switch (action.type) {\n    case TOGGLE_TAG_ACTIVE: {\n      return updateState({\n        active: Object.assign({}, tagState.active, batchChanges('active')),\n      });\n    }\n\n    case TOGGLE_TAG_FILTER: {\n      return updateState({\n        enabled: Object.assign({}, tagState.enabled, batchChanges('enabled')),\n      });\n    }\n\n    default:\n      return tagState;\n  }\n}\n\nexport default tagReducer;\n","export const TOGGLE_MODULAR_PIPELINE_ACTIVE = 'TOGGLE_MODULAR_PIPELINE_ACTIVE';\n\n/**\n * Toggle a modular pipeline item's highlighting on/off (or array of modular pipelines)\n * @param {String|Array} modularPipelineIDs Modular pipeline id(s)\n * @param {Boolean} active True if modular pipeline(s) active\n */\nexport function toggleModularPipelineActive(modularPipelineIDs, active) {\n  return {\n    type: TOGGLE_MODULAR_PIPELINE_ACTIVE,\n    modularPipelineIDs: Array.isArray(modularPipelineIDs)\n      ? modularPipelineIDs\n      : [modularPipelineIDs],\n    active,\n  };\n}\n\nexport const TOGGLE_MODULAR_PIPELINE_DISABLED =\n  'TOGGLE_MODULAR_PIPELINE_DISABLED';\n\nexport function toggleModularPipelineDisabled(modularPipelineIDs, disabled) {\n  return {\n    type: TOGGLE_MODULAR_PIPELINE_DISABLED,\n    modularPipelineIDs: Array.isArray(modularPipelineIDs)\n      ? modularPipelineIDs\n      : [modularPipelineIDs],\n    disabled,\n  };\n}\n\nexport const TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED =\n  'TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED';\n\n/**\n * Toggle a singular modular pipeline to be expanded.\n * @param {String} modularPipelineID\n */\nexport function toggleSingleModularPipelineExpanded(modularPipelineID) {\n  return {\n    type: TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED,\n    modularPipelineID,\n  };\n}\n\nexport const TOGGLE_MODULAR_PIPELINES_EXPANDED =\n  'TOGGLE_MODULAR_PIPELINES_EXPANDED';\n\n/**\n * Toggle a set of modular pipelines to be expanded.\n * @param {Array[Number]} expandedIDs\n */\nexport function toggleModularPipelinesExpanded(expandedIDs) {\n  return {\n    type: TOGGLE_MODULAR_PIPELINES_EXPANDED,\n    expandedIDs,\n  };\n}\n","import {\n  TOGGLE_MODULAR_PIPELINE_ACTIVE,\n  TOGGLE_MODULAR_PIPELINES_EXPANDED,\n  TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED,\n  TOGGLE_MODULAR_PIPELINE_DISABLED,\n} from '../actions/modular-pipelines';\n\nfunction modularPipelineReducer(modularPipelineState = {}, action) {\n  const updateState = (newState) =>\n    Object.assign({}, modularPipelineState, newState);\n\n  /**\n   * Batch update tags from an array of tag IDs\n   * @param {String} key Tag action value prop\n   */\n  const batchChanges = (key) =>\n    action.modularPipelineIDs.reduce((result, modularPipelineID) => {\n      result[modularPipelineID] = action[key];\n      return result;\n    }, {});\n\n  switch (action.type) {\n    case TOGGLE_MODULAR_PIPELINE_ACTIVE: {\n      return updateState({\n        active: Object.assign(\n          {},\n          modularPipelineState.active,\n          batchChanges('active')\n        ),\n      });\n    }\n\n    case TOGGLE_MODULAR_PIPELINE_DISABLED: {\n      return updateState({\n        disabled: Object.assign(\n          {},\n          modularPipelineState.disabled,\n          batchChanges('disabled')\n        ),\n      });\n    }\n\n    case TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED: {\n      const newVisibleState = { ...modularPipelineState.visible };\n\n      newVisibleState[action.modularPipelineID] = false;\n      modularPipelineState.tree[action.modularPipelineID].children.forEach(\n        (child) => (newVisibleState[child.id] = true)\n      );\n\n      return updateState({\n        expanded: [...modularPipelineState.expanded, action.modularPipelineID],\n        visible: newVisibleState,\n      });\n    }\n\n    // The expanded IDs for tree nodes directly emitted from modular pipelines\n    // are not directly usable for our purpose. For example, for a tree a -> b -> c,\n    // when a is collapsed, [b,c] are passed to the action payload as expanded.\n    // What we care about, however, is not what is currently \"expanded\", but actually\n    // what is currently \"visible\" on the tree.\n    // Therefore there are 2 states here: expanded and visible.\n    // We use expanded state and the action's payload to work out what's visible:\n    // - When a modular pipeline is collapsed, we have to mark all of its children\n    // as invisible recursively.\n    // - When a modular pipeline is expanded, we have to mark all of its children\n    // as visible, but not recursively.\n    case TOGGLE_MODULAR_PIPELINES_EXPANDED: {\n      const newVisibleState = { ...modularPipelineState.visible };\n      const isExpanding =\n        action.expandedIDs.length > modularPipelineState.expanded.length;\n      let expandedIDs = action.expandedIDs;\n\n      if (isExpanding && modularPipelineState.ids.length > 0) {\n        const expandedModularPipelines = expandedIDs.filter(\n          (expandedID) => !modularPipelineState.expanded.includes(expandedID)\n        );\n        expandedModularPipelines.forEach((expandedModularPipeline) => {\n          newVisibleState[expandedModularPipeline] = false;\n          modularPipelineState.tree[expandedModularPipeline].children.forEach(\n            (child) => (newVisibleState[child.id] = true)\n          );\n        });\n      } else {\n        const collapsedModularPipelines = modularPipelineState.expanded.filter(\n          (expandedID) => !expandedIDs.includes(expandedID)\n        );\n\n        // recursively set all children of a node in the tree as invisible\n        const setChildrenInvisible = (node) => {\n          modularPipelineState.tree[node].children.forEach((child) => {\n            newVisibleState[child.id] = false;\n            if (child.type === 'modularPipeline') {\n              setChildrenInvisible(child.id);\n            }\n          });\n        };\n\n        collapsedModularPipelines.forEach((collapsedModularPipeline) => {\n          newVisibleState[collapsedModularPipeline] = true;\n          setChildrenInvisible(collapsedModularPipeline);\n          expandedIDs = expandedIDs.filter(\n            (id) => !id.startsWith(collapsedModularPipeline)\n          );\n        });\n      }\n\n      return updateState({\n        expanded: expandedIDs,\n        visible: newVisibleState,\n      });\n    }\n\n    default:\n      return modularPipelineState;\n  }\n}\n\nexport default modularPipelineReducer;\n","import {\n  TOGGLE_GRAPH,\n  TOGGLE_EXPORT_MODAL,\n  TOGGLE_SETTINGS_MODAL,\n  TOGGLE_METADATA_MODAL,\n  TOGGLE_SIDEBAR,\n  TOGGLE_CODE,\n  TOGGLE_MINIMAP,\n  TOGGLE_MODULAR_PIPELINE_FOCUS_MODE,\n} from '../actions';\n\nfunction visibleReducer(visibleState = {}, action) {\n  switch (action.type) {\n    case TOGGLE_GRAPH: {\n      return Object.assign({}, visibleState, {\n        graph: action.visible,\n      });\n    }\n\n    case TOGGLE_METADATA_MODAL: {\n      return Object.assign({}, visibleState, {\n        metadataModal: action.visible,\n      });\n    }\n\n    case TOGGLE_EXPORT_MODAL: {\n      return Object.assign({}, visibleState, {\n        exportModal: action.visible,\n      });\n    }\n\n    case TOGGLE_SETTINGS_MODAL: {\n      return Object.assign({}, visibleState, {\n        settingsModal: action.visible,\n      });\n    }\n\n    case TOGGLE_SIDEBAR: {\n      return Object.assign({}, visibleState, {\n        sidebar: action.visible,\n      });\n    }\n\n    case TOGGLE_MINIMAP: {\n      return Object.assign({}, visibleState, {\n        miniMap: action.visible,\n      });\n    }\n\n    case TOGGLE_CODE: {\n      return Object.assign({}, visibleState, {\n        code: action.visible,\n      });\n    }\n\n    case TOGGLE_MODULAR_PIPELINE_FOCUS_MODE: {\n      return Object.assign({}, visibleState, {\n        modularPipelineFocusMode: action.modularPipeline,\n      });\n    }\n\n    default:\n      return visibleState;\n  }\n}\n\nexport default visibleReducer;\n","import { combineReducers } from 'redux';\nimport flags from './flags';\nimport graph from './graph';\nimport layer from './layers';\nimport loading from './loading';\nimport node from './nodes';\nimport nodeType from './node-type';\nimport pipeline from './pipeline';\nimport tag from './tags';\nimport modularPipeline from './modular-pipelines';\nimport visible from './visible';\nimport {\n  RESET_DATA,\n  TOGGLE_TEXT_LABELS,\n  TOGGLE_THEME,\n  UPDATE_CHART_SIZE,\n  UPDATE_ZOOM,\n  TOGGLE_IGNORE_LARGE_WARNING,\n  TOGGLE_PRETTY_NAME,\n  TOGGLE_HOVERED_FOCUS_MODE,\n} from '../actions';\nimport { TOGGLE_PARAMETERS_HOVERED } from '../actions';\n\n/**\n * Create a generic reducer\n * @param {*} initialState Default state\n * @param {String} type Action type\n * @param {String} key Action payload key\n * @return {*} Updated state\n */\nconst createReducer =\n  (initialState, type, key) =>\n  (state = initialState, action) => {\n    if (typeof key !== 'undefined' && action.type === type) {\n      return action[key];\n    }\n    return state;\n  };\n\n/**\n * Reset/update application-wide data\n * @param {Object} state Complete app state\n * @param {Object} action Redux action\n * @return {Object} Updated(?) state\n */\nfunction resetDataReducer(state = {}, action) {\n  if (action.type === RESET_DATA) {\n    return Object.assign({}, state, action.data);\n  }\n  return state;\n}\n\nconst combinedReducer = combineReducers({\n  // These props have their own reducers in other files\n  flags,\n  graph,\n  layer,\n  loading,\n  node,\n  nodeType,\n  pipeline,\n  tag,\n  modularPipeline,\n  visible,\n  // These props don't have any actions associated with them\n  display: createReducer(null),\n  dataSource: createReducer(null),\n  edge: createReducer({}),\n  // These props have very simple non-nested actions\n  chartSize: createReducer({}, UPDATE_CHART_SIZE, 'chartSize'),\n  zoom: createReducer({}, UPDATE_ZOOM, 'zoom'),\n  textLabels: createReducer(true, TOGGLE_TEXT_LABELS, 'textLabels'),\n  theme: createReducer('dark', TOGGLE_THEME, 'theme'),\n  prettyName: createReducer(true, TOGGLE_PRETTY_NAME, 'prettyName'),\n  hoveredParameters: createReducer(\n    false,\n    TOGGLE_PARAMETERS_HOVERED,\n    'hoveredParameters'\n  ),\n  ignoreLargeWarning: createReducer(\n    false,\n    TOGGLE_IGNORE_LARGE_WARNING,\n    'ignoreLargeWarning'\n  ),\n  hoveredFocusMode: createReducer(\n    false,\n    TOGGLE_HOVERED_FOCUS_MODE,\n    'hoveredFocusMode'\n  ),\n});\n\nconst rootReducer = (state, action) =>\n  combinedReducer(resetDataReducer(state, action), action);\n\nexport default rootReducer;\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\n\nconst getNodeIDs = (state) => state.node.ids;\nconst getNodePipelines = (state) => state.node.pipelines;\nconst getActivePipeline = (state) => state.pipeline.active;\nconst getNodeTags = (state) => state.node.tags;\nconst getNodeModularPipelines = (state) => state.node.modularPipelines;\nconst getDataSource = (state) => state.dataSource;\nconst getModularPipelineIDs = (state) => state.modularPipeline.ids;\n\n/**\n * Calculate whether nodes should be disabled based on their registered pipelines\n */\nexport const getNodeDisabledPipeline = createSelector(\n  [getNodeIDs, getNodePipelines, getActivePipeline, getDataSource],\n  (nodeIDs, nodePipelines, activePipeline, dataSource) => {\n    if (dataSource === 'json' || !activePipeline) {\n      return {};\n    }\n    return arrayToObject(\n      nodeIDs,\n      (nodeID) => !nodePipelines[nodeID][activePipeline]\n    );\n  }\n);\n\n/**\n * Get a list of just the IDs for the active pipeline\n */\nexport const getPipelineNodeIDs = createSelector(\n  [getNodeIDs, getNodeDisabledPipeline],\n  (nodeIDs, nodeDisabledPipeline) =>\n    nodeIDs.filter((nodeID) => !nodeDisabledPipeline[nodeID])\n);\n\n/**\n * Get IDs of tags used in the current pipeline\n */\nexport const getPipelineTagIDs = createSelector(\n  [getPipelineNodeIDs, getNodeTags],\n  (nodeIDs, nodeTags) => {\n    const visibleTags = {};\n    nodeIDs.forEach((nodeID) => {\n      nodeTags[nodeID].forEach((tagID) => {\n        if (!visibleTags[tagID]) {\n          visibleTags[tagID] = true;\n        }\n      });\n    });\n    return Object.keys(visibleTags);\n  }\n);\n\n/**\n * Get IDs of modular pipelines used in the current pipeline\n */\nexport const getPipelineModularPipelineIDs = createSelector(\n  [getPipelineNodeIDs, getNodeModularPipelines, getModularPipelineIDs],\n  (nodeIDs, nodeModularPipelines, modularPipelineIDs) => {\n    const visibleModularPipelines = {};\n    // check if pipeline contains defined modular pipelines\n    if (modularPipelineIDs.length > 0) {\n      nodeIDs.forEach((nodeID) => {\n        nodeModularPipelines[nodeID].forEach((modularPipelineID) => {\n          if (\n            modularPipelineID &&\n            !visibleModularPipelines[modularPipelineID]\n          ) {\n            visibleModularPipelines[modularPipelineID] = true;\n          }\n        });\n      });\n    }\n    return Object.keys(visibleModularPipelines);\n  }\n);\n","/**\n * Create a regular expression to match certain keywords\n * @param  {String} value - The search keyword to highlight\n * @return {Object|Boolean} Regular expression or false\n */\nexport const getValueRegex = (value) => {\n  if (!value) {\n    return false;\n  }\n  return new RegExp(`(${escapeRegExp(value)})`, 'gi');\n};\n\n/**\n * Wrap a string with a <b> tag\n * @param  {String} str - The text to wrap\n * @return {String} The emboldened text\n */\nconst getWrappedMatch = (str) => `<b>${str}</b>`;\n\n/**\n * Highlight relevant keywords within a block of text\n * @param  {String} text - The text to parse\n * @param  {String} value - The search keyword to highlight\n * @return {String} The original text but with <b> tags wrapped around matches\n */\nexport const getHighlightedText = (text, value) => {\n  const valueRegex = getValueRegex(value);\n  const matches = text.match(valueRegex);\n\n  return value && matches\n    ? text.replace(valueRegex, getWrappedMatch('$1'))\n    : text;\n};\n\n/**\n * Escape string for use in a regular expression, and to prevent XSS attacks\n * All of these should be escaped: \\ ^ $ * + ? . ( ) | { } [ ] < >\n * @param {String} str Search keyword string\n */\nexport const escapeRegExp = (str) => {\n  return str.replace(/[.*+?^${}<>()|[\\]\\\\]/g, '\\\\$&');\n};\n\n/**\n * Check whether a piece of text matches the search value\n * @param {Object} text\n * @param {String} searchValue\n * @return {Boolean} True if node matches or no search value given\n */\nexport const textMatchesSearch = (text, searchValue) => {\n  if (searchValue) {\n    return new RegExp(escapeRegExp(searchValue), 'gi').test(text);\n  }\n\n  return true;\n};\n","import { escapeRegExp, getHighlightedText } from '../utils/search-utils';\nexport const getModularPipelineIDs = (state) => state.modularPipeline.ids;\nexport const getFocusedModularPipeline = (state) =>\n  state.visible.modularPipelineFocusMode;\nexport const getModularPipelinesTree = (state) => state.modularPipeline.tree;\n\n/**\n * Search a given string in a string target.\n * Return whether there is a match.\n * @param {String} searchValue the string to search for.\n * @param {String} target the target to search in.\n * @return {Boolean} whether there is a match.\n */\nexport const searchString = (searchValue, target) => {\n  if (!searchValue || !target) {\n    return false;\n  }\n  return new RegExp(escapeRegExp(target), 'gi').test(searchValue);\n};\n\n/**\n * Return whether a tree node in a modular pipeline tree is a leaf.\n */\nconst isTreeLeaf = (treeNode) => treeNode.type !== 'modularPipeline';\n\n/**\n * Search a given string in a (modular pipelines) tree.\n */\nexport const searchTree = (\n  searchValue,\n  tree,\n  currentNodeID = '__root__',\n  result = {}\n) => {\n  const treeNode = tree[currentNodeID];\n  if (!treeNode) {\n    return false;\n  }\n\n  const foundChildren = [];\n\n  for (const childNode of treeNode.children) {\n    if (isTreeLeaf(childNode)) {\n      // if the child node is a leaf, simply search the leaf's name\n      // and add to the search result if there is a match.\n      const found = searchString(childNode.data.name, searchValue);\n      if (found) {\n        foundChildren.push({\n          ...childNode,\n          data: {\n            ...childNode.data,\n            highlightedLabel: getHighlightedText(\n              childNode.data.name,\n              searchValue\n            ),\n          },\n        });\n      }\n    } else {\n      // if the child node is a tree, recursively search it\n      // and add the child node to the list of found children\n      // if there is a matching value in its tree.\n      const found = searchTree(searchValue, tree, childNode.id, result);\n      if (found) {\n        foundChildren.push({\n          ...childNode,\n          highlightedLabel: getHighlightedText(\n            result[childNode.id]?.name || '',\n            searchValue\n          ),\n        });\n      }\n    }\n  }\n\n  if (foundChildren.length > 0 || searchString(treeNode.name, searchValue)) {\n    result[currentNodeID] = {\n      ...treeNode,\n      highlightedLabel: getHighlightedText(treeNode.name, searchValue),\n      children: foundChildren,\n    };\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Search a given value in a modularPipelinesTree\n * and return a tree structure containing the searchResult.\n * @param {Object} modularPipelinesTree the modular pipelines tree to search in.\n * @param {String} searchValue the value to search for in the given modular pipelines tree.\n * @return {Object} a tree structure containing the searchResult.\n */\nexport const getModularPipelinesSearchResult = (\n  modularPipelinesTree,\n  searchValue\n) => {\n  if (!modularPipelinesTree) {\n    return {};\n  }\n  const searchResult = {};\n  searchTree(searchValue, modularPipelinesTree, '__root__', searchResult);\n  return searchResult;\n};\n","import { createSelector } from 'reselect';\nimport { getPipelineTagIDs } from './pipeline';\n\nconst getNodeTags = (state) => state.node.tags;\nconst getTagName = (state) => state.tag.name;\nconst getTagActive = (state) => state.tag.active;\nconst getTagEnabled = (state) => state.tag.enabled;\n\n/**\n * Retrieve the formatted list of tag filters\n */\nexport const getTagData = createSelector(\n  [getPipelineTagIDs, getTagName, getTagActive, getTagEnabled],\n  (tagIDs, tagName, tagActive, tagEnabled) =>\n    tagIDs.sort().map((id) => ({\n      id,\n      name: tagName[id],\n      active: Boolean(tagActive[id]),\n      enabled: Boolean(tagEnabled[id]),\n    }))\n);\n\n/**\n * Get the total and enabled number of tags\n */\nexport const getTagCount = createSelector(\n  [getPipelineTagIDs, getTagEnabled],\n  (tagIDs, tagEnabled) => ({\n    total: tagIDs.length,\n    enabled: tagIDs.filter((id) => tagEnabled[id]).length,\n  })\n);\n\n/**\n * Get the total number of nodes for each tag\n */\nexport const getTagNodeCounts = createSelector([getNodeTags], (nodeTags) => {\n  const counts = {};\n\n  for (const tagIds of Object.values(nodeTags)) {\n    for (const tagId of tagIds) {\n      counts[tagId] = counts[tagId] + 1 || 1;\n    }\n  }\n\n  return counts;\n});\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getNodeDisabledPipeline, getPipelineNodeIDs } from './pipeline';\nimport {\n  getFocusedModularPipeline,\n  getModularPipelinesTree,\n} from './modular-pipelines';\nimport { getTagCount } from './tags';\n\nconst getNodeIDs = (state) => state.node.ids;\nconst getNodeDisabledNode = (state) => state.node.disabled;\nconst getDisabledModularPipeline = (state) => state.modularPipeline.disabled;\nconst getNodeTags = (state) => state.node.tags;\nconst getNodeType = (state) => state.node.type;\nconst getTagEnabled = (state) => state.tag.enabled;\nconst getNodeTypeDisabled = (state) => state.nodeType.disabled;\nconst getEdgeIDs = (state) => state.edge.ids;\nconst getEdgeSources = (state) => state.edge.sources;\nconst getEdgeTargets = (state) => state.edge.targets;\nconst getLayerIDs = (state) => state.layer.ids;\nconst getLayersVisible = (state) => state.layer.visible;\nconst getNodeLayer = (state) => state.node.layer;\nconst getNodeModularPipelines = (state) => state.node.modularPipelines;\nconst getVisibleSidebarNodes = (state) => state.modularPipeline.visible;\n\n/**\n * Return all inputs and outputs of currently visible modular pipelines\n * so that even if they are not expanded, their inputs and outputs are still rendered.\n */\nconst getVisibleModularPipelineInputsOutputs = createSelector(\n  [getVisibleSidebarNodes, getModularPipelinesTree],\n  (visibleSidebarNodes, modularPipelineData) => {\n    const result = new Set();\n    for (const nodeID in visibleSidebarNodes) {\n      if (visibleSidebarNodes[nodeID] && nodeID in modularPipelineData) {\n        [\n          ...modularPipelineData[nodeID].inputs,\n          ...modularPipelineData[nodeID].outputs,\n        ].forEach((nodeID) => result.add(nodeID));\n      }\n    }\n    return result;\n  }\n);\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledTag = createSelector(\n  [getNodeIDs, getTagEnabled, getTagCount, getNodeTags],\n  (nodeIDs, tagEnabled, tagCount, nodeTags) =>\n    arrayToObject(nodeIDs, (nodeID) => {\n      if (tagCount.enabled === 0) {\n        return false;\n      }\n      if (nodeTags[nodeID].length) {\n        // Hide task nodes that don't have at least one tag filter enabled\n        return !nodeTags[nodeID].some((tag) => tagEnabled[tag]);\n      }\n      return true;\n    })\n);\n\n/**\n * Set disabled status if the node is specifically hidden, and/or via a tag/view/type/modularPipeline\n */\nexport const getNodeDisabled = createSelector(\n  [\n    getNodeIDs,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeDisabledPipeline,\n    getNodeType,\n    getNodeTypeDisabled,\n    getNodeModularPipelines,\n    getModularPipelinesTree,\n    getFocusedModularPipeline,\n    getVisibleSidebarNodes,\n    getVisibleModularPipelineInputsOutputs,\n    getDisabledModularPipeline,\n  ],\n  (\n    nodeIDs,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    nodeDisabledPipeline,\n    nodeType,\n    typeDisabled,\n    nodeModularPipelines,\n    modularPipelinesTree,\n    focusedModularPipeline,\n    visibleSidebarNodes,\n    visibleModularPipelineInputsOutputs,\n    disabledModularPipeline\n  ) =>\n    arrayToObject(nodeIDs, (id) => {\n      let isDisabledViaModularPipeline =\n        disabledModularPipeline[nodeModularPipelines[id]];\n\n      const isDisabledViaSidebar =\n        !visibleSidebarNodes[id] &&\n        !visibleModularPipelineInputsOutputs.has(id);\n\n      let isDisabledViaFocusedModularPipeline = false;\n      if (focusedModularPipeline) {\n        const inputOutputNodeIDs = [\n          ...modularPipelinesTree[focusedModularPipeline.id].inputs,\n          ...modularPipelinesTree[focusedModularPipeline.id].outputs,\n        ];\n        if (nodeType[id] === 'modularPipeline') {\n          isDisabledViaFocusedModularPipeline =\n            id !== focusedModularPipeline.id &&\n            !id.startsWith(`${focusedModularPipeline.id}.`);\n        } else {\n          isDisabledViaFocusedModularPipeline =\n            !nodeModularPipelines[id].includes(focusedModularPipeline.id) &&\n            !inputOutputNodeIDs.includes(id);\n        }\n      }\n      return [\n        nodeDisabledNode[id],\n        nodeDisabledTag[id],\n        nodeDisabledPipeline[id],\n        disabledModularPipeline[id],\n        typeDisabled[nodeType[id]],\n        isDisabledViaSidebar,\n        isDisabledViaModularPipeline,\n        isDisabledViaFocusedModularPipeline,\n      ].some(Boolean);\n    })\n);\n\n/**\n * Get a list of just the IDs for the remaining visible nodes\n */\nexport const getVisibleNodeIDs = createSelector(\n  [getPipelineNodeIDs, getNodeDisabled],\n  (nodeIDs, nodeDisabled) => {\n    return nodeIDs.filter((id) => !nodeDisabled[id]);\n  }\n);\n\n/**\n * Get a list of just the IDs for the remaining visible layers\n */\nexport const getVisibleLayerIDs = createSelector(\n  [getVisibleNodeIDs, getNodeLayer, getLayerIDs, getLayersVisible],\n  (nodeIDs, nodeLayer, layerIDs, layersVisible) => {\n    if (!layersVisible) {\n      return [];\n    }\n    const visibleLayerIDs = {};\n    for (const nodeID of nodeIDs) {\n      visibleLayerIDs[nodeLayer[nodeID]] = true;\n    }\n    return layerIDs.filter((layerID) => visibleLayerIDs[layerID]);\n  }\n);\n\n/**\n * Determine whether an edge should be disabled based on their source/target nodes\n */\nexport const getEdgeDisabled = createSelector(\n  [getEdgeIDs, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (edgeIDs, nodeDisabled, edgeSources, edgeTargets) =>\n    arrayToObject(edgeIDs, (edgeID) => {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      return Boolean(nodeDisabled[source] || nodeDisabled[target]);\n    })\n);\n","import { shortTypeMapping } from '../config';\n\nconst getShortType = (longTypeName, fallback) =>\n  shortTypeMapping[longTypeName] || fallback;\n\nexport default getShortType;\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled, getEdgeDisabled } from './disabled';\nimport { getFocusedModularPipeline } from './modular-pipelines';\n\nconst getNodeIDs = (state) => state.node.ids;\nconst getEdgeIDs = (state) => state.edge.ids;\nconst getEdgeSources = (state) => state.edge.sources;\nconst getEdgeTargets = (state) => state.edge.targets;\nconst getNodeModularPipelines = (state) => state.node.modularPipelines;\nconst getVisibleSidebarNodes = (state) => state.modularPipeline.visible;\n\n/**\n * Create a new transitive edge from the first and last edge in the path\n * @param {String} target Node ID for the new edge\n * @param {String} source Node ID for the new edge\n * @param {Object} transitiveEdges Store of existing edges\n */\nexport const addNewEdge = (source, target, { edgeIDs, sources, targets }) => {\n  const id = [source, target].join('|');\n  if (!edgeIDs.includes(id)) {\n    edgeIDs.push(id);\n    sources[id] = source;\n    targets[id] = target;\n  }\n};\n\n/**\n * Create new edges to connect nodes which have a disabled node (or nodes)\n * in between them\n */\nexport const getTransitiveEdges = createSelector(\n  [\n    getNodeIDs,\n    getEdgeIDs,\n    getNodeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getFocusedModularPipeline,\n    getNodeModularPipelines,\n    getVisibleSidebarNodes,\n  ],\n  (\n    nodeIDs,\n    edgeIDs,\n    nodeDisabled,\n    edgeSources,\n    edgeTargets,\n    focusedModularPipeline,\n    nodeModularPipelines,\n    visibleModularPipelines\n  ) => {\n    const transitiveEdges = {\n      edgeIDs: [],\n      sources: {},\n      targets: {},\n    };\n\n    /**\n     * Recursively walk through the graph, stepping over disabled nodes,\n     * generating a list of nodes visited so far, and create transitive edges\n     * for each path that visits disabled nodes between enabled nodes.\n     * @param {Array} path The route that has been explored so far\n     */\n    const walkGraphEdges = (path) => {\n      edgeIDs.forEach((edgeID) => {\n        const source = path[path.length - 1];\n        // Filter to only edges where the source node is the previous target\n        if (edgeSources[edgeID] !== source) {\n          return;\n        }\n        const target = edgeTargets[edgeID];\n\n        if (!visibleModularPipelines[target]) {\n          return;\n        }\n\n        // Further filter out connections between indicative input / output nodes under focus mode\n        const isNotInputEdge =\n          focusedModularPipeline !== null &&\n          !nodeModularPipelines[source].includes(focusedModularPipeline.id) &&\n          !nodeModularPipelines[target].includes(focusedModularPipeline.id);\n\n        if (nodeDisabled[target]) {\n          // If target node is disabled then keep walking the graph\n          walkGraphEdges(path.concat(target));\n        } else if (path.length > 1 && !isNotInputEdge) {\n          // Else only create a new edge if there would be 3 or more nodes in the path\n          addNewEdge(path[0], target, transitiveEdges);\n        }\n      });\n    };\n\n    // Only run walk if some nodes are disabled\n    if (nodeIDs.some((nodeID) => nodeDisabled[nodeID])) {\n      // Examine the children of every enabled node. The walk only needs\n      // to be run in a single direction (i.e. top down), because links\n      // that end in a terminus can never be transitive.\n      nodeIDs.forEach((nodeID) => {\n        if (!nodeDisabled[nodeID]) {\n          walkGraphEdges([nodeID]);\n        }\n      });\n    }\n\n    return transitiveEdges;\n  }\n);\n\n/**\n * Get only the visible edges (plus transitive edges),\n * and return them formatted as an array of objects\n */\nexport const getVisibleEdges = createSelector(\n  [\n    getEdgeIDs,\n    getEdgeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getTransitiveEdges,\n  ],\n  (edgeIDs, edgeDisabled, edgeSources, edgeTargets, transitiveEdges) =>\n    edgeIDs\n      .filter((id) => !edgeDisabled[id])\n      .concat(transitiveEdges.edgeIDs)\n      .map((id) => ({\n        id,\n        source: edgeSources[id] || transitiveEdges.sources[id],\n        target: edgeTargets[id] || transitiveEdges.targets[id],\n      }))\n);\n\n/**\n * Obtain all the edges that belongs to input and output data\n * nodes when under focus mode.\n */\nexport const getInputOutputDataEdges = createSelector(\n  [getVisibleEdges, getNodeModularPipelines, getFocusedModularPipeline],\n  (visibleEdges, nodeModularPipelines, focusedModularPipeline) => {\n    const edgesList = {};\n    if (focusedModularPipeline !== null) {\n      visibleEdges.forEach((edge) => {\n        if (\n          !nodeModularPipelines[edge.source]?.includes(\n            focusedModularPipeline.id\n          ) ||\n          !nodeModularPipelines[edge.target]?.includes(\n            focusedModularPipeline.id\n          )\n        ) {\n          edgesList[edge.id] = edge;\n        }\n      });\n    }\n\n    return edgesList;\n  }\n);\n","import { createSelector } from 'reselect';\nimport batchingToposort from 'batching-toposort';\nimport { getVisibleNodeIDs, getVisibleLayerIDs } from './disabled';\nimport { getVisibleEdges } from './edges';\n\nconst getNodeLayer = (state) => state.node.layer;\n\n/**\n * Get list of visible nodes for each visible layer\n */\nexport const getLayerNodes = createSelector(\n  [getVisibleNodeIDs, getVisibleLayerIDs, getNodeLayer],\n  (nodeIDs, layerIDs, nodeLayer) => {\n    if (!layerIDs.length) {\n      return [];\n    }\n    // Create object containing a list of every node for each layer\n    const layerNodes = {};\n    for (const nodeID of nodeIDs) {\n      const layer = nodeLayer[nodeID];\n      if (!layerNodes[layer]) {\n        layerNodes[layer] = [];\n      }\n      layerNodes[layer].push(nodeID);\n    }\n\n    // Convert to a nested array of layers of nodes\n    return layerIDs.map((layerID) => layerNodes[layerID]);\n  }\n);\n\n/**\n * Calculate ranks (vertical placement) for each node,\n * by toposorting while taking layers into account\n */\nexport const getNodeRank = createSelector(\n  [getVisibleNodeIDs, getVisibleEdges, getLayerNodes, getVisibleLayerIDs],\n  (nodeIDs, edges, layerNodes, layerIDs) => {\n    if (!layerIDs.length) {\n      return {};\n    }\n\n    // For each node, create a list of nodes that depend on that node\n    const nodeDeps = {};\n\n    // Initialise empty dependency arrays for each node\n    for (const nodeID of nodeIDs) {\n      nodeDeps[nodeID] = [];\n    }\n\n    // Add dependencies for visible edges\n    for (const edge of edges) {\n      nodeDeps[edge.source].push(edge.target);\n    }\n\n    // Add \"false edge\" dependencies for layered nodes to prevent layer overlaps\n    for (let i = 1; i < layerNodes.length; i++) {\n      for (const sourceID of layerNodes[i - 1]) {\n        for (const targetID of layerNodes[i]) {\n          nodeDeps[sourceID].push(targetID);\n        }\n      }\n    }\n\n    // Run toposort algorithm to rank nodes by dependency\n    const toposortedNodes = batchingToposort(nodeDeps);\n\n    // Convert toposort order into rank numbering\n    const nodeRanks = {};\n    for (let rank = 0; rank < toposortedNodes.length; rank++) {\n      for (const nodeID of toposortedNodes[rank]) {\n        nodeRanks[nodeID] = rank;\n      }\n    }\n\n    return nodeRanks;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { select } from 'd3-selection';\nimport { arrayToObject } from '../utils';\nimport { getPipelineNodeIDs } from './pipeline';\nimport {\n  getNodeDisabled,\n  getNodeDisabledTag,\n  getVisibleNodeIDs,\n} from './disabled';\nimport getShortType from '../utils/short-type';\nimport { getNodeRank } from './ranks';\n\nconst getNodeName = (state) => state.node.name;\nconst getNodeFullName = (state) => state.node.fullName;\nconst getNodeDisabledNode = (state) => state.node.disabled;\nconst getModularPipelineDisabled = (state) => state.modularPipeline.disabled;\nconst getNodeTags = (state) => state.node.tags;\nexport const getNodeModularPipelines = (state) => state.node.modularPipelines;\nconst getNodeType = (state) => state.node.type;\nconst getNodeDatasetType = (state) => state.node.datasetType;\nconst getNodeLayer = (state) => state.node.layer;\nconst getHoveredNode = (state) => state.node.hovered;\nconst getPrettyName = (state) => state.prettyName;\nconst getTagActive = (state) => state.tag.active;\nconst getModularPipelineActive = (state) => state.modularPipeline.active;\nconst getTextLabels = (state) => state.textLabels;\nconst getNodeTypeDisabled = (state) => state.nodeType.disabled;\nconst getClickedNode = (state) => state.node.clicked;\nconst getEdgeIDs = (state) => state.edge.ids;\nconst getEdgeSources = (state) => state.edge.sources;\nconst getEdgeTargets = (state) => state.edge.targets;\n\n/**\n * Gets a map of nodeIds to graph nodes\n */\nexport const getGraphNodes = createSelector(\n  [(state) => state.graph.nodes],\n  (nodes = []) =>\n    nodes.reduce((result, node) => {\n      result[node.id] = node;\n      return result;\n    }, {})\n);\n\n/**\n * Set active status if the node is specifically highlighted, and/or via an associated tag or modular pipeline\n */\nexport const getNodeActive = createSelector(\n  [\n    getPipelineNodeIDs,\n    getHoveredNode,\n    getNodeTags,\n    getTagActive,\n    getNodeModularPipelines,\n    getModularPipelineActive,\n    (state) => state.modularPipeline.tree,\n  ],\n  (\n    nodeIDs,\n    hoveredNode,\n    nodeTags,\n    tagActive,\n    nodeModularPipelines,\n    modularPipelineActive,\n    modularPipelinesTree\n  ) => {\n    const activeModularPipelines = Object.keys(modularPipelineActive).filter(\n      (modularPipelineID) => modularPipelineActive[modularPipelineID]\n    );\n    const nodesActiveViaModularPipeline = activeModularPipelines.flatMap((id) =>\n      modularPipelinesTree[id].children.map((child) => child.id)\n    );\n\n    return arrayToObject(nodeIDs, (nodeID) => {\n      if (nodeID === hoveredNode) {\n        return true;\n      }\n      const activeViaTag = nodeTags[nodeID].some((tag) => tagActive[tag]);\n      const activeModularPipeline = activeModularPipelines.includes(nodeID);\n      const activeViaModularPipeline =\n        nodesActiveViaModularPipeline.includes(nodeID) ||\n        (nodeModularPipelines[nodeID] &&\n          nodeModularPipelines[nodeID].some(\n            (modularPipeline) => modularPipelineActive[modularPipeline]\n          ));\n      return (\n        Boolean(activeViaTag) ||\n        Boolean(activeViaModularPipeline) ||\n        Boolean(activeModularPipeline)\n      );\n    });\n  }\n);\n\n/**\n * Set selected status if the node is clicked\n */\nexport const getNodeSelected = createSelector(\n  [getPipelineNodeIDs, getClickedNode, getNodeDisabled],\n  (nodeIDs, clickedNode, nodeDisabled) =>\n    arrayToObject(\n      nodeIDs,\n      (nodeID) => nodeID === clickedNode && !nodeDisabled[nodeID]\n    )\n);\n\n/**\n * Returns node label based on if pretty name is turned on/off\n */\nexport const getNodeLabel = createSelector(\n  [getPrettyName, getNodeName, getNodeFullName],\n  (prettyName, nodeName, nodeFullName) => (prettyName ? nodeName : nodeFullName)\n);\n\n/**\n * Returns formatted nodes as an array, with all relevant properties\n */\nexport const getNodeData = createSelector(\n  [\n    getPipelineNodeIDs,\n    getNodeLabel,\n    getNodeType,\n    getNodeDatasetType,\n    getNodeDisabled,\n    getModularPipelineDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeTypeDisabled,\n    getNodeModularPipelines,\n  ],\n  (\n    nodeIDs,\n    nodeLabel,\n    nodeType,\n    nodeDatasetType,\n    nodeDisabled,\n    modularPipelineDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    typeDisabled,\n    nodeModularPipelines\n  ) =>\n    nodeIDs\n      .sort((a, b) => {\n        if (nodeLabel[a] < nodeLabel[b]) {\n          return -1;\n        }\n        if (nodeLabel[a] > nodeLabel[b]) {\n          return 1;\n        }\n        return 0;\n      })\n      .map((id) => ({\n        id,\n        name: nodeLabel[id],\n        type: nodeType[id],\n        icon: getShortType(nodeDatasetType[id], nodeType[id]),\n        modularPipelines: nodeModularPipelines[id],\n        disabled: nodeDisabled[id],\n        disabledModularPipeline: Boolean(modularPipelineDisabled[id]),\n        disabledNode: Boolean(nodeDisabledNode[id]),\n        disabledTag: nodeDisabledTag[id],\n        disabledType: Boolean(typeDisabled[nodeType[id]]),\n      }))\n);\n\n/**\n * Returns formatted nodes as an object, with all relevant properties.\n * This is similar to `getNodeData`, but instead of returning an Array,\n * it returns all nodes as an Object.\n */\nexport const getNodeDataObject = createSelector(\n  [\n    getPipelineNodeIDs,\n    getNodeLabel,\n    getNodeType,\n    getNodeDatasetType,\n    getNodeDisabled,\n    getModularPipelineDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeTypeDisabled,\n    getNodeModularPipelines,\n  ],\n  (\n    nodeIDs,\n    nodeLabel,\n    nodeType,\n    nodeDatasetType,\n    nodeDisabled,\n    modularPipelineDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    typeDisabled,\n    nodeModularPipelines\n  ) =>\n    nodeIDs.reduce((obj, id) => {\n      obj[id] = {\n        id,\n        name: nodeLabel[id],\n        type: nodeType[id],\n        icon: getShortType(nodeDatasetType[id], nodeType[id]),\n        modularPipelines: nodeModularPipelines[id],\n        disabled: nodeDisabled[id],\n        disabledModularPipeline: Boolean(modularPipelineDisabled[id]),\n        disabledNode: Boolean(nodeDisabledNode[id]),\n        disabledTag: Boolean(nodeDisabledTag[id]),\n        disabledType: Boolean(typeDisabled[nodeType[id]]),\n      };\n      return obj;\n    }, {})\n);\n\n/**\n * Return the modular pipelines tree with full data for each tree node for display.\n */\nexport const getModularPipelinesTree = createSelector(\n  [(state) => state.modularPipeline.tree, getNodeDataObject],\n  (modularPipelinesTree, nodes) => {\n    if (!modularPipelinesTree) {\n      return {};\n    }\n    for (const modularPipelineID in modularPipelinesTree) {\n      modularPipelinesTree[modularPipelineID].data = {\n        ...nodes[modularPipelineID],\n      };\n      for (const child of modularPipelinesTree[modularPipelineID].children) {\n        child.data = { ...nodes[child.id] };\n      }\n    }\n    return modularPipelinesTree;\n  }\n);\n\n/**\n * Returns formatted nodes grouped by type\n */\nexport const getGroupedNodes = createSelector([getNodeData], (nodes) =>\n  nodes.reduce(function (obj, item) {\n    const key = item.type;\n    if (!obj.hasOwnProperty(key)) {\n      obj[key] = [];\n    }\n    obj[key].push(item);\n    return obj;\n  }, {})\n);\n\n/**\n * Temporarily create a new SVG container in the DOM, write a node to it,\n * measure its width with getBBox, then delete the container and store the value\n */\nexport const getNodeTextWidth = createSelector(\n  [getPipelineNodeIDs, getNodeLabel],\n  (nodeIDs, nodeLabel) => {\n    const nodeTextWidth = {};\n    const svg = select(document.body)\n      .append('svg')\n      .attr('class', 'kedro pipeline-node');\n    svg\n      .selectAll('text')\n      .data(nodeIDs)\n      .enter()\n      .append('text')\n      .text((nodeID) => nodeLabel[nodeID])\n      .each(function (nodeID) {\n        const width = this.getBBox ? this.getBBox().width : 0;\n        nodeTextWidth[nodeID] = width;\n      });\n    svg.remove();\n    return nodeTextWidth;\n  }\n);\n\n/**\n * Get the top/bottom and left/right padding for a node\n * @param {Boolean} showLabels Whether labels are visible\n * @param {Boolean} isTask Whether the node is a task type (vs data/params)\n */\nexport const getPadding = (showLabels, nodeType) => {\n  if (showLabels) {\n    switch (nodeType) {\n      case 'modularPipeline':\n        return { x: 30, y: 22 };\n      case 'task':\n        return { x: 16, y: 10 };\n      default:\n        return { x: 20, y: 10 };\n    }\n  }\n  switch (nodeType) {\n    case 'modularPipeline':\n      return { x: 25, y: 25 };\n    case 'task':\n      return { x: 14, y: 14 };\n    default:\n      return { x: 16, y: 16 };\n  }\n};\n\n/**\n * Calculate node width/height and icon/text positioning\n */\nexport const getNodeSize = createSelector(\n  [getPipelineNodeIDs, getNodeTextWidth, getTextLabels, getNodeType],\n  (nodeIDs, nodeTextWidth, textLabels, nodeType) => {\n    return arrayToObject(nodeIDs, (nodeID) => {\n      const iconSize = textLabels ? 24 : 28;\n      const padding = getPadding(textLabels, nodeType[nodeID]);\n      const textWidth = textLabels ? nodeTextWidth[nodeID] : 0;\n      const textGap = textLabels ? 6 : 0;\n      const innerWidth = iconSize + textWidth + textGap;\n      return {\n        showText: textLabels,\n        width: innerWidth + padding.x * 2,\n        height: iconSize + padding.y * 2,\n        textOffset: (innerWidth - textWidth) / 2 - 1,\n        iconOffset: -innerWidth / 2,\n        iconSize,\n      };\n    });\n  }\n);\n\n/**\n * Returns only visible nodes as an array, but without any extra properties\n * that are unnecessary for the chart layout calculation\n */\nexport const getVisibleNodes = createSelector(\n  [\n    getVisibleNodeIDs,\n    getNodeLabel,\n    getNodeType,\n    getNodeDatasetType,\n    getNodeFullName,\n    getNodeSize,\n    getNodeLayer,\n    getNodeRank,\n  ],\n  (\n    nodeIDs,\n    nodeLabel,\n    nodeType,\n    nodeDatasetType,\n    nodeFullName,\n    nodeSize,\n    nodeLayer,\n    nodeRank\n  ) =>\n    nodeIDs.map((id) => ({\n      id,\n      name: nodeLabel[id],\n      fullName: nodeFullName[id],\n      icon: getShortType(nodeDatasetType[id], nodeType[id]),\n      type: nodeType[id],\n      layer: nodeLayer[id],\n      rank: nodeRank[id],\n      ...nodeSize[id],\n    }))\n);\n\n/**\n * Returns a map of task nodeIDs to graph nodes that have parameter nodes as their source\n */\n\nexport const getNodesWithInputParams = createSelector(\n  [\n    getGraphNodes,\n    getNodeName,\n    getEdgeIDs,\n    getNodeType,\n    getEdgeSources,\n    getEdgeTargets,\n  ],\n  (nodes, nodeName, edgeIDs, nodeType, edgeSources, edgeTargets) => {\n    const nodesList = {};\n    for (const edgeID of edgeIDs) {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      if (nodeType[source] === 'parameters' && nodeType[target] === 'task') {\n        if (!nodesList[target]) {\n          nodesList[target] = [];\n        }\n        nodesList[target].push(nodeName[source]);\n      }\n    }\n    return nodesList;\n  }\n);\n\n/**\n * Returns a list of dataset nodes that are input and output nodes of the modular pipeline under focus mode\n */\nexport const getInputOutputNodesForFocusedModularPipeline = createSelector(\n  [\n    (state) => state.visible.modularPipelineFocusMode?.id,\n    getGraphNodes,\n    getModularPipelinesTree,\n  ],\n  (focusedModularPipelineID, graphNodes, modularPipelinesTree) => {\n    const focusedModularPipeline = focusedModularPipelineID\n      ? modularPipelinesTree[focusedModularPipelineID]\n      : null;\n    const nodeIDs = focusedModularPipeline\n      ? [...focusedModularPipeline.inputs, ...focusedModularPipeline.outputs]\n      : [];\n    const result = nodeIDs.reduce((result, nodeID) => {\n      result[nodeID] = graphNodes[nodeID];\n      return result;\n    }, {});\n    return result;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getNodeLabel } from './nodes';\nconst getClickedNode = (state) => state.node.clicked;\n/**\n * Comparison for sorting alphabetically by name, otherwise by value\n */\nconst sortAlpha = (a, b) => (a.name || a).localeCompare(b.name || b);\n\n/**\n * Returns true if metadata sidebar is visible\n */\nexport const getVisibleMetaSidebar = createSelector(\n  [getClickedNode],\n  (nodeClicked) => Boolean(nodeClicked)\n);\n\n/**\n * Gets metadata for the currently clicked node if any\n */\nexport const getClickedNodeMetaData = createSelector(\n  [\n    getClickedNode,\n    getNodeLabel,\n    (state) => state.node.type,\n    (state) => state.node.tags,\n    (state) => state.tag.name,\n    (state) => state.pipeline,\n    (state) => state.node.filepath,\n    (state) => state.node.inputs,\n    (state) => state.node.outputs,\n    (state) => state.node.code,\n    (state) => state.node.parameters,\n    (state) => state.node.plot,\n    (state) => state.node.image,\n    (state) => state.node.trackingData,\n    (state) => state.node.datasetType,\n    (state) => state.node.originalType,\n    (state) => state.node.transcodedTypes,\n    (state) => state.node.runCommand,\n  ],\n  (\n    nodeId,\n    nodeLabel,\n    nodeType,\n    nodeTags,\n    tagNames,\n    pipeline,\n    nodeFilepaths,\n    nodeInputs,\n    nodeOutputs,\n    nodeCodes,\n    nodeParameters,\n    nodePlot,\n    nodeImage,\n    nodeTrackingData,\n    nodeDatasetTypes,\n    nodeOriginalTypes,\n    nodeTranscodedTypes,\n    nodeRunCommand\n  ) => {\n    if (!nodeId || Object.keys(nodeType).length === 0) {\n      return null;\n    }\n    //rounding of tracking data\n    nodeTrackingData[nodeId] &&\n      Object.entries(nodeTrackingData[nodeId]).forEach(([key, value]) => {\n        if (typeof value === 'number') {\n          nodeTrackingData[nodeId][key] = Math.round(value * 100) / 100;\n        }\n      });\n\n    const metadata = {\n      id: nodeId,\n      name: nodeLabel[nodeId],\n      type: nodeType[nodeId],\n      tags: [...nodeTags[nodeId]]\n        .map((tagId) => tagNames[tagId])\n        .sort(sortAlpha),\n      pipeline: pipeline.name[pipeline.active],\n      parameters: nodeParameters[nodeId],\n      runCommand: nodeRunCommand[nodeId],\n      code: nodeCodes[nodeId],\n      filepath: nodeFilepaths[nodeId],\n      plot: nodePlot[nodeId],\n      image: nodeImage[nodeId],\n      trackingData: nodeTrackingData[nodeId],\n      datasetType: nodeDatasetTypes[nodeId],\n      originalType: nodeOriginalTypes[nodeId],\n      transcodedTypes: nodeTranscodedTypes[nodeId],\n      inputs: nodeInputs[nodeId],\n      outputs: nodeOutputs[nodeId],\n    };\n\n    return metadata;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getVisibleNodes } from './nodes';\nimport { getVisibleEdges } from './edges';\nimport { getVisibleLayerIDs } from './disabled';\nimport { getVisibleMetaSidebar } from './metadata';\nimport {\n  sidebarWidth,\n  metaSidebarWidth,\n  chartMinWidthScale,\n  largeGraphThreshold,\n  codeSidebarWidth,\n} from '../config';\n\nconst getSizeWarningFlag = (state) => state.flags.sizewarning;\nconst getVisibleSidebar = (state) => state.visible.sidebar;\nconst getVisibleCode = (state) => state.visible.code;\nconst getIgnoreLargeWarning = (state) => state.ignoreLargeWarning;\nconst getGraphHasNodes = (state) => Boolean(state.graph?.nodes?.length);\nconst getChartSizeState = (state) => state.chartSize;\n\n/**\n * Show the large graph warning only if there are sufficient nodes + edges,\n * and it hasn't been toggled off (by clicking the Render Anyway button), and\n * the graph layout hasn't already previously been calculated (due to a user\n * filtering the graph to a smaller subset), and the flag isn't set to false.\n */\nexport const getTriggerLargeGraphWarning = createSelector(\n  [\n    getVisibleNodes,\n    getVisibleEdges,\n    getIgnoreLargeWarning,\n    getGraphHasNodes,\n    getSizeWarningFlag,\n  ],\n  (nodes, edges, ignoreLargeWarning, graphHasNodes, sizeWarningFlag) =>\n    nodes.length + 1.5 * edges.length > largeGraphThreshold &&\n    !ignoreLargeWarning &&\n    !graphHasNodes &&\n    sizeWarningFlag\n);\n\n/**\n * Select a subset of state that is watched by graph layout calculators\n * and used to prepare state.graph via async web worker actions\n */\nexport const getGraphInput = createSelector(\n  [\n    getVisibleNodes,\n    getVisibleEdges,\n    getVisibleLayerIDs,\n    getTriggerLargeGraphWarning,\n  ],\n  (nodes, edges, layers, triggerLargeGraphWarning) => {\n    if (triggerLargeGraphWarning) {\n      return null;\n    }\n\n    return { nodes, edges, layers };\n  }\n);\n\n/**\n * Calculate the displayed width of a sidebar\n */\nexport const getSidebarWidth = (visible, { open, closed }) =>\n  visible ? open : closed;\n\n/**\n * Convert the DOMRect into an Object, mutate some of the properties,\n * and add some useful new ones\n */\nexport const getChartSize = createSelector(\n  [getVisibleSidebar, getVisibleMetaSidebar, getVisibleCode, getChartSizeState],\n  (visibleSidebar, visibleMetaSidebar, visibleCodeSidebar, chartSize) => {\n    const { left, top, width, height } = chartSize;\n    if (!width || !height) {\n      return {};\n    }\n\n    // Get the actual sidebar width\n    const sidebarWidthActual = getSidebarWidth(visibleSidebar, sidebarWidth);\n    const metaSidebarWidthActual = getSidebarWidth(\n      visibleMetaSidebar,\n      metaSidebarWidth\n    );\n    const codeSidebarWidthActual = getSidebarWidth(\n      visibleCodeSidebar,\n      codeSidebarWidth\n    );\n\n    // Find the resulting space for the chart\n    let chartWidth =\n      width -\n      sidebarWidthActual -\n      metaSidebarWidthActual -\n      codeSidebarWidthActual;\n\n    return {\n      left,\n      top,\n      outerWidth: width,\n      outerHeight: height,\n      height,\n      width: chartWidth,\n      minWidthScale: chartMinWidthScale,\n      sidebarWidth: sidebarWidthActual,\n      metaSidebarWidth: metaSidebarWidthActual,\n      codeSidebarWidth: codeSidebarWidthActual,\n    };\n  }\n);\n\n/**\n * Gets the current chart zoom\n */\nexport const getChartZoom = createSelector([(state) => state.zoom], (zoom) => ({\n  ...zoom,\n}));\n","import configureStore from './store';\n\nexport default configureStore;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport watch from 'redux-watch';\nimport reducer from '../reducers';\nimport { getGraphInput } from '../selectors/layout';\nimport { calculateGraph } from '../actions/graph';\nimport { saveState, pruneFalseyKeys } from './helpers';\n\n/**\n * Watch the getGraphInput selector, and dispatch an asynchronous action to\n * update state.graph via a web worker when it changes.\n * @param {Object} store Redux store\n */\nexport const updateGraphOnChange = (store) => {\n  const watchGraph = watch(() => getGraphInput(store.getState()));\n  store.subscribe(\n    watchGraph((graphInput) => {\n      store.dispatch(calculateGraph(graphInput));\n    })\n  );\n};\n\n/**\n * Save selected state properties to window.localStorage\n * @param {Object} state Redux state snapshot\n */\nconst saveStateToLocalStorage = (state) => {\n  // does not save modal state to localStorage\n  const {\n    exportModal,\n    metadataModal,\n    settingsModal,\n    modularPipelineFocusMode,\n    ...otherVisibleProps\n  } = state.visible;\n  saveState({\n    node: {\n      disabled: pruneFalseyKeys(state.node.disabled),\n    },\n    nodeType: {\n      disabled: state.nodeType.disabled,\n    },\n    pipeline: {\n      active: state.pipeline.active,\n    },\n    layer: {\n      visible: state.layer.visible,\n    },\n    tag: {\n      enabled: state.tag.enabled,\n    },\n    textLabels: state.textLabels,\n    visible: otherVisibleProps,\n    theme: state.theme,\n    prettyName: state.prettyName,\n    flags: state.flags,\n  });\n};\n\n/**\n * Configure initial state and create the Redux store\n * @param {Object} initialState Initial Redux state (from initial-state.js)\n * @param {Object} dataType type of pipeline data - \"static\" or \"json\" (if data is loaded from API)\n * @return {Object} Redux store\n */\nexport default function configureStore(initialState, dataType) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  // dispatch the calculateGraph action to ensure the graph nodes still gets rendered\n  // on initial load if data is loaded via data prop instead of fetching from Rest API\n  if (dataType !== 'json') {\n    store.dispatch(calculateGraph(getGraphInput(store.getState())));\n  }\n\n  updateGraphOnChange(store);\n  store.subscribe(() => {\n    saveStateToLocalStorage(store.getState());\n  });\n\n  return store;\n}\n","import { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\n\n/**\n * @param {Apollo query Object} query\n * @param {Apollo query options Object} options\n * @returns The data from the query, including error and loading states\n */\nexport const useApolloQuery = (query, options) => {\n  const [data, setData] = useState(undefined);\n  const {\n    subscribeToMore,\n    data: queryData,\n    error,\n    loading,\n  } = useQuery(query, options);\n\n  useEffect(() => {\n    if (queryData !== undefined) {\n      setData(queryData);\n    }\n  }, [queryData]);\n\n  return { subscribeToMore, data, error, loading };\n};\n","import fetch from 'cross-fetch';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n  split,\n} from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { replaceMatches } from '../utils';\n\nconst { host, pathname, protocol } = window.location;\nconst sanitizedPathname = replaceMatches(pathname, {\n  'experiment-tracking': '',\n});\n\nconst wsHost = process.env.NODE_ENV === 'development' ? 'localhost:4142' : host;\n\nconst wsProtocol = protocol === 'https:' ? 'wss:' : 'ws:';\n\nconst wsLink = new WebSocketLink({\n  uri: `${wsProtocol}//${wsHost}${sanitizedPathname}graphql`,\n  options: {\n    reconnect: true,\n  },\n});\n\nconst httpLink = createHttpLink({\n  // our graphql endpoint, normally here: http://localhost:4141/graphql\n  uri: `${sanitizedPathname}graphql`,\n  fetch,\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nexport const client = new ApolloClient({\n  connectToDevTools: true,\n  link: splitLink,\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    query: {\n      errorPolicy: 'all',\n    },\n    mutate: {\n      errorPolicy: 'all',\n    },\n  },\n});\n","import React from 'react';\nimport { ApolloProvider } from '@apollo/client';\nimport { client } from '../../apollo/config';\n\nexport const GraphQLProvider = ({ children }) => {\n  return (\n    <ApolloProvider client={client}>\n      <>{children}</>\n    </ApolloProvider>\n  );\n};\n","import gql from 'graphql-tag';\n\n/** query for runsList sidebar */\nexport const GET_RUNS = gql`\n  query getRunsList {\n    runsList {\n      bookmark\n      gitSha\n      id\n      title\n      notes\n    }\n  }\n`;\n\n/** query for runMetadata and runDataset components */\nexport const GET_RUN_DATA = gql`\n  query getRunData($runIds: [ID!]!, $showDiff: Boolean) {\n    runMetadata(runIds: $runIds) {\n      id\n      author\n      bookmark\n      gitBranch\n      gitSha\n      notes\n      runCommand\n      title\n    }\n    plots: runTrackingData(runIds: $runIds, showDiff: $showDiff, group: PLOT) {\n      ...trackingDatasetFields\n    }\n    metrics: runTrackingData(\n      runIds: $runIds\n      showDiff: $showDiff\n      group: METRIC\n    ) {\n      ...trackingDatasetFields\n    }\n    JSONData: runTrackingData(\n      runIds: $runIds\n      showDiff: $showDiff\n      group: JSON\n    ) {\n      ...trackingDatasetFields\n    }\n  }\n\n  fragment trackingDatasetFields on TrackingDataset {\n    data\n    datasetName\n    datasetType\n    runIds\n  }\n`;\n\n/** query for runMetricsData  */\nexport const GET_METRIC_PLOT_DATA = gql`\n  query getMetricPlotData($limit: Int) {\n    runMetricsData(limit: $limit) {\n      data\n    }\n  }\n`;\n\n/** query for obtaining installed and latest Kedro-Viz versions */\nexport const GET_VERSIONS = gql`\n  query getVersion {\n    version {\n      installed\n      isOutdated\n      latest\n    }\n  }\n`;\n","import React from 'react';\n\nconst ExperimentsIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M13 10V6h-2v4l-.766 2-.83 1.66 4.571-1.225-.218-.435L13 10zm1.889 4.261-6.68 1.79L7.235 18h9.526l-1.872-3.739zM20 20H4l4.999-10H9V6H8V4h8v2h-1v4h-.007L20 20z\" />\n  </svg>\n);\n\nexport default ExperimentsIcon;\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to obtain previous values before state changes. The value can be any data type.\n * @param {value} object\n */\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\n/**\n * Custom hook to detect clicks outside of a specified element.\n * @param {Function} callback The function to fire on an outside click.\n * @returns A React ref of the element you want to click outside of.\n */\nexport const useOutsideClick = (callback) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    const handleClick = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback();\n      }\n    };\n\n    document.addEventListener('click', handleClick, true);\n\n    return () => {\n      document.removeEventListener('click', handleClick, true);\n    };\n  }, [callback, ref]);\n\n  return ref;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './icon-button.css';\nimport { useOutsideClick } from '../../../utils/hooks';\n\nconst labelPositionTypes = ['right', 'left', 'bottom', 'top'];\n\n/**\n * Icon button component\n */\nconst IconButton = ({\n  active,\n  ariaLabel,\n  ariaLive,\n  children,\n  className,\n  container = 'li',\n  dataHeapEvent,\n  disabled,\n  icon,\n  labelText,\n  labelTextPosition = 'right',\n  onClick,\n  visible,\n}) => {\n  const Icon = icon;\n  let inTimeout;\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n\n  const labelPosition = labelPositionTypes.includes(\n    labelTextPosition.toLowerCase()\n  )\n    ? labelTextPosition.toLocaleLowerCase()\n    : 'right';\n\n  const clearLocalStorage = () => {\n    window.localStorage.removeItem('kedro-viz-tooltip-show');\n  };\n\n  useEffect(() => {\n    clearLocalStorage();\n  }, []);\n\n  const showTooltip = () => {\n    if (localStorage.getItem('kedro-viz-tooltip-show') === null) {\n      inTimeout = setTimeout(() => {\n        window.localStorage.setItem('kedro-viz-tooltip-show', true);\n        setIsTooltipVisible(true);\n      }, 1000);\n    } else {\n      setIsTooltipVisible(true);\n    }\n  };\n\n  const hideTooltip = () => {\n    clearTimeout(inTimeout);\n    setIsTooltipVisible(false);\n  };\n\n  const iconBtnRef = useOutsideClick(clearLocalStorage);\n\n  return visible ? (\n    <Wrapper container={container}>\n      <button\n        aria-label={ariaLabel}\n        aria-live={ariaLive}\n        className={classnames(className, {\n          'pipeline-icon-toolbar__button': true,\n          'pipeline-icon-toolbar__button--active': active,\n        })}\n        data-heap-event={dataHeapEvent}\n        disabled={disabled}\n        onClick={onClick}\n        onMouseEnter={showTooltip}\n        onMouseLeave={hideTooltip}\n        ref={iconBtnRef}\n      >\n        {Icon && <Icon className=\"pipeline-icon\" />}\n        {labelText && (\n          <span\n            className={classnames(\n              'pipeline-toolbar__label',\n              {\n                'pipeline-toolbar__label__visible': isTooltipVisible,\n              },\n              `pipeline-toolbar__label-${labelPosition}`\n            )}\n          >\n            {labelText}\n          </span>\n        )}\n      </button>\n      {children}\n    </Wrapper>\n  ) : null;\n};\n\nconst Wrapper = ({ children, container: Container = 'li' }) => {\n  if (typeof Container === 'symbol') {\n    return <React.Fragment>{children}</React.Fragment>;\n  } else {\n    return (\n      <Container className=\"pipeline-icon--container\">{children}</Container>\n    );\n  }\n};\n\nIconButton.propTypes = {\n  active: PropTypes.bool,\n  ariaLabel: PropTypes.string,\n  ariaLive: PropTypes.string,\n  children: PropTypes.node,\n  dataHeapEvent: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.func,\n  labelText: PropTypes.string,\n  onClick: PropTypes.func,\n  visible: PropTypes.bool,\n};\n\nIconButton.defaultProps = {\n  active: false,\n  ariaLabel: null,\n  ariaLive: null,\n  children: null,\n  dataHeapEvent: null,\n  disabled: false,\n  icon: null,\n  labelText: null,\n  onClick: null,\n  visible: true,\n};\n\nexport default IconButton;\n","import IconButton from './icon-button';\n\nexport default IconButton;\n","import React from 'react';\n\nconst LogoIcon = ({ className }) => (\n  <svg className={className} viewBox=\"24 25 32 30\">\n    <path\n      d=\"M40 25.414 54.586 40 40 54.586 25.414 40 40 25.414z\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n      stroke=\"#FFBC00\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nexport default LogoIcon;\n","import React from 'react';\n\nconst SettingsIcon = ({ className }) => (\n  <svg className={className} viewBox=\"-4 -4 24 24\">\n    <g>\n      <path d=\"M14.75 7L16.25 7 16.5 10 14.5 10z\" />\n      <path d=\"M0.75 7L2.25 7 2.5 10 0.5 10z\" />\n      <path d=\"M7.75 0L9.25 0 9.5 3 7.5 3z\" />\n      <path d=\"M7.75 14L9.25 14 9.5 17 7.5 17z\" />\n      <path d=\"M12.7 2.05L14.2 2.05 14.45 5.05 12.45 5.05z\" />\n      <path d=\"M2.8 11.95L4.3 11.95 4.55 14.95 2.55 14.95z\" />\n      <path d=\"M2.8 2.05L4.3 2.05 4.55 5.05 2.55 5.05z\" />\n      <path d=\"M12.7 11.95L14.2 11.95 14.45 14.95 12.45 14.95z\" />\n      <path d=\"M15.5 8.389c0 3.866-3.134 7-7 7s-7-3.134-7-7 3.134-7 7-7 7 3.134 7 7zm-2 0c0-2.762-2.239-5-5-5s-5 2.238-5 5c0 2.761 2.239 5 5 5s5-2.239 5-5z\" />\n    </g>\n  </svg>\n);\n\nexport default SettingsIcon;\n","import React from 'react';\n\nconst ThemeIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 3a9 9 0 110 18 9 9 0 010-18zm0 2v14a7 7 0 100-14z\" />\n  </svg>\n);\n\nexport default ThemeIcon;\n","import React from 'react';\n\nconst TreeIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 2a3 3 0 0 1 2.16 5.082l4.47 8.94a3 3 0 1 1-1.79.895l-4.469-8.94a3.03 3.03 0 0 1-.742 0l-4.47 8.94a3 3 0 1 1-1.789-.895l4.47-8.94A3 3 0 0 1 12 2z\" />\n  </svg>\n);\n\nexport default TreeIcon;\n","import GlobalToolbar from './global-toolbar';\n\nexport default GlobalToolbar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { toggleSettingsModal, toggleTheme } from '../../actions';\nimport { replaceMatches } from '../../utils';\nimport ExperimentsIcon from '../icons/experiments';\nimport IconButton from '../ui/icon-button';\nimport LogoIcon from '../icons/logo';\nimport SettingsIcon from '../icons/settings';\nimport ThemeIcon from '../icons/theme';\nimport TreeIcon from '../icons/tree';\n\nimport './global-toolbar.css';\n\n/**\n * Main controls for filtering the chart data\n * @param {Function} onToggleTheme Handle toggling theme between light/dark\n * @param {String} theme Kedro UI light/dark theme\n */\nexport const GlobalToolbar = ({\n  isOutdated,\n  onToggleSettingsModal,\n  onToggleTheme,\n  theme,\n}) => {\n  const { pathname } = window.location;\n  const sanitizedPathname = replaceMatches(pathname, {\n    'experiment-tracking': '',\n  });\n\n  return (\n    <>\n      <div className=\"pipeline-global-toolbar\">\n        <ul className=\"pipeline-global-routes-toolbar kedro\">\n          <IconButton\n            ariaLabel={'Kedro Viz logo and link'}\n            className={'pipeline-menu-button--logo pipeline-menu-button--large'}\n            disabled={false}\n            icon={LogoIcon}\n          />\n          <NavLink exact to={{ pathname: sanitizedPathname }}>\n            <IconButton\n              ariaLabel={'View your pipeline'}\n              className={\n                'pipeline-menu-button--large pipeline-menu-button--link'\n              }\n              disabled={false}\n              icon={TreeIcon}\n              labelText=\"Flowchart\"\n            />\n          </NavLink>\n          <NavLink\n            exact\n            to={{ pathname: `${sanitizedPathname}experiment-tracking` }}\n          >\n            <IconButton\n              ariaLabel={'View your experiments'}\n              className={\n                'pipeline-menu-button--large pipeline-menu-button--link'\n              }\n              disabled={false}\n              icon={ExperimentsIcon}\n              labelText=\"Experiment tracking\"\n            />\n          </NavLink>\n        </ul>\n        <ul className=\"pipeline-global-control-toolbar kedro\">\n          <IconButton\n            ariaLabel={`Change to ${\n              theme === 'light' ? 'dark' : 'light'\n            } theme`}\n            ariaLive=\"polite\"\n            className={\n              'pipeline-menu-button--theme pipeline-menu-button--large'\n            }\n            dataHeapEvent={`theme.${theme}`}\n            icon={ThemeIcon}\n            labelText=\"Toggle theme\"\n            onClick={() => onToggleTheme(theme === 'light' ? 'dark' : 'light')}\n          />\n          <IconButton\n            ariaLabel={'Change the settings flags'}\n            className={\n              'pipeline-menu-button--settings pipeline-menu-button--large'\n            }\n            disabled={false}\n            icon={SettingsIcon}\n            labelText={'Settings'}\n            onClick={() => onToggleSettingsModal(true)}\n          >\n            {isOutdated && <span className=\"update-reminder-dot\"></span>}\n          </IconButton>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  theme: state.theme,\n  visible: state.visible,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleSettingsModal: (value) => {\n    dispatch(toggleSettingsModal(value));\n  },\n  onToggleTheme: (value) => {\n    dispatch(toggleTheme(value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalToolbar);\n","import { createSelector } from 'reselect';\n\nconst getGraphLoading = (state) => state.loading.graph;\nconst getPipelineLoading = (state) => state.loading.pipeline;\nconst getNodeLoading = (state) => state.loading.node;\n\nexport const getDisplayLargeGraph = (state) => state.ignoreLargeWarning;\n\n/**\n * Determine whether to show the loading spinner\n */\nexport const isLoading = createSelector(\n  [getGraphLoading, getPipelineLoading, getNodeLoading],\n  (graphLoading, pipelineLoading, nodeLoading) => {\n    return graphLoading || pipelineLoading || nodeLoading;\n  }\n);\n","import Modal from './modal';\n\nexport default Modal;\n","import React, { useEffect } from 'react';\nimport classnames from 'classnames';\nimport './modal.css';\n\n/**\n * Generic Kedro Modal\n */\nconst Modal = ({ title, closeModal, visible, message, children }) => {\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      closeModal(true);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  return (\n    <div\n      className={classnames('modal', {\n        'modal--visible': visible,\n      })}\n      role=\"dialog\"\n    >\n      <div\n        onClick={closeModal}\n        className={classnames('modal__bg', {\n          'modal__bg--visible': visible,\n        })}\n      />\n      <div\n        className={classnames('modal__content', {\n          'modal__content--visible': visible,\n        })}\n      >\n        <div className=\"modal__wrapper\">\n          <div className=\"modal__title\">{title}</div>\n          {children}\n          {!children && <div className=\"modal__description\">{message}</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './button.css';\n\n/**\n * Generic Kedro Button\n */\nconst Button = ({ children, disabled, onClick, size, mode }) => (\n  <span className=\"kedro button\">\n    <button\n      className={classnames(\n        'button__btn',\n        `button__btn--${size}`,\n        `button__btn--${mode}`\n      )}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  </span>\n);\n\nButton.defaultProps = {\n  disabled: false,\n  mode: 'primary',\n  onClick: null,\n  size: 'regular',\n};\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  mode: PropTypes.oneOf(['primary', 'secondary', 'success']),\n  onClick: PropTypes.func,\n  size: PropTypes.oneOf(['regular', 'small']),\n};\n\nexport default Button;\n","import Button from './button';\n\nexport default Button;\n","import downloadSvg, { downloadPng } from 'svg-crowbar';\nimport { globalToolbarWidth } from '../../config';\n\n/**\n * Handle onClick for the SVG/PNG download button\n * @param {String} format Must be 'svg' or 'png'\n * @param {String} theme light/dark theme\n * @param {Object} graphSize Graph width/height/margin\n * @param {Function} mockFn Mock testing function stand-in for svg-crowbar\n * @return {Function} onClick handler\n */\nconst exportGraph = ({ format, theme, graphSize, mockFn }) => {\n  const downloadFormats = {\n    png: downloadPng,\n    svg: downloadSvg,\n  };\n  const download = mockFn || downloadFormats[format];\n\n  // Create clone of graph SVG to avoid breaking the original\n  const svg = document.querySelector('#pipeline-graph');\n  const clone = svg.parentNode.appendChild(svg.cloneNode(true));\n  clone.classList.add('kedro', `kui-theme--${theme}`, 'pipeline-graph--export');\n\n  // Reset zoom/translate\n  let width, height;\n  const hasGraph = isFinite(graphSize.width) && isFinite(graphSize.height);\n  if (hasGraph) {\n    width = graphSize.width + graphSize.marginx * 2;\n    height = graphSize.height + graphSize.marginy * 2;\n    clone.setAttribute('viewBox', `0 0 ${width} ${height}`);\n  }\n  clone.querySelector('#zoom-wrapper').removeAttribute('transform');\n  clone\n    .querySelector('#zoom-wrapper')\n    .setAttribute('transform', `translate(${globalToolbarWidth}, 0)`);\n\n  // Impose a maximum size on PNGs because otherwise they break when downloading\n  if (format === 'png') {\n    const maxWidth = 5000;\n    width = Math.min(width, maxWidth);\n    height = Math.min(height, maxWidth * (height / width));\n  }\n  if (hasGraph) {\n    clone.setAttribute('width', width);\n    clone.setAttribute('height', height);\n  }\n\n  const style = document.createElement('style');\n  if (format === 'svg') {\n    // Add webfont\n    style.innerHTML =\n      '@import url(https://fonts.googleapis.com/css?family=Titillium+Web:400);';\n  } else {\n    // Add websafe fallback font\n    style.innerHTML = `.kedro {\n      font-family: \"Trebuchet MS\", \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Tahoma, sans-serif;\n      letter-spacing: -0.4px;\n    }`;\n  }\n  clone.prepend(style);\n\n  // Download SVG/PNG\n  const options = format === 'svg' ? { css: 'internal' } : undefined;\n  download(clone, 'kedro-pipeline', options);\n\n  // Delete cloned SVG\n  svg.parentNode.removeChild(clone);\n};\n\nexport default exportGraph;\n","import ExportModal from './export-modal';\n\nexport default ExportModal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../ui/modal';\nimport Button from '../ui/button';\nimport { toggleExportModal } from '../../actions';\nimport exportGraph from './export-graph';\nimport './export-modal.css';\n\n/**\n * Modal to allow users to choose between SVG/PNG export formats\n */\nconst ExportModal = ({ graphSize, theme, onToggle, visible }) => {\n  if (!visible.exportBtn) {\n    return null;\n  }\n  return (\n    <Modal\n      closeModal={() => onToggle(false)}\n      title=\"Export pipeline visualisation\"\n      visible={visible.exportModal}\n    >\n      <div className=\"pipeline-export-modal\">\n        <Button\n          onClick={() => {\n            exportGraph({ format: 'png', theme, graphSize });\n            onToggle(false);\n          }}\n        >\n          Download PNG\n        </Button>\n        <Button\n          onClick={() => {\n            exportGraph({ format: 'svg', theme, graphSize });\n            onToggle(false);\n          }}\n        >\n          Download SVG\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  graphSize: state.graph.size || {},\n  visible: state.visible,\n  theme: state.theme,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggle: (value) => {\n    dispatch(toggleExportModal(value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExportModal);\n","import { createSelector } from 'reselect';\nimport { getVisibleLayerIDs } from './disabled';\n\nconst getGraph = (state) => state.graph;\nconst getLayerName = (state) => state.layer.name;\n\n/**\n * Get layer positions\n */\nexport const getLayers = createSelector(\n  [getGraph, getVisibleLayerIDs, getLayerName],\n  ({ nodes, size }, layerIDs, layerName) => {\n    if (!nodes || !size || !nodes.length || !layerIDs.length) {\n      return [];\n    }\n    const { width, height } = size;\n\n    const bounds = {};\n\n    for (const node of nodes) {\n      const layer = node.nearestLayer || node.layer;\n\n      if (layer) {\n        const bound = bounds[layer] || (bounds[layer] = [Infinity, -Infinity]);\n\n        if (node.y - node.height < bound[0]) {\n          bound[0] = node.y - node.height;\n        }\n\n        if (node.y + node.height > bound[1]) {\n          bound[1] = node.y + node.height;\n        }\n      }\n    }\n\n    return layerIDs.map((id, i) => {\n      const currentBound = bounds[id] || [0, 0];\n      const prevBound = bounds[layerIDs[i - 1]] || [\n        currentBound[0],\n        currentBound[0],\n      ];\n      const nextBound = bounds[layerIDs[i + 1]] || [\n        currentBound[1],\n        currentBound[1],\n      ];\n      const start = (prevBound[1] + currentBound[0]) / 2;\n      const end = (currentBound[1] + nextBound[0]) / 2;\n      const rectWidth = Math.max(width, height) * 5;\n\n      return {\n        id,\n        name: layerName[id],\n        x: (rectWidth - width) / -2,\n        y: start,\n        width: rectWidth,\n        height: Math.max(end - start, 0),\n      };\n    });\n  }\n);\n","import { createSelector } from 'reselect';\nimport { getVisibleEdges } from './edges';\n\nconst getClickedNode = (state) => state.node.clicked;\n/**\n * Gets a map of visible nodeIDs to successors nodeIDs in both directions\n * @param {Array} edges\n */\nexport const getVisibleEdgesByNode = createSelector(\n  [getVisibleEdges],\n  (edges) => {\n    const sourceEdges = {};\n    const targetEdges = {};\n\n    for (const edge of edges) {\n      if (!sourceEdges[edge.target]) {\n        sourceEdges[edge.target] = [];\n      }\n\n      sourceEdges[edge.target].push(edge.source);\n\n      if (!targetEdges[edge.source]) {\n        targetEdges[edge.source] = [];\n      }\n\n      targetEdges[edge.source].push(edge.target);\n    }\n\n    return { sourceEdges, targetEdges };\n  }\n);\n\n/**\n * Finds all visible successor nodeIDs for the given nodeID\n * @param {String} nodeID the starting nodeID\n * @param {Object} edgesByNode an object mapping nodeIDs to successor nodeIDs\n * @param {Object} visited an object for storing all visited node ids\n * @returns {Object} the supplied `visited` object\n */\nconst findLinkedNodes = (nodeID, edgesByNode, visited) => {\n  if (!visited[nodeID]) {\n    visited[nodeID] = true;\n\n    if (edgesByNode[nodeID]) {\n      edgesByNode[nodeID].forEach((nodeID) =>\n        findLinkedNodes(nodeID, edgesByNode, visited)\n      );\n    }\n  }\n\n  return visited;\n};\n\n/**\n * Gets all visible ancestors and descendents for the given nodeID\n * @param {Object} visibleEdgeMaps\n * @param {String} nodeID\n */\nexport const getLinkedNodes = createSelector(\n  [getVisibleEdgesByNode, getClickedNode],\n  ({ sourceEdges, targetEdges }, nodeID) => {\n    if (!nodeID) {\n      return {};\n    }\n\n    const linkedNodes = {};\n    findLinkedNodes(nodeID, sourceEdges, linkedNodes);\n\n    linkedNodes[nodeID] = false;\n    findLinkedNodes(nodeID, targetEdges, linkedNodes);\n\n    return linkedNodes;\n  }\n);\n","/**\n * Returns a className string with the given modifiers in BEM style\n * @param {String} name The main class name\n * @param {?Object} modifiers Map of modifier names to boolean or string values\n * @param {?String} others Optional class name string to concatenate after\n * @return {String} The compiled class name(s)\n */\nconst modifiers = (name, modifiers, others = '') =>\n  Object.keys(modifiers || {}).reduce((classes, modifier) => {\n    const value = modifiers[modifier];\n\n    if (typeof value !== 'string' && typeof value !== 'number') {\n      return `${classes} ${name}--${value ? '' : 'no-'}${modifier}`;\n    }\n\n    return `${classes} ${name}--${modifier}-${(value + '').replace(\n      /\\s/g,\n      '-'\n    )}`;\n  }, name) + (others ? ' ' + others : '');\n\nexport default modifiers;\n","import React from 'react';\nimport modifiers from '../../utils/modifiers';\n\nexport const paths = {\n  // database icon\n  data: 'M12 4c3.31 0 6 1.67 6 3.73l-.01.27H18v9h-.02a1.1 1.1 0 01-.16.42c-1.14 1.7-3.11 2.53-5.82 2.53s-4.68-.82-5.82-2.53a1.09 1.09 0 01-.16-.42H6V8h.01A2.33 2.33 0 016 7.73C6 5.67 8.69 4 12 4zm0 11.73c-1.6 0-2.94-.31-4-.94v1.64c.74.9 2.05 1.38 4 1.38 1.95 0 3.26-.48 4-1.38v-1.65c-1.06.64-2.4.95-4 .95zm0-4.26a8.33 8.33 0 01-4-.95v1.64c.75 1.1 2.04 1.65 4 1.65s3.25-.55 4-1.65V10.5c-1.06.6-2.46.96-4 .96zm0-5.34a6.3 6.3 0 00-3.23.8c-.56.35-.77.66-.77.8 0 .15.2.45.77.8.8.5 1.96.8 3.23.8s2.44-.3 3.23-.8c.56-.35.77-.65.77-.8 0-.14-.2-.45-.77-.8a6.3 6.3 0 00-3.23-.8z',\n  tracking:\n    'M12 4c3.31 0 6 1.67 6 3.73l-.01.27H18v9h-.02a1.1 1.1 0 01-.16.42c-1.14 1.7-3.11 2.53-5.82 2.53s-4.68-.82-5.82-2.53a1.09 1.09 0 01-.16-.42H6V8h.01A2.33 2.33 0 016 7.73C6 5.67 8.69 4 12 4zm0 11.73c-1.6 0-2.94-.31-4-.94v1.64c.74.9 2.05 1.38 4 1.38 1.95 0 3.26-.48 4-1.38v-1.65c-1.06.64-2.4.95-4 .95zm0-4.26a8.33 8.33 0 01-4-.95v1.64c.75 1.1 2.04 1.65 4 1.65s3.25-.55 4-1.65V10.5c-1.06.6-2.46.96-4 .96zm0-5.34a6.3 6.3 0 00-3.23.8c-.56.35-.77.66-.77.8 0 .15.2.45.77.8.8.5 1.96.8 3.23.8s2.44-.3 3.23-.8c.56-.35.77-.65.77-.8 0-.14-.2-.45-.77-.8a6.3 6.3 0 00-3.23-.8z',\n  // function icon\n  task: 'M20 4.2l.2.2L19 5.9c-2.3-1.8-3.8-.9-4.8 3.4h3.1v2h-3.5v.2l-.1.6c-1.2 7.9-4 11-8.3 8l-.2-.1 1.2-1.6c2.5 1.8 4.2.3 5.2-5.9l.2-1v-.2H9.2v-2h3c1.4-6 4.1-8 7.9-5z',\n  // sliders icon\n  parameters:\n    'M10.2 14v1.5H20v2h-9.8V19H8.3v-1.5H5v-2h3.3V14h2zm7.4-9v1.5H20v2h-2.4V10h-1.8V8.5H5v-2h10.8V5h1.8z',\n  modularPipeline:\n    'M8.18 4c1.11 0 2.03.8 2.17 1.86l4.4 1.61c.31-.17.68-.27 1.07-.27 1.2 0 2.18.95 2.18 2.13s-.98 2.14-2.18 2.14c-.38 0-.73-.1-1.04-.26l-4.22 2.74L13.69 16c.3-.16.66-.26 1.04-.26 1.2 0 2.18.96 2.18 2.14 0 1.18-.98 2.13-2.18 2.13a2.16 2.16 0 01-2.17-2.35l-3.34-2.18c-.3.17-.66.26-1.04.26-1.2 0-2.18-.95-2.18-2.13s.98-2.13 2.18-2.13c.61 0 1.16.24 1.56.63l3.9-2.55v-.22-.13L9.63 7.73c-.39.33-.9.54-1.45.54C6.98 8.27 6 7.3 6 6.13 6 4.95 6.98 4 8.18 4z',\n  // for plotly and matplotlib\n  plotly:\n    'M6.261 11.546l5.465 5.766-1.452 1.376-4.013-4.235-2.535 2.676-1.452-1.376 3.987-4.207zm6.911-2.898l8.495 7.607-1.334 1.49-7.14-6.394-2.514 2.325-1.358-1.469 3.851-3.559zM5.5 6C6.328 6 7 6.672 7 7.5S6.328 9 5.5 9 4 8.328 4 7.5 4.672 6 5.5 6z',\n  image:\n    'M6.261 11.546l5.465 5.766-1.452 1.376-4.013-4.235-2.535 2.676-1.452-1.376 3.987-4.207zm6.911-2.898l8.495 7.607-1.334 1.49-7.14-6.394-2.514 2.325-1.358-1.469 3.851-3.559zM5.5 6C6.328 6 7 6.672 7 7.5S6.328 9 5.5 9 4 8.328 4 7.5 4.672 6 5.5 6z',\n};\n\nconst NodeIcon = ({ className, icon }) =>\n  paths[icon] ? (\n    <svg\n      className={modifiers('pipeline-node-icon', { icon }, className)}\n      viewBox=\"0 0 24 24\"\n    >\n      <path d={paths[icon]} />\n    </svg>\n  ) : null;\n\nexport default NodeIcon;\n","import 'd3-transition';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { select } from 'd3-selection';\nimport { curveBasis, line } from 'd3-shape';\nimport { paths as nodeIcons } from '../icons/node-icon';\n\nconst lineShape = line()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveBasis);\n\n/**\n * Matches all floating point numbers in a string\n */\nconst matchFloats = /\\d+\\.\\d+/g;\n\n/**\n * Limits the precision of a float value to one decimal point\n */\nconst toSinglePoint = (value) => parseFloat(value).toFixed(1);\n\n/**\n * Limits the precision of a path string to one decimal point\n */\nconst limitPrecision = (path) => path.replace(matchFloats, toSinglePoint);\n\n/**\n * Render layer bands\n */\nexport const drawLayers = function () {\n  const { layers } = this.props;\n\n  this.el.layers = this.el.layerGroup\n    .selectAll('.pipeline-layer')\n    .data(layers, (layer) => layer.id);\n\n  const enterLayers = this.el.layers\n    .enter()\n    .append('rect')\n    .attr('class', 'pipeline-layer')\n    .on('mouseover', this.handleLayerMouseOver)\n    .on('mouseout', this.handleLayerMouseOut);\n\n  this.el.layers.exit().remove();\n\n  this.el.layers = this.el.layers.merge(enterLayers);\n\n  this.el.layers\n    .attr('x', (d) => d.x)\n    .attr('y', (d) => d.y)\n    .attr('height', (d) => d.height)\n    .attr('width', (d) => d.width);\n};\n\n/**\n * Render layer name labels\n */\nexport const drawLayerNames = function () {\n  const {\n    chartSize: { sidebarWidth = 0 },\n    layers,\n  } = this.props;\n\n  this.el.layerNameGroup\n    .transition('layer-names-sidebar-width')\n    .duration(this.DURATION)\n    .style('transform', `translateX(${sidebarWidth}px)`);\n\n  this.el.layerNames = this.el.layerNameGroup\n    .selectAll('.pipeline-layer-name')\n    .data(layers, (layer) => layer.id);\n\n  const enterLayerNames = this.el.layerNames\n    .enter()\n    .append('li')\n    .attr('class', 'pipeline-layer-name')\n    .attr('data-id', (node) => `layer-label--${node.name}`);\n\n  enterLayerNames\n    .style('opacity', 0)\n    .transition('enter-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 0.55);\n\n  this.el.layerNames\n    .exit()\n    .style('opacity', 0.55)\n    .transition('exit-layer-names')\n    .duration(this.DURATION)\n    .style('opacity', 0)\n    .remove();\n\n  this.el.layerNames = this.el.layerNames.merge(enterLayerNames);\n\n  this.el.layerNames.text((d) => d.name).attr('dy', 5);\n};\n\n/**\n * Sets the size and position of the given node rects\n */\nconst updateNodeRects = (nodeRects) =>\n  nodeRects\n    .attr('width', (node) => node.width - 5)\n    .attr('height', (node) => node.height - 5)\n    .attr('x', (node) => (node.width - 5) / -2)\n    .attr('y', (node) => (node.height - 5) / -2)\n    .attr('rx', (node) => {\n      // Task and Pipeline nodes are rectangle so radius on x-axis is 0\n      if (node.type === 'task' || node.type === 'modularPipeline') {\n        return 0;\n      }\n      return node.height / 2;\n    });\n\nconst updateParameterRect = (nodeRects) =>\n  nodeRects\n    .attr('width', 12)\n    .attr('height', 12)\n    .attr('x', (node) => (node.width + 20) / -2)\n    .attr('y', -6);\n\n/**\n * Render node icons and name labels\n */\nexport const drawNodes = function (changed) {\n  const {\n    clickedNode,\n    linkedNodes,\n    nodeTypeDisabled,\n    nodeActive,\n    nodeSelected,\n    hoveredParameters,\n    nodesWithInputParams,\n    inputOutputDataNodes,\n    nodes,\n    focusMode,\n    hoveredFocusMode,\n  } = this.props;\n\n  const isInputOutputNode = (nodeID) =>\n    focusMode !== null && inputOutputDataNodes[nodeID];\n\n  if (changed('nodes')) {\n    this.el.nodes = this.el.nodeGroup\n      .selectAll('.pipeline-node')\n      .data(nodes, (node) => node.id);\n  }\n\n  if (!this.el.nodes) {\n    return;\n  }\n\n  const updateNodes = this.el.nodes;\n  const enterNodes = this.el.nodes.enter().append('g');\n  const exitNodes = this.el.nodes.exit();\n  // Filter out undefined nodes on Safari\n  const allNodes = this.el.nodes\n    .merge(enterNodes)\n    .merge(exitNodes)\n    .filter((node) => typeof node !== 'undefined');\n\n  if (changed('nodes')) {\n    enterNodes\n      .attr('tabindex', '0')\n      .attr('class', 'pipeline-node')\n      .attr('transform', (node) => `translate(${node.x}, ${node.y})`)\n      .attr('data-id', (node) => node.id)\n      .classed(\n        'pipeline-node--parameters',\n        (node) => node.type === 'parameters'\n      )\n      .classed('pipeline-node--data', (node) => node.type === 'data')\n      .classed('pipeline-node--task', (node) => node.type === 'task')\n      .on('click', this.handleNodeClick)\n      .on('mouseover', this.handleNodeMouseOver)\n      .on('mouseout', this.handleNodeMouseOut)\n      .on('focus', this.handleNodeMouseOver)\n      .on('blur', this.handleNodeMouseOut)\n      .on('keydown', this.handleNodeKeyDown);\n\n    enterNodes\n      .attr('opacity', 0)\n      .transition('show-nodes')\n      .duration(this.DURATION)\n      .attr('opacity', 1);\n\n    enterNodes\n      .append('rect')\n      .attr(\n        'class',\n        (node) => `pipeline-node__bg pipeline-node__bg--${node.type}`\n      );\n\n    enterNodes\n      .append('rect')\n      .attr('class', 'pipeline-node__parameter-indicator')\n      .on('mouseover', this.handleParamsIndicatorMouseOver)\n      .call(updateParameterRect);\n\n    // Performance: use a single path per icon\n    enterNodes\n      .append('path')\n      .attr('class', 'pipeline-node__icon')\n      .attr('d', (node) => nodeIcons[node.icon]);\n\n    enterNodes\n      .append('text')\n      .attr('class', 'pipeline-node__text')\n      .text((node) => node.name)\n      .attr('text-anchor', 'middle')\n      .attr('dy', 5)\n      .attr('dx', (node) => node.textOffset);\n\n    exitNodes\n      .transition('exit-nodes')\n      .duration(this.DURATION)\n      .style('opacity', 0)\n      .remove();\n\n    // Cancel exit transitions if re-entered\n    updateNodes.transition('exit-nodes').style('opacity', null);\n\n    this.el.nodes = this.el.nodeGroup.selectAll('.pipeline-node');\n  }\n\n  if (\n    changed(\n      'nodes',\n      'nodeTypeDisabled',\n      'nodeActive',\n      'nodeSelected',\n      'hoveredParameters',\n      'nodesWithInputParams',\n      'clickedNode',\n      'linkedNodes',\n      'focusMode',\n      'inputOutputDataNodes'\n    )\n  ) {\n    allNodes\n      .classed('pipeline-node--active', (node) => nodeActive[node.id])\n      .classed('pipeline-node--selected', (node) => nodeSelected[node.id])\n      .classed(\n        'pipeline-node--collapsed-hint',\n        (node) =>\n          hoveredParameters &&\n          nodesWithInputParams[node.id] &&\n          nodeTypeDisabled.parameters\n      )\n      .classed(\n        'pipeline-node--dataset-input',\n        (node) => isInputOutputNode(node.id) && node.type === 'data'\n      )\n      .classed(\n        'pipeline-node--parameter-input',\n        (node) => isInputOutputNode(node.id) && node.type === 'parameters'\n      )\n      .classed(\n        'pipeline-node-input--active',\n        (node) => isInputOutputNode(node.id) && nodeActive[node.id]\n      )\n      .classed(\n        'pipeline-node-input--selected',\n        (node) => isInputOutputNode(node.id) && nodeSelected[node.id]\n      )\n      .classed(\n        'pipeline-node--faded',\n        (node) => clickedNode && !linkedNodes[node.id]\n      );\n  }\n\n  if (changed('hoveredFocusMode')) {\n    allNodes.classed(\n      'pipeline-node--faded',\n      (node) => hoveredFocusMode && !nodeActive[node.id]\n    );\n  }\n\n  if (changed('nodes')) {\n    allNodes\n      .transition('update-nodes')\n      .duration(this.DURATION)\n      .attr('transform', (node) => `translate(${node.x}, ${node.y})`)\n      .on('end', () => {\n        try {\n          // Sort nodes so tab focus order follows X/Y position\n          allNodes.sort((a, b) => a.order - b.order);\n        } catch (err) {\n          // Avoid rare DOM errors thrown due to timing issues\n        }\n      });\n\n    enterNodes.select('.pipeline-node__bg').call(updateNodeRects);\n\n    updateNodes\n      .select('.pipeline-node__bg')\n      .transition('node-rect')\n      .duration((node) => (node.showText ? 200 : 600))\n      .call(updateNodeRects);\n    allNodes\n      .select('.pipeline-node__parameter-indicator')\n      .classed(\n        'pipeline-node__parameter-indicator--visible',\n        (node) => nodeTypeDisabled.parameters && nodesWithInputParams[node.id]\n      )\n      .transition('node-rect')\n      .duration((node) => (node.showText ? 200 : 600))\n      .call(updateParameterRect);\n\n    // Performance: icon transitions with CSS on GPU\n    allNodes\n      .select('.pipeline-node__icon')\n      .style('transition-delay', (node) => (node.showText ? '0ms' : '200ms'))\n      .style(\n        'transform',\n        (node) =>\n          `translate(${node.iconOffset}px, ${-node.iconSize / 2}px) ` +\n          `scale(${node.iconSize / 24})`\n      );\n\n    // Performance: text transitions with CSS on GPU\n    allNodes\n      .select('.pipeline-node__text')\n      .text((node) => node.name)\n      .style('transition-delay', (node) => (node.showText ? '200ms' : '0ms'))\n      .style('opacity', (node) => (node.showText ? 1 : 0));\n  }\n};\n\n/**\n * Render edge lines\n */\nexport const drawEdges = function (changed) {\n  const { edges, clickedNode, linkedNodes, focusMode, inputOutputDataEdges } =\n    this.props;\n\n  const isInputOutputEdge = (edgeID) =>\n    focusMode !== null && inputOutputDataEdges[edgeID];\n\n  if (changed('edges')) {\n    this.el.edges = this.el.edgeGroup\n      .selectAll('.pipeline-edge')\n      .data(edges, (edge) => edge.id);\n  }\n\n  if (!this.el.edges) {\n    return;\n  }\n\n  const updateEdges = this.el.edges;\n  const enterEdges = this.el.edges.enter().append('g');\n  const exitEdges = this.el.edges.exit();\n  const allEdges = this.el.edges.merge(enterEdges).merge(exitEdges);\n\n  if (changed('edges', 'focusMode', 'inputOutputDataNodes')) {\n    enterEdges.append('path');\n    allEdges\n      .select('path')\n      .attr('marker-end', (edge) =>\n        edge.sourceNode.type === 'parameters'\n          ? isInputOutputEdge(edge.id)\n            ? `url(#pipeline-arrowhead--accent--input)`\n            : `url(#pipeline-arrowhead--accent)`\n          : isInputOutputEdge(edge.id)\n          ? `url(#pipeline-arrowhead--input)`\n          : `url(#pipeline-arrowhead)`\n      );\n\n    enterEdges\n      .attr('data-id', (edge) => edge.id)\n      .attr('class', 'pipeline-edge');\n\n    enterEdges\n      .attr('opacity', 0)\n      .transition('show-edges')\n      .duration(this.DURATION)\n      .attr('opacity', 1);\n\n    exitEdges\n      .transition('exit-edges')\n      .duration(this.DURATION)\n      .style('opacity', 0)\n      .remove();\n\n    // Cancel exit transitions if re-entered\n    updateEdges.transition('exit-edges').style('opacity', null);\n\n    allEdges\n      .select('path')\n      .transition('update-edges')\n      .duration(this.DURATION)\n      .attrTween('d', function (edge) {\n        // Performance: Limit path precision for parsing & render\n        let current = edge.points && limitPrecision(lineShape(edge.points));\n        const previous = select(this).attr('d') || current;\n        return interpolatePath(previous, current);\n      });\n\n    this.el.edges = this.el.edgeGroup.selectAll('.pipeline-edge');\n  }\n\n  if (\n    changed(\n      'edges',\n      'clickedNode',\n      'linkedNodes',\n      'focusMode',\n      'inputOutputDataEdges'\n    )\n  ) {\n    allEdges\n      .classed(\n        'pipeline-edge--parameters',\n        (edge) =>\n          edge.sourceNode.type === 'parameters' && !isInputOutputEdge(edge.id)\n      )\n      .classed(\n        'pipeline-edge--parameters-input',\n        (edge) =>\n          edge.sourceNode.type === 'parameters' && isInputOutputEdge(edge.id)\n      )\n      .classed('pipeline-edge--dataset--input', (edge) =>\n        isInputOutputEdge(edge.id)\n      )\n      .classed(\n        'pipeline-edge--faded',\n        (edge) =>\n          edge &&\n          clickedNode &&\n          (!linkedNodes[edge.source] || !linkedNodes[edge.target])\n      );\n  }\n};\n","import 'd3-transition';\nimport { select } from 'd3-selection';\nimport { interpolate } from 'd3-interpolate';\nimport { zoom as d3Zoom, zoomIdentity, zoomTransform } from 'd3-zoom';\n\n/**\n * Applies an active viewport behaviour on the given elements using d3-zoom.\n * Returns an object representing the view for use in view related functions.\n * @param {Object} options The options to use\n * @param {React.Ref} options.container The container element ref\n * @param {React.Ref} options.wrapper The wrapper element ref\n * @param {?Function} options.onViewChanged Callback when view changes\n * @param {?Function} options.onViewEnd Callback when view change ends\n * @param {?Boolean} [options.allowUserInput=true] Enable or disable user input\n * @returns {Object} An object representing the view\n */\nexport const viewing = ({\n  container,\n  wrapper,\n  onViewChanged,\n  onViewEnd,\n  allowUserInput = true,\n}) => {\n  const zoom = d3Zoom()\n    .on('zoom', (event) => {\n      const transform = event.transform;\n\n      // Ignore invalid transforms\n      if (isInvalidTransform(transform)) {\n        return;\n      }\n\n      select(wrapper.current).attr('transform', transform);\n      onViewChanged && onViewChanged(transform);\n    })\n    .on('end', onViewEnd)\n    // Use linear interpolation\n    .interpolate(interpolate);\n\n  if (!allowUserInput) {\n    // Ignore all user input default behaviour\n    zoom.filter(() => false);\n  }\n\n  select(container.current)\n    .call(zoom)\n    // Disable default double click to avoid conflicts\n    .on('dblclick.zoom', null);\n\n  return {\n    zoom,\n    container,\n    wrapper,\n  };\n};\n\n/**\n * A constant for the origin transform { x: 0, y: 0, k: 1 }\n */\nexport const origin = zoomIdentity;\n\n/**\n * Returns true if the transform is equivalent to the origin { x: 0, y: 0, k: 1 }\n * @param {Object} transform A transform object to test\n * @returns {Boolean} True if equivalent else false\n */\nexport const isOrigin = ({ x, y, k }) =>\n  x === origin.x && y === origin.y && k === origin.k;\n\n/**\n * Returns true if the transform meets this definition:\n *  - any component (x, y or k) is infinite, `NaN` or `undefined`\n * otherwise returns false.\n * @param {Object} transform A transform object to test\n * @returns {Boolean} True if the transform is invalid else false\n */\nexport const isInvalidTransform = ({ x, y, k }) =>\n  !isFinite(x + y + k) || isNaN(x + y + k) || (x === 0 && y === 0 && k === 0);\n\n/**\n * Returns the current transform of the given view.\n * This is equivalent to the container CSS transform but negated.\n * @param {Object} view The view\n * @returns {Object} The view transform\n */\nexport const getViewTransform = (view) => {\n  const transform = zoomTransform(view.wrapper.current);\n  return isInvalidTransform(transform) ? origin : negateTransform(transform);\n};\n\n/**\n * Negates the x and y components, in effect making the direction opposite.\n * Scale component does not change. Zeroes are always positive.\n * @private\n * @param {Object} transform The transform to negate\n * @returns {Object} The new transform\n */\nconst negateTransform = (transform) =>\n  // This ensures +0 instead of -0\n  origin.translate(-transform.x || 0, -transform.y || 0).scale(transform.k);\n\n/**\n * Sets the extents of the given view.\n * Translate and scale extents may be provided individually.\n * @param {Object} view The view\n * @param {Object} extents The exents\n */\nexport const setViewExtents = (view, { translate, scale }) => {\n  if (translate) {\n    const { minX, minY, maxX, maxY } = translate;\n    view.zoom.translateExtent([\n      [minX, minY],\n      [maxX, maxY],\n    ]);\n  }\n\n  if (scale) {\n    const { minK, maxK } = scale;\n    view.zoom.scaleExtent([minK, maxK]);\n  }\n};\n\n/**\n * Gets the extents of the given view including both translate and scale.\n * @param {Object} view The view\n * @returns {Object} The view extents\n */\nexport const getViewExtents = (view) => {\n  const scale = view.zoom.scaleExtent();\n  const translate = view.zoom.translateExtent();\n  return {\n    translate: {\n      minX: translate[0][0],\n      minY: translate[0][1],\n      maxX: translate[1][0],\n      maxY: translate[1][1],\n    },\n    scale: { minK: scale[0], maxK: scale[1] },\n  };\n};\n\n/**\n * Gets the bounds of the viewport.\n * By default this retrieves the container element dimensions unless an alternative viewport is set.\n * @param {Object} view The view\n * @returns {Object} The viewport extents\n */\nexport const getViewport = (view) => {\n  const viewport = view.zoom.extent()(select(view.container.current));\n  return {\n    top: viewport[0][1],\n    left: viewport[0][0],\n    bottom: viewport[1][1],\n    right: viewport[1][0],\n  };\n};\n\n/**\n * Sets the bounds of the viewport instead of using container element dimensions.\n * @param {Object} view The view\n * @param {Object} viewport The viewport bounds\n */\nexport const setViewport = (view, viewport) => {\n  view.zoom.extent([\n    [viewport.left, viewport.top],\n    [viewport.right, viewport.bottom],\n  ]);\n};\n\n/**\n * Sets the view transform on the view with optional transition.\n * Always respects the view extent constraints.\n * Translate and scale components may be provided individually.\n * Transform is absolute unless relative option set, where it will be added.\n * @param {Object} view The view\n * @param {Object} transform The transform to set on the view\n * @param {?Number} [duration=0] The transition duration (or 0 for none)\n * @param {?Boolean} [relative=false] When true, transform added to current transform\n */\nexport const setViewTransform = (\n  view,\n  transform,\n  duration = 0,\n  relative = false\n) => {\n  const container = select(view.container.current);\n  const current = getViewTransform(view);\n  const hasTranslation =\n    typeof transform.x !== 'undefined' && typeof transform.y !== 'undefined';\n  let k, x, y;\n\n  if (typeof jest !== 'undefined') {\n    // Transitions not supported in tests\n    duration = 0;\n  }\n\n  if (relative) {\n    // Relative: v' = v + t\n    k = current.k + (transform.k || 0);\n    x = current.x + (transform.x || 0);\n    y = current.y + (transform.y || 0);\n  } else {\n    // Absolute: v' = t\n    k = transform.k || current.k;\n    x = transform.x || current.x;\n    y = transform.y || current.y;\n  }\n\n  // Only translate if requested to avoid scale offset\n  if (hasTranslation) {\n    // Apply translation respecting extents\n    container.call(view.zoom.transform, origin);\n    container.call(view.zoom.translateTo, x / k, y / k);\n  }\n\n  // Apply scale respecting extents\n  container.call(view.zoom.scaleTo, k);\n\n  // If the update requires a transition\n  if (duration) {\n    // Store the already computed final transform\n    const final = getViewTransform(view);\n\n    // Revert to the initial transform\n    container.call(view.zoom.transform, negateTransform(current));\n\n    // Transition to the final transform\n    setViewTransformExact(view, final, duration);\n  }\n};\n\n/**\n * Sets the transform on the view with optional transition.\n * Ignores the view extent constraints.\n * The transform must be absolute containing both translate and scale components.\n * @param {Object} view The view\n * @param {Object} transform The transform to set on the view\n * @param {?Number} [duration=0] The transition duration (or 0 for none)\n */\nexport const setViewTransformExact = (view, transform, duration = 0) => {\n  const container = select(view.container.current);\n\n  // Convert transform\n  const final = origin.translate(-transform.x, -transform.y).scale(transform.k);\n\n  if (typeof jest !== 'undefined') {\n    // Simulate application in tests\n    view.container.current.__zoom = final;\n    return;\n  }\n\n  // Apply the transform ignoring extents\n  (!duration\n    ? container\n    : container.transition('zoom').duration(duration)\n  ).call(view.zoom.transform, final);\n};\n\n/**\n * Returns a view transform that fits the object dimensions\n * and optional focus point inside the given view dimensions,\n * while respecting a minimum desired scale.\n * @param {Object} options The options\n * @param {Object} options.offset The origin point\n * @param {?Object} options.focus The optional point to keep in focus\n * @param {Number} options.viewWidth The width of the viewport\n * @param {Number} options.viewHeight The height of the viewport\n * @param {Number} options.objectWidth The width of the object\n * @param {Number} options.objectHeight The height of the object\n * @param {?Number} [options.minScaleX=0] The minimum X scale\n * @param {?Number} [options.minScaleFocus=0] The minimum scale when focus given\n * @param {?Number} [options.focusOffset=0.8] Offset center towards relative focus position\n * @returns {Object} A view transform that fits the constraints\n */\nexport const viewTransformToFit = ({\n  offset,\n  focus,\n  viewWidth,\n  viewHeight,\n  objectWidth,\n  objectHeight,\n  minScaleX = 0,\n  minScaleFocus = 0,\n  focusOffset = 0.8,\n}) => {\n  let scale = origin.k;\n  let x = origin.x;\n  let y = origin.y;\n\n  // Get the scales that fit each axis\n  const scaleY = viewHeight / objectHeight;\n  const scaleX = viewWidth / objectWidth;\n\n  // Apply a minimum to X but allow Y to fit\n  const scaleXClamp = Math.max(minScaleX, scaleX);\n\n  // To fit both axis, choose the smaller one\n  scale = Math.min(scaleXClamp, scaleY);\n\n  // If there is a focus point\n  if (focus) {\n    // Ensure scale is a reasonable size\n    scale = Math.max(minScaleFocus, scale);\n  }\n\n  // Offset the origin\n  x += offset.x;\n  y += offset.y;\n\n  // Offset to center whole object\n  x += (viewWidth - objectWidth * scale) * 0.5;\n  y += (viewHeight - objectHeight * scale) * 0.5;\n\n  // When there is a focus point set\n  if (focus) {\n    // Find which axes would become cropped\n    const isCroppedX = viewWidth < objectWidth * scale;\n    const isCroppedY = viewHeight < objectHeight * scale;\n\n    const objectCenterX = objectWidth * 0.5;\n    const objectCenterY = objectHeight * 0.5;\n\n    // Offset on the cropped axes only\n    const focusCenterOffsetX = isCroppedX ? objectCenterX - focus.x : 0;\n    const focusCenterOffsetY = isCroppedY ? objectCenterY - focus.y : 0;\n\n    const focusRelativeOffsetX = focusCenterOffsetX / objectWidth;\n    const focusRelativeOffsetY = focusCenterOffsetY / objectHeight;\n\n    // Offset to exactly center on the selected focus\n    x += focusCenterOffsetX * scale;\n    y += focusCenterOffsetY * scale;\n\n    // Adjust centering to better account for focus position\n    x -= focusRelativeOffsetX * viewWidth * focusOffset;\n    y -= focusRelativeOffsetY * viewHeight * focusOffset;\n  }\n\n  // This ensures +0 instead of -0\n  return { x: -x || 0, y: -y || 0, k: scale };\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport './tooltip.css';\n\nconst zeroWidthSpace = String.fromCharCode(0x200b);\n\n/**\n * Force tooltip text to break on special characters\n * @param {String} text Any text with special characters\n * @return {String} text\n */\nexport const insertZeroWidthSpace = (text) =>\n  text.replace(/([^\\w\\s]|[_])/g, `${zeroWidthSpace}$1${zeroWidthSpace}`);\n\n/**\n * Display flowchart node tooltip\n * @param {Object} chartSize Chart dimensions in pixels\n * @param {Object} targetRect event.target.getBoundingClientRect()\n * @param {Boolean} visible Whether to show the tooltip\n * @param {String} text Tooltip display label\n */\nconst Tooltip = ({ chartSize, targetRect, visible, text }) => {\n  const { left, top, width, height, outerWidth, sidebarWidth } = chartSize;\n  const isRight = targetRect.left - sidebarWidth > width / 2;\n  const isTop = targetRect.top < height / 2;\n  const xOffset = isRight ? targetRect.left - outerWidth : targetRect.left;\n  const yOffset = isTop ? targetRect.top + targetRect.height : targetRect.top;\n  const x = xOffset - left + targetRect.width / 2;\n  const y = yOffset - top;\n\n  return (\n    <div\n      className={classnames('pipeline-tooltip', {\n        'pipeline-tooltip--visible': visible,\n        'pipeline-tooltip--right': isRight,\n        'pipeline-tooltip--top': isTop,\n      })}\n      style={{ transform: `translate(${x}px, ${y}px)` }}\n    >\n      <div className=\"pipeline-tooltip__text\">{insertZeroWidthSpace(text)}</div>\n    </div>\n  );\n};\n\nTooltip.defaultProps = {\n  chartSize: {},\n  targetRect: {},\n  visible: false,\n  text: '',\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport { useGeneratePathname } from '../../utils/hooks/use-generate-pathname';\n\nexport const withHooksHOC = (Component) => {\n  return (props) => {\n    const { toFlowchartPage, toSelectedNode, toFocusedModularPipeline } =\n      useGeneratePathname();\n\n    return (\n      <Component\n        toFlowchartPage={toFlowchartPage}\n        toSelectedNode={toSelectedNode}\n        toFocusedModularPipeline={toFocusedModularPipeline}\n        {...props}\n      />\n    );\n  };\n};\n","import Tooltip from './tooltip';\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { select } from 'd3-selection';\nimport { updateChartSize, updateZoom } from '../../actions';\nimport { toggleSingleModularPipelineExpanded } from '../../actions/modular-pipelines';\nimport { loadNodeData, toggleNodeHovered } from '../../actions/nodes';\nimport {\n  getNodeActive,\n  getNodeSelected,\n  getNodesWithInputParams,\n  getInputOutputNodesForFocusedModularPipeline,\n} from '../../selectors/nodes';\nimport { getInputOutputDataEdges } from '../../selectors/edges';\nimport { getChartSize, getChartZoom } from '../../selectors/layout';\nimport { getLayers } from '../../selectors/layers';\nimport { getLinkedNodes } from '../../selectors/linked-nodes';\nimport { getVisibleMetaSidebar } from '../../selectors/metadata';\nimport { drawNodes, drawEdges, drawLayers, drawLayerNames } from './draw';\nimport {\n  viewing,\n  isOrigin,\n  viewTransformToFit,\n  setViewTransform,\n  getViewTransform,\n  setViewTransformExact,\n  setViewExtents,\n  getViewExtents,\n} from '../../utils/view';\nimport Tooltip from '../ui/tooltip';\nimport './styles/flowchart.css';\n\n/**\n * Display a pipeline flowchart, mostly rendered with D3\n */\nexport class FlowChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltip: { visible: false },\n      activeLayer: undefined,\n    };\n    this.onViewChange = this.onViewChange.bind(this);\n    this.onViewChangeEnd = this.onViewChangeEnd.bind(this);\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.edgesRef = React.createRef();\n    this.nodesRef = React.createRef();\n    this.layersRef = React.createRef();\n    this.layerNamesRef = React.createRef();\n\n    this.DURATION = 700;\n    this.MARGIN = 500;\n    this.MIN_SCALE = 0.8;\n    this.MAX_SCALE = 2;\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n    this.updateChartSize();\n\n    this.view = viewing({\n      container: this.svgRef,\n      wrapper: this.wrapperRef,\n      onViewChanged: this.onViewChange,\n      onViewEnd: this.onViewChangeEnd,\n    });\n\n    this.updateViewExtents();\n    this.addGlobalEventListeners();\n    this.update();\n\n    if (this.props.tooltip) {\n      this.showTooltip(null, null, this.props.tooltip);\n    } else {\n      this.hideTooltip();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeGlobalEventListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.update(prevProps);\n  }\n\n  /**\n   * Updates drawing and zoom if props have changed\n   */\n  update(prevProps = {}) {\n    const { chartZoom } = this.props;\n    const changed = (...names) => this.changed(names, prevProps, this.props);\n\n    if (changed('visibleSidebar', 'visibleCode', 'visibleMetaSidebar')) {\n      // Don't zoom out when the metadata or code panels are opened or closed\n      if (prevProps.visibleMetaSidebar !== this.props.visibleMetaSidebar) {\n        drawNodes.call(this, changed);\n        drawEdges.call(this, changed);\n\n        return;\n      }\n\n      if (prevProps.visibleCode !== this.props.visibleCode) {\n        if (!this.props.visibleMetaSidebar) {\n          drawNodes.call(this, changed);\n          drawEdges.call(this, changed);\n\n          return;\n        }\n      }\n\n      this.updateChartSize();\n    }\n\n    if (changed('layers', 'chartSize')) {\n      drawLayers.call(this);\n      drawLayerNames.call(this);\n    }\n\n    if (\n      changed(\n        'edges',\n        'clickedNode',\n        'linkedNodes',\n        'focusMode',\n        'inputOutputDataEdges'\n      )\n    ) {\n      drawEdges.call(this, changed);\n    }\n\n    if (\n      changed(\n        'nodes',\n        'clickedNode',\n        'linkedNodes',\n        'nodeTypeDisabled',\n        'nodeActive',\n        'nodeSelected',\n        'hoveredParameters',\n        'nodesWithInputParams',\n        'focusMode',\n        'inputOutputDataNodes',\n        'hoveredFocusMode'\n      )\n    ) {\n      drawNodes.call(this, changed);\n    }\n\n    if (changed('edges', 'nodes', 'layers', 'chartSize', 'clickedNode')) {\n      this.resetView();\n    } else {\n      this.onChartZoomChanged(chartZoom);\n    }\n  }\n\n  /**\n   * Returns true if any of the given props are different between given objects.\n   * Only shallow changes are detected.\n   */\n  changed(props, objectA, objectB) {\n    return (\n      objectA &&\n      objectB &&\n      props.some((prop) => objectA[prop] !== objectB[prop])\n    );\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      edgeGroup: select(this.edgesRef.current),\n      nodeGroup: select(this.nodesRef.current),\n      layerGroup: select(this.layersRef.current),\n      layerNameGroup: select(this.layerNamesRef.current),\n    };\n  }\n\n  /**\n   * Update the chart size in state from chart container bounds.\n   * This is emulated in tests with a constant fixed size.\n   */\n  updateChartSize() {\n    if (typeof jest !== 'undefined') {\n      // Emulate chart size for tests\n      this.props.onUpdateChartSize(chartSizeTestFallback);\n    } else {\n      // Use container bounds\n      this.props.onUpdateChartSize(\n        this.containerRef.current.getBoundingClientRect()\n      );\n    }\n  }\n\n  /**\n   * Add window event listeners on mount\n   */\n  addGlobalEventListeners() {\n    // Add ResizeObserver to listen for any changes in the container's width/height\n    // (with event listener fallback)\n    if (window.ResizeObserver) {\n      this.resizeObserver =\n        this.resizeObserver ||\n        new window.ResizeObserver(this.handleWindowResize);\n      this.resizeObserver.observe(this.containerRef.current);\n    } else {\n      window.addEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.addEventListener('beforeprint', this.handleBeforePrint);\n    window.addEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Remove window event listeners on unmount\n   */\n  removeGlobalEventListeners() {\n    // ResizeObserver\n    if (window.ResizeObserver) {\n      this.resizeObserver.unobserve(this.containerRef.current);\n    } else {\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n    // Print event listeners\n    window.removeEventListener('beforeprint', this.handleBeforePrint);\n    window.removeEventListener('afterprint', this.handleAfterPrint);\n  }\n\n  /**\n   * Handle window resize\n   */\n  handleWindowResize = () => {\n    this.updateChartSize();\n  };\n\n  /**\n   * Add viewBox on window print so that the SVG can be scaled to fit\n   */\n  handleBeforePrint = () => {\n    const graphSize = this.props.graphSize;\n    const width = graphSize.width + graphSize.marginx * 2;\n    const height = graphSize.height + graphSize.marginy * 2;\n    this.el.svg.attr('viewBox', `0 0 ${width} ${height}`);\n  };\n\n  /**\n   * Remove viewBox once printing is done\n   */\n  handleAfterPrint = () => {\n    this.el.svg.attr('viewBox', null);\n  };\n\n  /**\n   * On every frame of every view transform change (from reset, pan, zoom etc.)\n   * @param {Object} transform The current view transfrom\n   */\n  onViewChange(transform) {\n    const { k: scale, x, y } = transform;\n\n    // Apply animating class to zoom wrapper\n    this.el.wrapper.classed(\n      'pipeline-flowchart__zoom-wrapper--animating',\n      true\n    );\n\n    // Update layer label y positions\n    if (this.el.layerNames) {\n      this.el.layerNames.style('transform', (d) => {\n        const updateY = y + (d.y + d.height / 2) * scale;\n        return `translateY(${updateY}px)`;\n      });\n    }\n\n    // Hide the tooltip so it doesn't get misaligned to its node\n    this.hideTooltip();\n\n    // Update extents\n    this.updateViewExtents(transform);\n    const extents = getViewExtents(this.view);\n\n    // Share the applied zoom state with other components\n    this.props.onUpdateZoom({\n      scale,\n      x,\n      y,\n      applied: true,\n      transition: false,\n      relative: false,\n      minScale: extents.scale.minK,\n      maxScale: extents.scale.maxK,\n    });\n  }\n\n  /**\n   * Called when the view changes have ended (i.e. after transition ends)\n   */\n  onViewChangeEnd() {\n    this.el.wrapper.classed(\n      'pipeline-flowchart__zoom-wrapper--animating',\n      false\n    );\n  }\n\n  /**\n   * Updates view extents based on the current view transform.\n   * Offsets the extents considering any open sidebars.\n   * Allows additional margin for user panning within limits.\n   * Zoom scale is limited to a practical range for usability.\n   * @param {?Object} transform Current transform override\n   */\n  updateViewExtents(transform) {\n    const { k: scale } = transform || getViewTransform(this.view);\n\n    const {\n      sidebarWidth = 0,\n      metaSidebarWidth = 0,\n      codeSidebarWidth = 0,\n      width: chartWidth = 0,\n      height: chartHeight = 0,\n    } = this.props.chartSize;\n\n    const { width: graphWidth = 0, height: graphHeight = 0 } =\n      this.props.graphSize;\n\n    const leftSidebarOffset = sidebarWidth / scale;\n    const rightSidebarOffset = (metaSidebarWidth + codeSidebarWidth) / scale;\n    const margin = this.MARGIN;\n\n    // Find the relative minimum scale to fit whole graph\n    const minScale = Math.min(\n      chartWidth / (graphWidth || 1),\n      chartHeight / (graphHeight || 1)\n    );\n\n    setViewExtents(this.view, {\n      translate: {\n        minX: -leftSidebarOffset - margin,\n        maxX: graphWidth + margin + rightSidebarOffset,\n        minY: -margin,\n        maxY: graphHeight + margin,\n      },\n      scale: {\n        minK: this.MIN_SCALE * minScale,\n        maxK: this.MAX_SCALE,\n      },\n    });\n  }\n\n  /**\n   * Applies the given zoom state as necessary\n   * @param {Object} chartZoom The new zoom state\n   */\n  onChartZoomChanged(chartZoom) {\n    // No change if already applied (e.g. was an internal update)\n    if (chartZoom.applied) {\n      return;\n    }\n\n    // Apply reset if it was requested\n    if (chartZoom.reset === true) {\n      this.resetView();\n      return;\n    }\n\n    // Set the view while respecting extents\n    setViewTransform(\n      this.view,\n      { x: chartZoom.x, y: chartZoom.y, k: chartZoom.scale },\n      chartZoom.transition ? this.DURATION * 0.3 : 0,\n      chartZoom.relative\n    );\n  }\n\n  /**\n   * Zoom and scale to fit graph and any selected node in view\n   */\n  resetView() {\n    const { chartSize, graphSize, clickedNode, nodes } = this.props;\n    const { width: chartWidth, height: chartHeight } = chartSize;\n    const { width: graphWidth, height: graphHeight } = graphSize;\n\n    // Skip if chart or graph is not ready yet\n    if (!chartWidth || !graphWidth) {\n      return;\n    }\n\n    // Sidebar offset\n    const offset = { x: chartSize.sidebarWidth, y: 0 };\n\n    // Use the selected node as focus point\n    const focus = clickedNode\n      ? nodes.find((node) => node.id === clickedNode)\n      : null;\n\n    // Find a transform that fits everything in view\n    const transform = viewTransformToFit({\n      offset,\n      focus,\n      viewWidth: chartWidth,\n      viewHeight: chartHeight,\n      objectWidth: graphWidth,\n      objectHeight: graphHeight,\n      minScaleX: 0.2,\n      minScaleFocus: this.props.visibleMetaSidebar\n        ? this.props.chartZoom.scale\n        : 0.3,\n      focusOffset: this.props.visibleMetaSidebar ? 0.01 : 0.8,\n    });\n\n    // Detect first transform\n    const isFirstTransform = isOrigin(getViewTransform(this.view));\n\n    // Apply transform ignoring extents\n    setViewTransformExact(\n      this.view,\n      transform,\n      isFirstTransform ? 0 : this.DURATION,\n      false\n    );\n  }\n\n  /**\n   * Returns parameter count when there are more\n   * than one parameters and parameter name if there's a single parameter\n   * @param {Array} parameterNames\n   * @returns {String}\n   */\n  getHoveredParameterLabel = (parameterNames) =>\n    parameterNames.length > 1\n      ? `Parameters:${parameterNames.length}`\n      : parameterNames[0];\n\n  /**\n   * Enable a node's focus state and highlight linked nodes\n   * @param {Object} event Event object\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeClick = (event, node) => {\n    if (node.type === 'modularPipeline') {\n      this.props.onClickToExpandModularPipeline(node.id);\n    } else {\n      this.props.onLoadNodeData(node.id);\n      this.props.toSelectedNode(node);\n    }\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's focus state and dim linked nodes\n   */\n  handleChartClick = () => {\n    this.props.onLoadNodeData(null);\n    // To reset URL to '/' when click outside of a node on flowchart\n    this.props.toFlowchartPage();\n  };\n\n  /**\n   * Enable a node's active state, show tooltip, and highlight linked nodes\n   * @param {Object} event Event object\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOver = (event, node) => {\n    this.props.onToggleNodeHovered(node.id);\n    node && this.showTooltip(event, node.fullName);\n  };\n\n  /**\n   * Enable a layer's active state when hovering it, update labelName's active className accordingly\n   * @param {Object} event Event object\n   * @param {Object} node Datum for a single node\n   */\n  handleLayerMouseOver = (event, node) => {\n    if (node) {\n      this.setState({\n        activeLayer: node.name,\n      });\n    }\n\n    const { activeLayer } = this.state;\n    const layerName = document.querySelector(\n      `[data-id=\"layer-label--${node.name}\"]`\n    );\n\n    if (activeLayer && layerName) {\n      layerName.classList.add('pipeline-layer-name--active');\n    }\n  };\n\n  /**\n   * Remove the current labelName's active className when not hovering, and update layer's active state accordingly\n   * @param {Object} event Event object\n   * @param {Object} node Datum for a single node\n   */\n  handleLayerMouseOut = (event, node) => {\n    const { activeLayer } = this.state;\n    const layerName = document.querySelector(\n      `[data-id=\"layer-label--${node.name}\"]`\n    );\n\n    if (activeLayer && layerName) {\n      layerName.classList.remove('pipeline-layer-name--active');\n    }\n\n    if (node) {\n      this.setState({\n        activeLayer: undefined,\n      });\n    }\n  };\n\n  /**\n   * Shows tooltip when the parameter indicator is hovered on\n   * @param {Object} event Event object\n   * @param {Object} node Datum for a single node\n   */\n  handleParamsIndicatorMouseOver = (event, node) => {\n    const parameterNames = this.props.nodesWithInputParams[node.id];\n    if (parameterNames) {\n      const label = this.getHoveredParameterLabel(parameterNames);\n\n      this.showTooltip(event, label);\n    }\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's active state, hide tooltip, and dim linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOut = () => {\n    this.props.onToggleNodeHovered(null);\n    this.hideTooltip();\n  };\n\n  /**\n   * Handle keydown event when a node is focused\n   * @param {Object} event Event object\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeKeyDown = (event, node) => {\n    const ENTER = 13;\n    const ESCAPE = 27;\n    if (event.keyCode === ENTER) {\n      this.handleNodeClick(event, node);\n    }\n    if (event.keyCode === ESCAPE) {\n      this.handleChartClick();\n      this.handleNodeMouseOut();\n    }\n  };\n\n  /**\n   * Show, fill and and position the tooltip\n   * @param {Object} event Event object\n   * @param {Object} text Text to show on the tooltip\n   * @param {?Object} options Options for the tooltip if required\n   */\n  showTooltip(event, text, options = {}) {\n    this.setState({\n      tooltip: {\n        targetRect: event && event.target.getBoundingClientRect(),\n        text: text,\n        visible: true,\n        ...options,\n      },\n    });\n  }\n\n  /**\n   * Hide the tooltip\n   */\n  hideTooltip() {\n    if (this.state.tooltip.visible) {\n      this.setState({\n        tooltip: {\n          ...this.state.tooltip,\n          visible: false,\n        },\n      });\n    }\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { chartSize, layers, visibleGraph, displayGlobalToolbar } =\n      this.props;\n    const { outerWidth = 0, outerHeight = 0 } = chartSize;\n\n    return (\n      <div\n        className=\"pipeline-flowchart kedro\"\n        ref={this.containerRef}\n        onClick={this.handleChartClick}\n      >\n        <svg\n          id=\"pipeline-graph\"\n          className=\"pipeline-flowchart__graph\"\n          width={outerWidth}\n          height={outerHeight}\n          ref={this.svgRef}\n        >\n          <g\n            id=\"zoom-wrapper\"\n            className={classnames('pipeline-zoom-wrapper', {\n              'pipeline-zoom-wrapper--hidden': !visibleGraph,\n            })}\n            ref={this.wrapperRef}\n          >\n            <defs>\n              {[\n                'arrowhead',\n                'arrowhead--input',\n                'arrowhead--accent--input',\n                'arrowhead--accent',\n              ].map((id) => (\n                <marker\n                  id={`pipeline-${id}`}\n                  key={id}\n                  className={`pipeline-flowchart__${id}`}\n                  viewBox=\"0 0 10 10\"\n                  refX=\"7\"\n                  refY=\"5\"\n                  markerUnits=\"strokeWidth\"\n                  markerWidth=\"8\"\n                  markerHeight=\"6\"\n                  orient=\"auto\"\n                >\n                  <path d=\"M 0 0 L 10 5 L 0 10 L 4 5 z\" />\n                </marker>\n              ))}\n            </defs>\n            <g className=\"pipeline-flowchart__layers\" ref={this.layersRef} />\n            <g className=\"pipeline-flowchart__edges\" ref={this.edgesRef} />\n            <g\n              id=\"nodes\"\n              className=\"pipeline-flowchart__nodes\"\n              ref={this.nodesRef}\n            />\n          </g>\n        </svg>\n        <ul\n          className={classnames('pipeline-flowchart__layer-names', {\n            'pipeline-flowchart__layer-names--visible': layers.length,\n            'pipeline-flowchart__layer-names--no-global-toolbar':\n              !displayGlobalToolbar,\n          })}\n          ref={this.layerNamesRef}\n        />\n        <Tooltip chartSize={chartSize} {...this.state.tooltip} />\n      </div>\n    );\n  }\n}\n\n// Fixed chart size used in tests\nexport const chartSizeTestFallback = {\n  left: 0,\n  top: 0,\n  right: 1280,\n  bottom: 1024,\n  width: 1280,\n  height: 1024,\n};\n\n// Maintain a single reference to support change detection\nconst emptyEdges = [];\nconst emptyNodes = [];\nconst emptyGraphSize = {};\n\nexport const mapStateToProps = (state, ownProps) => ({\n  clickedNode: state.node.clicked,\n  chartSize: getChartSize(state),\n  chartZoom: getChartZoom(state),\n  displayGlobalToolbar: state.display.globalToolbar,\n  edges: state.graph.edges || emptyEdges,\n  focusMode: state.visible.modularPipelineFocusMode,\n  graphSize: state.graph.size || emptyGraphSize,\n  hoveredParameters: state.hoveredParameters,\n  hoveredFocusMode: state.hoveredFocusMode,\n  layers: getLayers(state),\n  linkedNodes: getLinkedNodes(state),\n  nodes: state.graph.nodes || emptyNodes,\n  nodeTypeDisabled: state.nodeType.disabled,\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  nodesWithInputParams: getNodesWithInputParams(state),\n  inputOutputDataNodes: getInputOutputNodesForFocusedModularPipeline(state),\n  inputOutputDataEdges: getInputOutputDataEdges(state),\n  visibleGraph: state.visible.graph,\n  visibleSidebar: state.visible.sidebar,\n  visibleCode: state.visible.code,\n  visibleMetaSidebar: getVisibleMetaSidebar(state),\n  ...ownProps,\n});\n\nexport const mapDispatchToProps = (dispatch, ownProps) => ({\n  onClickToExpandModularPipeline: (modularPipelineId) => {\n    dispatch(toggleSingleModularPipelineExpanded(modularPipelineId));\n  },\n  onLoadNodeData: (nodeClicked) => {\n    dispatch(loadNodeData(nodeClicked));\n  },\n  onToggleNodeHovered: (nodeHovered) => {\n    dispatch(toggleNodeHovered(nodeHovered));\n  },\n  onUpdateChartSize: (chartSize) => {\n    dispatch(updateChartSize(chartSize));\n  },\n  onUpdateZoom: (transform) => {\n    dispatch(updateZoom(transform));\n  },\n  ...ownProps,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlowChart);\n","import { useCallback } from 'react';\nimport { useHistory, generatePath } from 'react-router-dom';\nimport { localStorageName, routes } from '../../config';\n\nconst getCurrentActivePipeline = () => {\n  const localStorage = window.localStorage.getItem(localStorageName);\n  return JSON.parse(localStorage)?.pipeline?.active;\n};\n\n/**\n * To generate different pathnames based on each action\n * E.g.: click on a node, or focus on a modular pipeline\n * or to reset the pathname to the main page\n */\nexport const useGeneratePathname = () => {\n  const history = useHistory();\n\n  const toFlowchartPage = useCallback(() => {\n    const url = generatePath(routes.flowchart.main);\n    history.push(url);\n  }, [history]);\n\n  const toSelectedNode = useCallback(\n    (item) => {\n      const activePipeline = getCurrentActivePipeline();\n\n      const url = generatePath(routes.flowchart.selectedNode, {\n        pipelineId: activePipeline,\n        id: item.id,\n      });\n      history.push(url);\n    },\n    [history]\n  );\n\n  const toFocusedModularPipeline = useCallback(\n    (item) => {\n      const activePipeline = getCurrentActivePipeline();\n\n      const url = generatePath(routes.flowchart.focusedNode, {\n        pipelineId: activePipeline,\n        id: item.id,\n      });\n      history.push(url);\n    },\n    [history]\n  );\n\n  return {\n    toFlowchartPage,\n    toSelectedNode,\n    toFocusedModularPipeline,\n  };\n};\n","import FlowChart from './flowchart';\nimport { withHooksHOC } from './with-hooks-hoc';\n\n/**\n * This is to wrap the Class component Flowchart in a hook\n * hence we can pass in other custom hooks\n */\nexport default withHooksHOC(FlowChart);\n","import PipelineWarning from './pipeline-warning';\n\nexport default PipelineWarning;\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { changeFlag, toggleIgnoreLargeWarning } from '../../actions';\nimport { getVisibleNodes } from '../../selectors/nodes';\nimport { getTriggerLargeGraphWarning } from '../../selectors/layout';\nimport { useGeneratePathname } from '../../utils/hooks/use-generate-pathname';\nimport Button from '../ui/button';\nimport './pipeline-warning.css';\n\nexport const PipelineWarning = ({\n  errorMessage,\n  invalidUrl,\n  nodes,\n  onDisable,\n  onHide,\n  sidebarVisible,\n  visible,\n}) => {\n  const [componentLoaded, setComponentLoaded] = useState(false);\n  const isEmptyPipeline = nodes.length === 0;\n\n  const { toFlowchartPage } = useGeneratePathname();\n\n  // Only run this once, when the component mounts.\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setComponentLoaded(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <>\n      {visible && (\n        <div\n          className={classnames('kedro', 'pipeline-warning', {\n            'pipeline-warning--sidebar-visible': sidebarVisible,\n          })}\n        >\n          <h2 className=\"pipeline-warning__title\">\n            Whoa, that’s a chonky pipeline!\n          </h2>\n          <p className=\"pipeline-warning__subtitle\">\n            This graph contains <b>{nodes.length}</b> elements, which will take\n            a while to render. You can use the sidebar controls to select a\n            smaller graph.\n          </p>\n          <Button onClick={onHide}>Render it anyway</Button>\n          <Button mode=\"secondary\" onClick={onDisable} size=\"small\">\n            Don't show this again\n          </Button>\n        </div>\n      )}\n      {isEmptyPipeline && componentLoaded && (\n        <div\n          className={classnames('kedro', 'pipeline-warning', {\n            'pipeline-warning--sidebar-visible': sidebarVisible,\n          })}\n        >\n          <h2 className=\"pipeline-warning__title\">\n            Oops, there's nothing to see here\n          </h2>\n          <p className=\"pipeline-warning__subtitle\">\n            This selection has nothing. Please unselect your filters or modular\n            pipeline selection to see pipeline elements.\n          </p>\n        </div>\n      )}\n      {invalidUrl && componentLoaded && (\n        <div\n          className={classnames(\n            'kedro',\n            'pipeline-warning',\n            'pipeline-warning--invalid-url',\n            {\n              'pipeline-warning--sidebar-visible': sidebarVisible,\n            }\n          )}\n        >\n          <h2 className=\"pipeline-warning__title\">\n            Oops, this URL isn't valid\n          </h2>\n          <p className=\"pipeline-warning__subtitle\">{`${errorMessage}. Perhaps you've deleted the entity 🙈 or it may be a typo 😇`}</p>\n          <Button onClick={() => toFlowchartPage()}>Reset view</Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  nodes: getVisibleNodes(state),\n  sidebarVisible: state.visible.sidebar,\n  theme: state.theme,\n  visible: getTriggerLargeGraphWarning(state),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onDisable: () => {\n    dispatch(changeFlag('sizewarning', false));\n  },\n  onHide: () => {\n    dispatch(toggleIgnoreLargeWarning(true));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PipelineWarning);\n","import React from 'react';\nimport classnames from 'classnames';\nimport './loading.css';\n\nconst d = 'M 50 50 100 100 50 150 0 100 Z';\n\nconst LoadingIcon = ({ className, visible }) => (\n  <svg\n    className={classnames(className, 'pipeline-loading-icon', {\n      'pipeline-loading-icon--visible': visible,\n    })}\n    viewBox=\"-10 45 120 100\"\n  >\n    <path d={d} />\n    <path d={d} />\n  </svg>\n);\n\nexport default LoadingIcon;\n","import React from 'react';\nimport modifiers from '../../utils/modifiers';\nimport './styles/metadata.css';\n\n/**\n * Shows a metadata value\n */\nconst MetaDataValue = ({\n  className,\n  container: Container = 'span',\n  empty,\n  kind,\n  title,\n  value,\n}) => (\n  <>\n    <Container\n      title={title}\n      className={modifiers('pipeline-metadata__value', { kind }, className)}\n    >\n      {!value && value !== 0 ? empty : value}\n    </Container>\n  </>\n);\n\nexport default MetaDataValue;\n","import React from 'react';\n\nconst CopyIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M17 1v1h4v16h-4v4H3V6h4V2h4V1h6zM7 8H5v12h10v-2H7V8zm4-4H9v12h10V4h-2v1h-6V4z\" />\n  </svg>\n);\n\nexport default CopyIcon;\n","import React, { useState } from 'react';\nimport modifiers from '../../../utils/modifiers';\nimport MetaDataValue from '../../metadata/metadata-value';\nimport IconButton from '../../ui/icon-button';\nimport CopyIcon from '../../icons/copy';\nimport './command-copier.css';\n\nconst CommandCopier = ({ command }) => {\n  const [showCopied, setShowCopied] = useState(false);\n\n  const onCopyClick = () => {\n    window.navigator.clipboard.writeText(command);\n    setShowCopied(true);\n    setTimeout(() => setShowCopied(false), 1500);\n  };\n\n  return (\n    <div className=\"container\">\n      <MetaDataValue\n        container={'code'}\n        className={modifiers('command-value', {\n          visible: !showCopied,\n        })}\n        value={command}\n      />\n      {window.navigator.clipboard && command && (\n        <>\n          <span\n            className={modifiers('copy-message', {\n              visible: showCopied,\n            })}\n          >\n            Copied to clipboard.\n          </span>\n          <ul className=\"toolbox\">\n            <IconButton\n              ariaLabel=\"Copy run command to clipboard.\"\n              className=\"copy-button\"\n              dataHeapEvent={`clicked.run_command`}\n              icon={CopyIcon}\n              onClick={onCopyClick}\n            />\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CommandCopier;\n","/* \nPlotly templates are defined to override user-specified styles with Kedro-viz styles\nMore details can be found here - https://plotly.com/python/templates/\n*/\n\n/* eslint-disable id-length,camelcase */\n\nconst darkTemplate = {\n  autosize: true,\n  annotationdefaults: {\n    arrowcolor: '#2a3f5f',\n    arrowhead: 0,\n    arrowwidth: 1,\n  },\n  autotypenumbers: 'strict',\n  coloraxis: {\n    autocolorscale: false,\n    colorbar: {\n      thickness: 20,\n      showticklabels: true,\n      ticks: 'outside',\n      tickwidth: 1,\n      tickcolor: 'rgba(255,255,255,0.30)',\n      ticklen: 12,\n      tickfont: {\n        color: 'rgba(255,255,255,0.55)',\n        size: 12,\n      },\n      ticklabelposition: 'outside',\n      title: {\n        font: {\n          color: 'rgba(255,255,255,0.55)',\n          size: 12,\n        },\n      },\n    },\n  },\n  colorscale: {\n    diverging: [\n      'rgb(230,59,90)',\n      'rgb(240,185,186)',\n      'rgb(237,212,213)',\n      'rgb(232,232,232)',\n      'rgb(190,213,236)',\n      'rgb(136,192,240)',\n      'rgb(0,169,244)',\n    ],\n    sequential: [\n      'rgb(0,169,244)',\n      'rgb(60,175,245)',\n      'rgb(148,203,250)',\n      'rgb(195,225,254)',\n      'rgb(214,235,255)',\n    ],\n    sequentialminus: [\n      'rgb(0,169,244)',\n      'rgb(60,175,245)',\n      'rgb(148,203,250)',\n      'rgb(195,225,254)',\n      'rgb(214,235,255)',\n    ],\n  },\n  colorway: [\n    '#00a9f4',\n    '#42459F',\n    '#F4973B',\n    '#E63B5A',\n    '#948DCA',\n    '#769D00',\n    '#1A2E91',\n    '#4F9596',\n    '#F7D02A',\n    '#F07179',\n    '#3C7A34',\n    '#B2DFE1',\n    '#C1BCE5',\n    '#AD544A',\n    '#F4973B',\n    '#B6CD70',\n    '#65A6A8',\n    '#F8E979',\n  ],\n  font: {\n    color: 'rgba(255,255,255,0.55)',\n  },\n  height: null,\n  hoverlabel: {\n    align: 'left',\n  },\n  hovermode: 'closest',\n  legend: {\n    title: {\n      font: {\n        color: 'rgba(255,255,255,0.55)',\n      },\n    },\n    font: {\n      color: 'rgba(255,255,255,0.55)',\n    },\n  },\n  mapbox: {\n    style: 'DARK',\n  },\n  paper_bgcolor: '#111111',\n  plot_bgcolor: '#111111',\n  title: {\n    font: {\n      color: 'rgba(255,255,255,0.85)',\n      size: 16,\n    },\n    xref: 'paper',\n    yref: 'paper',\n    x: 0,\n    xanchor: 'left',\n    yanchor: 'middle',\n  },\n  width: null,\n  xaxis: {\n    automargin: true,\n    gridcolor: 'rgba(255,255,255,0.12)',\n    layer: 'below traces',\n    linewidth: 1,\n    linecolor: 'rgba(255,255,255,0.30)',\n    rangemode: 'normal',\n    showline: true,\n    showticklabels: true,\n    ticks: 'outside',\n    tickwidth: 1,\n    tickcolor: 'rgba(255,255,255,0.30)',\n    ticklen: 12,\n    tickfont: {\n      color: 'rgba(255,255,255,0.55)',\n      size: 12,\n    },\n    ticklabelposition: 'outside',\n    title: {\n      font: {\n        color: 'rgba(255,255,255,0.55)',\n        size: 16,\n      },\n    },\n    zerolinecolor: 'rgba(255,255,255,0.30)',\n    zerolinewidth: 1,\n  },\n  yaxis: {\n    automargin: true,\n    gridcolor: 'rgba(255,255,255,0.12)',\n    layer: 'below traces',\n    linewidth: 1,\n    linecolor: 'rgba(255,255,255,0.30)',\n    rangemode: 'normal',\n    showline: true,\n    showticklabels: true,\n    ticks: 'outside',\n    tickwidth: 1,\n    tickcolor: 'rgba(255,255,255,0.30)',\n    ticklen: 12,\n    tickfont: {\n      color: 'rgba(255,255,255,0.55)',\n      size: 12,\n    },\n    ticklabelposition: 'outside',\n    title: {\n      font: {\n        color: 'rgba(255,255,255,0.55)',\n        size: 16,\n      },\n    },\n    zerolinecolor: 'rgba(255,255,255,0.30)',\n    zerolinewidth: 1,\n  },\n  margin: {\n    l: 72,\n    r: 40,\n    t: 64,\n    b: 72,\n  },\n};\n\nexport const darkPreviewTemplate = {\n  ...darkTemplate,\n  height: 300,\n  margin: {\n    l: 70,\n    r: 40,\n    t: 60,\n    b: 70,\n  },\n  title: {\n    font: {\n      size: 12,\n    },\n    x: 0.09,\n  },\n  showlegend: false,\n  width: 400,\n  xaxis: {\n    ...darkTemplate.xaxis,\n    title: {\n      ...darkTemplate.xaxis.title,\n      font: {\n        ...darkTemplate.xaxis.font,\n        size: 8,\n      },\n    },\n    tickfont: {\n      ...darkTemplate.xaxis.tickfont,\n      size: 8,\n    },\n    nticks: 5,\n  },\n  yaxis: {\n    ...darkTemplate.yaxis,\n    title: {\n      ...darkTemplate.yaxis.title,\n      font: {\n        ...darkTemplate.yaxis.font,\n        size: 8,\n      },\n    },\n    tickfont: {\n      ...darkTemplate.yaxis.tickfont,\n      size: 8,\n    },\n    nticks: 5,\n  },\n};\n\nexport const darkOneChartTemplate = {\n  ...darkTemplate,\n};\n\nexport const darkTwoChartsTemplate = {\n  ...darkTemplate,\n  height: 375,\n  margin: {\n    l: 30,\n    r: 10,\n    t: 10,\n    b: 10,\n  },\n  width: null,\n};\n\nexport const darkThreeChartsTemplate = {\n  ...darkTemplate,\n  height: 250,\n  margin: {\n    l: 30,\n    r: 10,\n    t: 10,\n    b: 10,\n  },\n  width: null,\n};\n\nexport const darkExpPreviewTemplate = {\n  ...darkPreviewTemplate,\n  height: 188,\n  margin: {\n    l: 30,\n    r: 10,\n    t: 10,\n    b: 10,\n  },\n  width: 250,\n};\n","/*\nPlotly templates are defined to override user-specified styles with Kedro-viz styles\nMore details can be found here - https://plotly.com/python/templates/\n*/\n\n/* eslint-disable id-length,camelcase */\n\nconst lightTemplate = {\n  autosize: true,\n  annotationdefaults: {\n    arrowcolor: '#2a3f5f',\n    arrowhead: 0,\n    arrowwidth: 1,\n  },\n  autotypenumbers: 'strict',\n  coloraxis: {\n    autocolorscale: false,\n    colorbar: {\n      thickness: 20,\n      showticklabels: true,\n      ticks: 'outside',\n      tickwidth: 1,\n      tickcolor: 'rgba(0,0,0,0.30)',\n      ticklen: 12,\n      tickfont: {\n        color: 'rgba(0,0,0,0.55)',\n        size: 12,\n      },\n      ticklabelposition: 'outside',\n      title: {\n        font: {\n          color: 'rgba(0,0,0,0.55)',\n          size: 12,\n        },\n      },\n    },\n  },\n  colorscale: {\n    diverging: [\n      'rgb(230,59,90)',\n      'rgb(240,185,186)',\n      'rgb(237,212,213)',\n      'rgb(232,232,232)',\n      'rgb(190,213,236)',\n      'rgb(136,192,240)',\n      'rgb(0,169,244)',\n    ],\n    sequential: [\n      'rgb(0,169,244)',\n      'rgb(60,175,245)',\n      'rgb(148,203,250)',\n      'rgb(195,225,254)',\n      'rgb(214,235,255)',\n    ],\n    sequentialminus: [\n      'rgb(0,169,244)',\n      'rgb(60,175,245)',\n      'rgb(148,203,250)',\n      'rgb(195,225,254)',\n      'rgb(214,235,255)',\n    ],\n  },\n  colorway: [\n    '#00a9f4',\n    '#42459F',\n    '#F4973B',\n    '#E63B5A',\n    '#948DCA',\n    '#769D00',\n    '#1A2E91',\n    '#4F9596',\n    '#F7D02A',\n    '#F07179',\n    '#3C7A34',\n    '#B2DFE1',\n    '#C1BCE5',\n    '#AD544A',\n    '#F4973B',\n    '#B6CD70',\n    '#65A6A8',\n    '#F8E979',\n  ],\n  font: {\n    color: 'rgba(0,0,0,0.55)',\n  },\n  height: null,\n  hoverlabel: {\n    align: 'left',\n  },\n  hovermode: 'closest',\n  legend: {\n    title: {\n      font: {\n        color: 'rgba(0,0,0,0.55)',\n      },\n    },\n    font: {\n      color: 'rgba(0,0,0,0.55)',\n    },\n  },\n  mapbox: {\n    style: 'light',\n  },\n  paper_bgcolor: '#EEEEEE',\n  plot_bgcolor: '#EEEEEE',\n  title: {\n    font: {\n      color: 'rgba(0,0,0,0.85)',\n      size: 16,\n    },\n    xref: 'paper',\n    yref: 'paper',\n    x: 0,\n    xanchor: 'left',\n    yanchor: 'middle',\n  },\n  width: null,\n  xaxis: {\n    automargin: true,\n    gridcolor: 'rgba(0,0,0,0.12)',\n    layer: 'below traces',\n    linewidth: 1,\n    linecolor: 'rgba(0,0,0,0.30)',\n    rangemode: 'normal',\n    showline: true,\n    showticklabels: true,\n    ticks: 'outside',\n    tickwidth: 1,\n    tickcolor: 'rgba(0,0,0,0.30)',\n    ticklen: 12,\n    tickfont: {\n      color: 'rgba(0,0,0,0.55)',\n      size: 12,\n    },\n    ticklabelposition: 'outside',\n    title: {\n      font: {\n        color: 'rgba(0,0,0,0.55)',\n        size: 16,\n      },\n    },\n    zerolinecolor: 'rgba(0,0,0,0.30)',\n    zerolinewidth: 1,\n  },\n  yaxis: {\n    automargin: true,\n    gridcolor: 'rgba(0,0,0,0.12)',\n    layer: 'below traces',\n    linewidth: 1,\n    linecolor: 'rgba(0,0,0,0.30)',\n    rangemode: 'normal',\n    showline: true,\n    showticklabels: true,\n    ticks: 'outside',\n    tickwidth: 1,\n    tickcolor: 'rgba(0,0,0,0.30)',\n    ticklen: 12,\n    tickfont: {\n      color: 'rgba(0,0,0,0.55)',\n      size: 12,\n    },\n    ticklabelposition: 'outside',\n    title: {\n      font: {\n        color: 'rgba(0,0,0,0.55)',\n        size: 16,\n      },\n    },\n    zerolinecolor: 'rgba(0,0,0,0.30)',\n    zerolinewidth: 1,\n  },\n  margin: {\n    l: 72,\n    r: 40,\n    t: 64,\n    b: 72,\n  },\n};\n\nexport const lightPreviewTemplate = {\n  ...lightTemplate,\n  height: 300,\n  margin: {\n    l: 70,\n    r: 40,\n    t: 60,\n    b: 70,\n  },\n  showlegend: false,\n  width: 400,\n  title: {\n    font: {\n      size: 12,\n    },\n    x: 0.09,\n  },\n  xaxis: {\n    ...lightTemplate.xaxis,\n    title: {\n      ...lightTemplate.xaxis.title,\n      font: {\n        ...lightTemplate.xaxis.font,\n        size: 8,\n      },\n    },\n    tickfont: {\n      ...lightTemplate.xaxis.tickfont,\n      size: 8,\n    },\n    nticks: 5,\n  },\n  yaxis: {\n    ...lightTemplate.yaxis,\n    title: {\n      ...lightTemplate.yaxis.title,\n      font: {\n        ...lightTemplate.yaxis.font,\n        size: 8,\n      },\n    },\n    tickfont: {\n      ...lightTemplate.yaxis.tickfont,\n      size: 8,\n    },\n    nticks: 5,\n  },\n};\n\nexport const lightOneChartTemplate = {\n  ...lightTemplate,\n};\n\nexport const lightTwoChartsTemplate = {\n  ...lightTemplate,\n  height: 375,\n  margin: {\n    l: 30,\n    r: 10,\n    t: 10,\n    b: 10,\n  },\n  width: null,\n};\n\nexport const lightThreeChartsTemplate = {\n  ...lightTemplate,\n  height: 250,\n  margin: {\n    l: 30,\n    r: 10,\n    t: 10,\n    b: 10,\n  },\n  width: null,\n};\n\nexport const lightExpPreviewTemplate = {\n  ...lightPreviewTemplate,\n  height: 188,\n  margin: {\n    l: 30,\n    r: 10,\n    t: 10,\n    b: 10,\n  },\n  width: 250,\n};\n","import React from 'react';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport Plotly from 'plotly.js-dist-min';\nimport deepmerge from 'deepmerge';\nimport { connect } from 'react-redux';\nimport './plotly-chart.css';\nimport {\n  darkPreviewTemplate,\n  darkExpPreviewTemplate,\n  darkOneChartTemplate,\n  darkTwoChartsTemplate,\n  darkThreeChartsTemplate,\n} from '../../utils/plot-templates/dark';\nimport {\n  lightPreviewTemplate,\n  lightExpPreviewTemplate,\n  lightOneChartTemplate,\n  lightTwoChartsTemplate,\n  lightThreeChartsTemplate,\n} from '../../utils/plot-templates/light';\nimport classNames from 'classnames';\n\n/**\n * Display plotly chart\n * @param {Object} chartSize Chart dimensions in pixels\n * @param {Object} targetRect event.target.getBoundingClientRect()\n * @param {Boolean} visible Whether to show the tooltip\n * @param {String} text Tooltip display label\n */\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst PlotlyChart = ({ theme, view = '', data = [], layout = {} }) => {\n  const plotConfig = view.includes('preview')\n    ? { staticPlot: true }\n    : undefined;\n\n  return (\n    <div\n      className={classNames(\n        'pipeline-plotly-chart',\n        `pipeline-plotly__${view}`\n      )}\n    >\n      <Plot\n        data={data}\n        layout={updateLayout(theme, view, layout)}\n        config={plotConfig}\n        style={{ width: '100%', height: '100%' }}\n        useResizeHandler={true}\n      />\n    </div>\n  );\n};\n\nconst updateLayout = (theme, view, layout) => {\n  if (theme === 'dark') {\n    if (view === 'experiment_preview') {\n      return deepmerge(layout, darkExpPreviewTemplate);\n    } else if (view === 'preview') {\n      return deepmerge(layout, darkPreviewTemplate);\n    } else if (view === 'twoCharts') {\n      return deepmerge(layout, darkTwoChartsTemplate);\n    } else if (view === 'threeCharts') {\n      return deepmerge(layout, darkThreeChartsTemplate);\n    } else {\n      return deepmerge(layout, darkOneChartTemplate);\n    }\n  } else {\n    if (view === 'experiment_preview') {\n      return deepmerge(layout, lightExpPreviewTemplate);\n    } else if (view === 'preview') {\n      return deepmerge(layout, lightPreviewTemplate);\n    } else if (view === 'twoCharts') {\n      return deepmerge(layout, lightTwoChartsTemplate);\n    } else if (view === 'threeCharts') {\n      return deepmerge(layout, lightThreeChartsTemplate);\n    } else {\n      return deepmerge(layout, lightOneChartTemplate);\n    }\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(PlotlyChart);\n","import PlotlyChart from './plotly-chart';\n\nexport default PlotlyChart;\n","import React from 'react';\n\nconst CloseIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n  </svg>\n);\n\nexport default CloseIcon;\n","import React from 'react';\n\nconst ExpandIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M21 5v16H5v-8h2v6h12V7h-6.116V5H21zM8 3v2H6.415l6.292 6.293-1.414 1.414L5 6.415V8H3V3h5z\" />\n  </svg>\n);\n\nexport default ExpandIcon;\n","import React, { useState, useEffect } from 'react';\nimport modifiers from '../../utils/modifiers';\nimport MetaDataValue from './metadata-value';\nimport './styles/metadata.css';\n\n/**\n * Shows a list of MetaDataValue\n */\nconst MetaDataList = ({\n  property,\n  values = [],\n  kind = 'text',\n  empty = '-',\n  inline = true,\n  commas = true,\n  limit = false,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const showValues = !expanded && limit ? values.slice(0, limit) : values;\n  const remainder = values.length - showValues.length;\n\n  // Default to not expanded when values change\n  useEffect(() => setExpanded(false), [values]);\n\n  return values.length > 0 ? (\n    <>\n      <ul\n        className={modifiers('pipeline-metadata__value-list', {\n          inline,\n          commas,\n        })}\n      >\n        {showValues.map((item, index) => (\n          <li key={index}>\n            <MetaDataValue\n              value={property ? item[property] : item}\n              kind={kind}\n              empty={empty}\n            />\n          </li>\n        ))}\n      </ul>\n      {remainder > 0 ? (\n        <button\n          className=\"pipeline-metadata__value-list-expand\"\n          aria-expanded={expanded}\n          onClick={() => setExpanded(true)}\n        >\n          + {remainder} more\n        </button>\n      ) : null}\n    </>\n  ) : (\n    <MetaDataValue empty={empty} />\n  );\n};\n\nexport default MetaDataList;\n","/*\n * To apply custom theme to react-json-view objects, we need to follow thier base 16 theme styling guidelines\n * indicated here - https://github.com/chriskempson/base16/blob/master/styling.md and implemented below.\n */\n\nexport const darkjsonViewerTheme = {\n  base00: '#122531',\n  base01: '#122531',\n  base02: '#122531',\n  base03: '#122531',\n  base04: 'rgba(255,255,255,0.35)',\n  base05: '#122531',\n  base06: '#122531',\n  base07: 'rgba(255,255,255,0.85)',\n  base08: '#122531',\n  base09: '#ffbc00',\n  base0A: '#122531',\n  base0B: 'rgba(255,255,255,0.85)',\n  base0C: 'rgba(255,255,255,0.85)',\n  base0D: '#00b0f5',\n  base0E: '#dcc6e0',\n  base0F: 'rgba(255,255,255,0.85)',\n};\n\nexport const lightjsonViewerTheme = {\n  base00: '#f0f1f3',\n  base01: '#f0f1f3',\n  base02: '#f0f1f3',\n  base03: '#f0f1f3',\n  base04: 'rgba(0,0,0,0.55)',\n  base05: '#f0f1f3',\n  base06: '#f0f1f3',\n  base07: 'rgba(0,0,0,0.85)',\n  base08: '#f0f1f3',\n  base09: '#a000bc',\n  base0A: '#f0f1f3',\n  base0B: 'rgba(0,0,0,0.85)',\n  base0C: 'rgba(0,0,0,0.85)',\n  base0D: '#00b0f5',\n  base0E: '#7928a1',\n  base0F: 'rgba(0,0,0,0.85)',\n};\n","import React from 'react';\nimport modifiers from '../../utils/modifiers';\nimport './styles/metadata.css';\nimport ReactJson from 'react-json-view';\nimport {\n  darkjsonViewerTheme,\n  lightjsonViewerTheme,\n} from './metadata-parameters-theme';\n\n/**\n * Shows a metadata object\n */\nconst MetaDataObject = ({ className, value, kind, theme, empty }) => (\n  <div className={modifiers('pipeline-metadata__object', { kind }, className)}>\n    {Object.keys(value).length === 0 ? (\n      empty\n    ) : (\n      <ReactJson\n        theme={theme === 'dark' ? darkjsonViewerTheme : lightjsonViewerTheme}\n        name={false}\n        indentWidth={1}\n        collapsed={1}\n        collapseStringsAfterLength={true}\n        enableClipboard={true}\n        displayDataTypes={false}\n        src={value}\n      />\n    )}\n  </div>\n);\n\nexport default MetaDataObject;\n","import React from 'react';\nimport MetaDataList from './metadata-list';\nimport MetaDataObject from './metadata-object';\nimport MetaDataValue from './metadata-value';\nimport './styles/metadata.css';\n\n/**\n * Shows metadata label and a given single value, or a list of values, or child elements\n */\nconst MetaDataRow = ({\n  label,\n  theme,\n  property,\n  value,\n  kind = 'text',\n  empty = '-',\n  visible = true,\n  inline = true,\n  commas = true,\n  limit = false,\n  title = null,\n  children,\n}) => {\n  const showList = Array.isArray(value);\n  const showObject = typeof value === 'object' && value !== null && !showList;\n\n  return (\n    visible && (\n      <>\n        <dt className=\"pipeline-metadata__label\">{label}</dt>\n        <dd className=\"pipeline-metadata__row\" data-label={label}>\n          {showList && (\n            <MetaDataList\n              property={property}\n              inline={inline}\n              commas={commas}\n              kind={kind}\n              empty={empty}\n              values={value}\n              limit={limit}\n            />\n          )}\n          {!showList && !showObject && !children && (\n            <MetaDataValue\n              empty={empty}\n              kind={kind}\n              theme={theme}\n              title={title || value}\n              value={value}\n            />\n          )}\n          {showObject && (\n            <MetaDataObject\n              value={value}\n              kind={kind}\n              theme={theme}\n              empty={empty}\n            />\n          )}\n          {children}\n        </dd>\n      </>\n    )\n  );\n};\n\nexport default MetaDataRow;\n","import React, { useRef, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport hljs from 'highlight.js/lib/core';\nimport python from 'highlight.js/lib/languages/python';\nimport yaml from 'highlight.js/lib/languages/yaml';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport modifiers from '../../utils/modifiers';\nimport './styles/metadata-code.css';\n\nhljs.registerLanguage('python', python);\nhljs.registerLanguage('yaml', yaml);\nhljs.registerLanguage('javascript', javascript);\n\n/**\n * A highlighted code panel\n */\nexport const MetaDataCode = ({\n  sidebarVisible,\n  visible = true,\n  value = '',\n}) => {\n  const codeRef = useRef();\n\n  const highlighted = useMemo(() => {\n    const detected = hljs.highlightAuto(value);\n    const language = detected.language || detected.second_best.language;\n    return language ? hljs.highlight(value, { language }).value : value;\n  }, [value]);\n\n  return (\n    <div\n      className={modifiers(\n        'pipeline-metadata-code',\n        { visible, sidebarVisible },\n        'kedro'\n      )}\n    >\n      <h2 className=\"pipeline-metadata-code__title\">Code block</h2>\n      <code className=\"pipeline-metadata-code__code\">\n        <pre ref={codeRef} dangerouslySetInnerHTML={{ __html: highlighted }} />\n      </code>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sidebarVisible: state.visible.sidebar,\n});\n\nexport default connect(mapStateToProps)(MetaDataCode);\n","import Toggle from './toggle';\n\nexport default Toggle;\n","import React from 'react';\nimport classnames from 'classnames';\nimport modifiers from '../../../utils/modifiers';\nimport './toggle.css';\n\n/**\n * Shows a toggle button for code panel\n */\nconst Toggle = ({\n  id = '',\n  checked,\n  enabled = true,\n  title,\n  onChange,\n  className = '',\n}) => (\n  <div\n    className={modifiers(classnames('pipeline-toggle', className), {\n      enabled,\n    })}\n  >\n    <input\n      id={`pipeline-toggle-input-${id}`}\n      className=\"pipeline-toggle-input\"\n      type=\"checkbox\"\n      data-heap-event={`visible.code.${checked}`}\n      checked={checked}\n      disabled={!enabled}\n      onChange={onChange}\n    />\n    <label\n      className={modifiers('pipeline-toggle-label', {\n        checked: enabled && checked,\n      })}\n      htmlFor={`pipeline-toggle-input-${id}`}\n    >\n      {title}\n    </label>\n  </div>\n);\n\nexport default Toggle;\n","import MetaData from './metadata';\n\nexport default MetaData;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport modifiers from '../../utils/modifiers';\nimport NodeIcon from '../../components/icons/node-icon';\nimport IconButton from '../../components/ui/icon-button';\nimport CommandCopier from '../ui/command-copier/command-copier';\nimport PlotlyChart from '../plotly-chart';\nimport CloseIcon from '../icons/close';\nimport ExpandIcon from '../icons/expand';\nimport MetaDataRow from './metadata-row';\nimport MetaDataCode from './metadata-code';\nimport Toggle from '../ui/toggle';\nimport {\n  getVisibleMetaSidebar,\n  getClickedNodeMetaData,\n} from '../../selectors/metadata';\nimport { toggleNodeClicked } from '../../actions/nodes';\nimport { toggleCode, togglePlotModal } from '../../actions';\nimport getShortType from '../../utils/short-type';\nimport { useGeneratePathname } from '../../utils/hooks/use-generate-pathname';\nimport './styles/metadata.css';\n\n/**\n * Shows node meta data\n */\nconst MetaData = ({\n  visible = true,\n  metadata,\n  theme,\n  visibleCode,\n  onToggleCode,\n  onToggleNodeSelected,\n  onToggleMetadataModal,\n}) => {\n  const { toFlowchartPage } = useGeneratePathname();\n  // Hide code panel when selected metadata changes\n  useEffect(() => onToggleCode(false), [metadata, onToggleCode]);\n  // Hide plot modal when selected metadata changes\n  useEffect(\n    () => onToggleMetadataModal(false),\n    [metadata, onToggleMetadataModal]\n  );\n\n  const isTaskNode = metadata?.type === 'task';\n  const isDataNode = metadata?.type === 'data';\n  const isParametersNode = metadata?.type === 'parameters';\n  const nodeTypeIcon = getShortType(metadata?.datasetType, metadata?.type);\n  const hasPlot = Boolean(metadata?.plot);\n  const hasImage = Boolean(metadata?.image);\n  const hasTrackingData = Boolean(metadata?.trackingData);\n  const hasCode = Boolean(metadata?.code);\n  const isTranscoded = Boolean(metadata?.originalType);\n  const showCodePanel = visible && visibleCode && hasCode;\n  const showCodeSwitch = hasCode;\n\n  let runCommand = metadata?.runCommand;\n  if (!runCommand) {\n    // provide a help text for user to know why the run command is not available for the task node\n    runCommand = isTaskNode\n      ? 'Please provide a name argument for this node in order to see a run command.'\n      : null;\n  }\n\n  // translates the naming for the different types of nodes\n  const translateMetadataType = (metadataType) => {\n    if (metadataType === 'task') {\n      return 'node';\n    } else if (metadataType === 'data') {\n      return 'dataset';\n    }\n\n    return metadataType;\n  };\n\n  const onCloseClick = () => {\n    // Deselecting a node automatically hides MetaData panel\n    onToggleNodeSelected(null);\n    // and reset the URL to '/'\n    toFlowchartPage();\n  };\n\n  const onExpandPlotClick = () => {\n    onToggleMetadataModal(true);\n  };\n\n  // Since we style the path right-to-left, remove the initial slash\n  const removeInitialSlash = (string) => {\n    return string?.replace(/^\\//g, '');\n  };\n\n  const shortenDatasetType = (string) => {\n    return string?.split('.').pop();\n  };\n\n  return (\n    <>\n      <MetaDataCode visible={showCodePanel} value={metadata?.code} />\n      <div className={modifiers('pipeline-metadata', { visible }, 'kedro')}>\n        {metadata && (\n          <>\n            <div className=\"pipeline-metadata__header-toolbox\">\n              <div className=\"pipeline-metadata__header\">\n                <NodeIcon\n                  className=\"pipeline-metadata__icon\"\n                  icon={nodeTypeIcon}\n                />\n                <h2 className=\"pipeline-metadata__title\">{metadata.name}</h2>\n              </div>\n              <IconButton\n                ariaLabel=\"Close Metadata Panel\"\n                className={modifiers('pipeline-metadata__close-button', {\n                  hasCode,\n                })}\n                container={React.Fragment}\n                icon={CloseIcon}\n                onClick={onCloseClick}\n              />\n              {showCodeSwitch && (\n                <Toggle\n                  id=\"code\"\n                  checked={visibleCode}\n                  enabled={hasCode}\n                  title=\"Show Code\"\n                  onChange={(event) => {\n                    onToggleCode(event.target.checked);\n                  }}\n                />\n              )}\n            </div>\n            <div className=\"pipeline-metadata__list\">\n              <dl className=\"pipeline-metadata__properties\">\n                <MetaDataRow\n                  label=\"Type:\"\n                  value={translateMetadataType(metadata.type)}\n                />\n                {!isTranscoded && (\n                  <MetaDataRow\n                    label=\"Dataset Type:\"\n                    visible={isDataNode}\n                    kind=\"type\"\n                    title={metadata.datasetType}\n                    value={shortenDatasetType(metadata.datasetType)}\n                  />\n                )}\n                {isTranscoded && (\n                  <>\n                    <MetaDataRow\n                      label=\"Original Type:\"\n                      visible={isDataNode}\n                      kind=\"type\"\n                      value={metadata.originalType}\n                    />\n                    <MetaDataRow\n                      label=\"Transcoded Types:\"\n                      visible={isDataNode}\n                      kind=\"type\"\n                      value={metadata.transcodedTypes}\n                    />\n                  </>\n                )}\n                <MetaDataRow\n                  label=\"File Path:\"\n                  kind=\"path\"\n                  value={removeInitialSlash(metadata.filepath)}\n                />\n                {hasTrackingData && (\n                  <MetaDataRow\n                    label=\"Tracking data from last run:\"\n                    theme={theme}\n                    visible={isDataNode}\n                    kind=\"trackingData\"\n                    commas={false}\n                    inline={false}\n                    value={metadata.trackingData}\n                  />\n                )}\n                <MetaDataRow\n                  label=\"Parameters:\"\n                  theme={theme}\n                  visible={isParametersNode || isTaskNode}\n                  kind=\"parameters\"\n                  commas={false}\n                  inline={false}\n                  value={metadata.parameters}\n                  limit={10}\n                />\n                <MetaDataRow\n                  label=\"Inputs:\"\n                  visible={isTaskNode}\n                  value={metadata.inputs}\n                />\n                <MetaDataRow\n                  label=\"Outputs:\"\n                  visible={isTaskNode}\n                  value={metadata.outputs}\n                />\n                {metadata.type === 'task' && (\n                  <MetaDataRow\n                    label=\"Tags:\"\n                    kind=\"token\"\n                    commas={false}\n                    value={metadata.tags}\n                  />\n                )}\n                <MetaDataRow label=\"Run Command:\" visible={Boolean(runCommand)}>\n                  <CommandCopier command={runCommand} />\n                </MetaDataRow>\n              </dl>\n              {hasPlot && (\n                <>\n                  <div\n                    className=\"pipeline-metadata__plot\"\n                    onClick={onExpandPlotClick}\n                  >\n                    <PlotlyChart\n                      data={metadata.plot.data}\n                      layout={metadata.plot.layout}\n                      view=\"preview\"\n                    />\n                  </div>\n                  <button\n                    className=\"pipeline-metadata__expand-plot\"\n                    onClick={onExpandPlotClick}\n                  >\n                    <ExpandIcon className=\"pipeline-metadata__expand-plot-icon\"></ExpandIcon>\n                    <span className=\"pipeline-metadata__expand-plot-text\">\n                      Expand Plotly Visualization\n                    </span>\n                  </button>\n                </>\n              )}\n              {hasImage && (\n                <>\n                  <div\n                    className=\"pipeline-metadata__plot\"\n                    onClick={onExpandPlotClick}\n                  >\n                    <img\n                      alt=\"Matplotlib rendering\"\n                      className=\"pipeline-metadata__plot-image\"\n                      src={`data:image/png;base64,${metadata.image}`}\n                    />\n                  </div>\n                  <button\n                    className=\"pipeline-metadata__expand-plot\"\n                    onClick={onExpandPlotClick}\n                  >\n                    <ExpandIcon className=\"pipeline-metadata__expand-plot-icon\"></ExpandIcon>\n                    <span className=\"pipeline-metadata__expand-plot-text\">\n                      Expand Matplotlib Image\n                    </span>\n                  </button>\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport const mapStateToProps = (state, ownProps) => ({\n  visible: getVisibleMetaSidebar(state),\n  metadata: getClickedNodeMetaData(state),\n  theme: state.theme,\n  visibleCode: state.visible.code,\n  ...ownProps,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleNodeSelected: (nodeID) => {\n    dispatch(toggleNodeClicked(nodeID));\n  },\n  onToggleCode: (visible) => {\n    dispatch(toggleCode(visible));\n  },\n  onToggleMetadataModal: (visible) => {\n    dispatch(togglePlotModal(visible));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetaData);\n","import React from 'react';\n\nconst CollapseIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M21 3v18H3v-9.133h2V19h14V5h-7V3h9zm-16.293.293L11 9.586V8h2v5H8v-2h1.586L3.293 4.707l1.414-1.414z\" />\n  </svg>\n);\n\nexport default CollapseIcon;\n","import React from 'react';\n\nconst BackIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M14.312 5.244c.387.336.454.905.172 1.318l-.071.093-3.574 4.122 31.684-.058c.552-.001 1 .446 1.002.998 0 .513-.385.936-.882.995l-.117.007-31.323.058 3.225 3.9c.326.395.298.967-.048 1.328l-.086.08c-.395.326-.967.298-1.328-.048l-.08-.086-5.326-6.443L12.9 5.345c.362-.417.994-.462 1.41-.1z\" />\n  </svg>\n);\n\nexport default BackIcon;\n","import MetadataModal from './metadata-modal';\n\nexport default MetadataModal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PlotlyChart from '../plotly-chart';\nimport CollapseIcon from '../icons/collapse';\nimport BackIcon from '../icons/back';\nimport NodeIcon from '../icons/node-icon';\nimport { togglePlotModal } from '../../actions';\nimport getShortType from '../../utils/short-type';\nimport { getClickedNodeMetaData } from '../../selectors/metadata';\nimport './metadata-modal.css';\n\nconst MetadataModal = ({ metadata, onToggle, visible }) => {\n  const hasPlot = Boolean(metadata?.plot);\n  const hasImage = Boolean(metadata?.image);\n\n  if (!visible.metadataModal || (!hasPlot && !hasImage)) {\n    return null;\n  }\n\n  const nodeTypeIcon = getShortType(metadata?.datasetType, metadata?.type);\n\n  const onCollapsePlotClick = () => {\n    onToggle(false);\n  };\n\n  return (\n    <div className=\"pipeline-metadata-modal\">\n      <div className=\"pipeline-plot-modal__top\">\n        <button\n          className=\"pipeline-plot-modal__back\"\n          onClick={onCollapsePlotClick}\n        >\n          <BackIcon className=\"pipeline-plot-modal__back-icon\"></BackIcon>\n          <span className=\"pipeline-plot-modal__back-text\">Back</span>\n        </button>\n        <div className=\"pipeline-plot-modal__header\">\n          <NodeIcon className=\"pipeline-plot-modal__icon\" icon={nodeTypeIcon} />\n          <span className=\"pipeline-plot-modal__title\">{metadata.name}</span>\n        </div>\n      </div>\n      {hasPlot && (\n        <PlotlyChart\n          data={metadata.plot.data}\n          layout={metadata.plot.layout}\n          view=\"modal\"\n        />\n      )}\n      {hasImage && (\n        <div className=\"pipeline-matplotlib-chart\">\n          <div className=\"pipeline-metadata__plot-image-container\">\n            <img\n              alt=\"Matplotlib rendering\"\n              className=\"pipeline-metadata__plot-image--expanded\"\n              src={`data:image/png;base64,${metadata.image}`}\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"pipeline-plot-modal__bottom\">\n        <button\n          className=\"pipeline-plot-modal__collapse-plot\"\n          onClick={onCollapsePlotClick}\n        >\n          <CollapseIcon className=\"pipeline-plot-modal__collapse-plot-icon\"></CollapseIcon>\n          <span className=\"pipeline-plot-modal__collapse-plot-text\">\n            {hasPlot\n              ? 'Collapse Plotly Visualization'\n              : 'Collapse Matplotlib Image'}\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  metadata: getClickedNodeMetaData(state),\n  theme: state.theme,\n  visible: state.visible,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggle: (value) => {\n    dispatch(togglePlotModal(value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetadataModal);\n","import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\n\nexport const UPDATE_RUN_DETAILS = gql`\n  mutation updateRunDetails($runId: ID!, $runInput: RunInput!) {\n    updateRunDetails(runId: $runId, runInput: $runInput) {\n      ... on UpdateRunDetailsFailure {\n        errorMessage\n        id\n      }\n      ... on UpdateRunDetailsSuccess {\n        run {\n          bookmark\n          id\n          notes\n          title\n        }\n      }\n    }\n  }\n`;\n\nexport const useUpdateRunDetails = () => {\n  const [_updateRunDetails, { error, loading, reset }] =\n    useMutation(UPDATE_RUN_DETAILS);\n\n  return {\n    updateRunDetails: function (variables) {\n      _updateRunDetails({ variables });\n    },\n    error,\n    loading,\n    reset,\n  };\n};\n","import React from 'react';\n\nconst PencilIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M22 20v2H2v-2h20zM18.707 2.293l3 3a1 1 0 0 1 0 1.414l-11 11A1 1 0 0 1 10 18H7a1 1 0 0 1-1-1v-3a1 1 0 0 1 .293-.707l11-11a1 1 0 0 1 1.414 0zM15.5 7 8 14.414V16h1.586L17 8.5 15.5 7zm2.498-2.491L17 5.5 18.5 7l.95-.978-1.452-1.513z\" />\n  </svg>\n);\n\nexport default PencilIcon;\n","import React from 'react';\n\nconst BookmarkIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M17 4v16l-5-3-5 3V4z\" />\n  </svg>\n);\n\nexport default BookmarkIcon;\n","import React from 'react';\n\nconst ExportIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M5 16v4h14v-4h2v4c0 1-.8 2-1.9 2H5a2 2 0 01-2-2v-4h2zm8-14v11l3.5-3.5L18 11l-6 6-6-6 1.5-1.5L11 13V2h2z\" />\n  </svg>\n);\n\nexport default ExportIcon;\n","import React from 'react';\n\nconst BookmarkStrokeIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M18 21V3H6v18l6-4 6 4zM8 5h8v12.262l-4-2.666-4 2.666V5z\" />\n  </svg>\n);\n\nexport default BookmarkStrokeIcon;\n","import React from 'react';\n\nconst MenuIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M10.667 5 12 6.4 6.667 12 12 17.6 10.667 19 4 12l6.667-7zm8 0L20 6.4 14.667 12 20 17.6 18.667 19 12 12l6.667-7z\" />\n  </svg>\n);\n\nexport default MenuIcon;\n","import PrimaryToolbar from './primary-toolbar';\n\nexport default PrimaryToolbar;\n","import React from 'react';\nimport classnames from 'classnames';\nimport IconButton from '../ui/icon-button';\nimport MenuIcon from '../icons/menu';\n\nimport './primary-toolbar.css';\n\n/**\n * Toolbar to house buttons that controls display options for the main panel (flowchart, experiment details, etc)\n * @param {JSX} children The content to be rendered within the toolbar\n * @param {Function} onToggleSidebar Handle toggling of sidebar collapsable view\n * @param {Boolean} visible Handle display of tooltip text in relation to collapsable view\n */\nexport const PrimaryToolbar = ({\n  children,\n  onToggleSidebar,\n  visible = { sidebar: true },\n}) => (\n  <>\n    <ul className=\"pipeline-primary-toolbar kedro\">\n      <IconButton\n        active={visible.sidebar}\n        ariaLabel={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n        className={classnames(\n          'pipeline-menu-button',\n          'pipeline-menu-button--menu',\n          { 'pipeline-menu-button--inverse': !visible.sidebar }\n        )}\n        dataHeapEvent={`visible.sidebar.${visible.sidebar}`}\n        icon={MenuIcon}\n        labelText={`${visible.sidebar ? 'Hide' : 'Show'} menu`}\n        onClick={() => onToggleSidebar(!visible.sidebar)}\n      />\n      {children}\n    </ul>\n  </>\n);\n\nexport default PrimaryToolbar;\n","import React from 'react';\n\nconst ShowChangesIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <g>\n      <path d=\"M7.5,6 L7.5,17.25 L10.625,14.125 L12,15.5 L6.5,21 L1,15.5 L2.375,14.125 L5.5,17.25 L5.5,6 L7.5,6 Z M17.5,3 L23,8.5 L21.625,9.875 L18.5,6.75 L18.5,18 L16.5,18 L16.5,6.75 L13.375,9.875 L12,8.5 L17.5,3 Z\" />\n    </g>\n  </svg>\n);\n\nexport default ShowChangesIcon;\n","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nconst directions = {\n  leftToRight: {\n    entering: {\n      transform: 'translateX(0)',\n      visibility: 'visible',\n      opacity: '1',\n    },\n    entered: {\n      transform: 'translateX(0)',\n      visibility: 'visible',\n      opacity: '1',\n    },\n    exiting: {\n      transform: 'translateX(-34%)',\n      visibility: 'hidden',\n      opacity: '0',\n    },\n    exited: {\n      transform: 'translateX(-34%)',\n      visibility: 'hidden',\n      opacity: '0',\n    },\n  },\n  rightToLeft: {\n    entering: {\n      transform: 'translateX(0)',\n      visibility: 'visible',\n      opacity: '1',\n    },\n    entered: {\n      transform: 'translateX(0)',\n      visibility: 'visible',\n      opacity: '1',\n    },\n    exiting: {\n      transform: 'translateX(34%)',\n      visibility: 'hidden',\n      opacity: '0',\n    },\n    exited: {\n      transform: 'translateX(34%)',\n      visibility: 'hidden',\n      opacity: '0',\n    },\n  },\n};\n\nexport const Animation = ({ children, direction, duration, state }) => {\n  const defaultStyle = {\n    transition: `transform 0.3s ease-out, opacity 0.1s linear`,\n  };\n\n  return (\n    <Transition in={state} timeout={duration}>\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...directions[direction][state],\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nexport const SlideFromLeftToRight = ({ state, duration, children }) => {\n  return (\n    <Animation\n      children={children}\n      direction=\"leftToRight\"\n      duration={duration}\n      state={state}\n    />\n  );\n};\n\nexport const SlideFromRightToLeft = ({ state, duration, children }) => {\n  return (\n    <Animation\n      children={children}\n      direction=\"rightToLeft\"\n      duration={duration}\n      state={state}\n    />\n  );\n};\n","import ExperimentPrimaryToolbar from './experiment-primary-toolbar';\n\nexport default ExperimentPrimaryToolbar;\n","import React from 'react';\nimport { useUpdateRunDetails } from '../../../apollo/mutations';\nimport IconButton from '../../ui/icon-button';\nimport PencilIcon from '../../icons/pencil';\nimport BookmarkIcon from '../../icons/bookmark';\nimport ExportIcon from '../../icons/export';\nimport BookmarkStrokeIcon from '../../icons/bookmark-stroke';\nimport PrimaryToolbar from '../../primary-toolbar';\nimport ShowChangesIcon from '../../icons/show-changes';\n\nimport {\n  SlideFromLeftToRight,\n  SlideFromRightToLeft,\n} from './sliding-animation';\n\nconst duration = 300;\n\nexport const ExperimentPrimaryToolbar = ({\n  displaySidebar,\n  enableComparisonView,\n  enableShowChanges,\n  selectedRunData,\n  setEnableShowChanges,\n  setSidebarVisible,\n  showChangesIconDisabled,\n  showRunDetailsModal,\n  sidebarVisible,\n  setShowRunExportModal,\n}) => {\n  const { updateRunDetails } = useUpdateRunDetails();\n\n  const toggleBookmark = () => {\n    updateRunDetails({\n      runId: selectedRunData.id,\n      runInput: { bookmark: !selectedRunData?.bookmark },\n    });\n  };\n\n  return (\n    <PrimaryToolbar\n      displaySidebar={displaySidebar}\n      onToggleSidebar={setSidebarVisible}\n      visible={{ sidebar: sidebarVisible }}\n    >\n      <SlideFromLeftToRight state={enableComparisonView} duration={duration}>\n        {enableComparisonView && (\n          <>\n            <IconButton\n              active={enableShowChanges}\n              ariaLabel=\"Toggle show changes\"\n              className={'pipeline-menu-button--labels'}\n              disabled={showChangesIconDisabled}\n              icon={ShowChangesIcon}\n              labelText={\n                !showChangesIconDisabled\n                  ? `${enableShowChanges ? 'Disable' : 'Enable'} show changes`\n                  : null\n              }\n              onClick={() => setEnableShowChanges(!enableShowChanges)}\n            />\n            <IconButton\n              ariaLabel=\"Export Run Data\"\n              className={'pipeline-menu-button--export-runs'}\n              icon={ExportIcon}\n              labelText=\"Export run data\"\n              onClick={() => setShowRunExportModal(true)}\n            />\n          </>\n        )}\n      </SlideFromLeftToRight>\n      <SlideFromRightToLeft state={!enableComparisonView} duration={duration}>\n        {!enableComparisonView && (\n          <>\n            <IconButton\n              active={selectedRunData?.bookmark}\n              ariaLabel=\"Toggle run bookmark\"\n              className={'pipeline-menu-button--labels'}\n              icon={\n                selectedRunData?.bookmark ? BookmarkIcon : BookmarkStrokeIcon\n              }\n              labelText={`${\n                selectedRunData?.bookmark ? 'Unbookmark' : 'Bookmark'\n              }`}\n              onClick={() => toggleBookmark()}\n            />\n            <IconButton\n              ariaLabel=\"Edit run details\"\n              className={'pipeline-menu-button--labels'}\n              icon={PencilIcon}\n              labelText={`Edit details`}\n              onClick={() => showRunDetailsModal(true)}\n            />\n            <IconButton\n              ariaLabel=\"Export Run Data\"\n              className={'pipeline-menu-button--export-runs'}\n              icon={ExportIcon}\n              labelText=\"Export run data\"\n              onClick={() => setShowRunExportModal(true)}\n            />\n          </>\n        )}\n      </SlideFromRightToLeft>\n    </PrimaryToolbar>\n  );\n};\n\nexport default ExperimentPrimaryToolbar;\n","import React from 'react';\n\nconst LabelIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M22 3v18H8.333L2 12l6.333-9H22zm-6.155 4h-3.69L10 17h1.944l.38-1.809h3.352l.38 1.809H18L15.845 7zm-1.507 1.676l.972 4.75h-2.62l.972-4.75h.676z\" />\n  </svg>\n);\n\nexport default LabelIcon;\n","import React from 'react';\n\nconst LayersIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 3l9 4.82-3.6 2.07 3.6 1.93-3.6 2.07 3.6 1.93L12 21l-9-5.18 3.6-1.93L3 11.82 6.6 9.9 3 7.82 12 3zM8.72 15.11l-1.45.78L12 18.6l4.73-2.72-1.45-.78L12 17l-3.28-1.89zm0-4l-1.45.78L12 14.6l4.73-2.72-1.45-.78L12 13l-3.28-1.89zM12 5.35L7.27 7.9 12 10.6l4.73-2.72L12 5.36z\" />\n  </svg>\n);\n\nexport default LayersIcon;\n","import FlowchartPrimaryToolbar from './flowchart-primary-toolbar';\n\nexport default FlowchartPrimaryToolbar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  toggleExportModal,\n  toggleLayers,\n  toggleSidebar,\n  toggleTextLabels,\n} from '../../actions';\nimport IconButton from '../ui/icon-button';\nimport LabelIcon from '../icons/label';\nimport ExportIcon from '../icons/export';\nimport LayersIcon from '../icons/layers';\nimport PrimaryToolbar from '../primary-toolbar';\nimport { getVisibleLayerIDs } from '../../selectors/disabled';\n\n/**\n * Main controls for filtering the chart data\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Boolean} textLabels Whether text labels are displayed\n */\nexport const FlowchartPrimaryToolbar = ({\n  disableLayerBtn,\n  displaySidebar,\n  onToggleExportModal,\n  onToggleLayers,\n  onToggleSidebar,\n  onToggleTextLabels,\n  textLabels,\n  visible,\n  visibleLayers,\n}) => (\n  <>\n    <PrimaryToolbar\n      displaySidebar={displaySidebar}\n      onToggleSidebar={onToggleSidebar}\n      visible={visible}\n    >\n      <IconButton\n        active={textLabels}\n        ariaLabel={`${textLabels ? 'Hide' : 'Show'} text labels`}\n        className={'pipeline-menu-button--labels'}\n        icon={LabelIcon}\n        labelText={`${textLabels ? 'Hide' : 'Show'} text labels`}\n        onClick={() => onToggleTextLabels(!textLabels)}\n        visible={visible.labelBtn}\n      />\n      <IconButton\n        active={visibleLayers}\n        ariaLabel={`Turn data layers ${visibleLayers ? 'off' : 'on'}`}\n        className={'pipeline-menu-button--layers'}\n        dataHeapEvent={`visible.layers.${visibleLayers}`}\n        disabled={disableLayerBtn}\n        icon={LayersIcon}\n        labelText={`${visibleLayers ? 'Hide' : 'Show'} layers`}\n        onClick={() => onToggleLayers(!visibleLayers)}\n        visible={visible.layerBtn}\n      />\n      <IconButton\n        ariaLabel=\"Export graph as SVG or PNG\"\n        className={'pipeline-menu-button--export'}\n        icon={ExportIcon}\n        labelText=\"Export visualisation\"\n        onClick={() => onToggleExportModal(true)}\n        visible={visible.exportBtn}\n      />\n    </PrimaryToolbar>\n  </>\n);\n\nexport const mapStateToProps = (state) => ({\n  disableLayerBtn: !state.layer.ids.length,\n  displaySidebar: state.display.sidebar,\n  textLabels: state.textLabels,\n  visible: state.visible,\n  visibleLayers: Boolean(getVisibleLayerIDs(state).length),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleExportModal: (value) => {\n    dispatch(toggleExportModal(value));\n  },\n  onToggleLayers: (value) => {\n    dispatch(toggleLayers(Boolean(value)));\n  },\n  onToggleSidebar: (visible) => {\n    dispatch(toggleSidebar(visible));\n  },\n  onToggleTextLabels: (value) => {\n    dispatch(toggleTextLabels(Boolean(value)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowchartPrimaryToolbar);\n","import 'd3-transition';\n\nconst viewportMargin = 2;\n\n/**\n * Render viewport region\n */\nexport const drawViewport = function () {\n  const { mapSize } = this.props;\n  const { x, y, width, height } = this.getViewport();\n\n  const minX = Math.max(x, viewportMargin);\n  const minY = Math.max(y, viewportMargin);\n  const maxX = Math.min(x + width, mapSize.width - viewportMargin);\n  const maxY = Math.min(y + height, mapSize.height - viewportMargin);\n\n  this.el.viewport.enter().attr('x', 0).attr('y', 0);\n\n  this.el.viewport\n    .attr('transform', `translate(${minX}, ${minY})`)\n    .attr('width', Math.max(0, maxX - minX))\n    .attr('height', Math.max(0, maxY - minY));\n};\n\n/**\n * Render nodes\n */\nexport const drawNodes = function () {\n  const { clickedNode, linkedNodes, nodeActive, nodeSelected, nodes } =\n    this.props;\n\n  this.el.nodes = this.el.nodeGroup\n    .selectAll('.pipeline-minimap-node')\n    .data(nodes, (node) => node.id);\n\n  const enterNodes = this.el.nodes\n    .enter()\n    .append('g')\n    .attr('class', 'pipeline-minimap-node');\n\n  enterNodes\n    .attr('transform', (node) => `translate(${node.x}, ${node.y})`)\n    .attr('opacity', 0);\n\n  enterNodes.append('rect');\n\n  this.el.nodes\n    .exit()\n    .transition('exit-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.nodes = this.el.nodes\n    .merge(enterNodes)\n    .attr('data-id', (node) => node.id)\n    .classed('pipeline-minimap-node--active', (node) => nodeActive[node.id])\n    .classed('pipeline-minimap-node--selected', (node) => nodeSelected[node.id])\n    .classed(\n      'pipeline-minimap-node--faded',\n      (node) => clickedNode && !linkedNodes[node.id]\n    );\n\n  this.el.nodes\n    .transition('update-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 1)\n    .attr('transform', (node) => `translate(${node.x}, ${node.y})`)\n    .end()\n    .catch(() => {});\n\n  this.el.nodes\n    .select('rect')\n    .attr('width', (node) => node.width - sizeOffset(node))\n    .attr('height', (node) => node.height - sizeOffset(node))\n    .attr('x', (node) => (node.width - sizeOffset(node)) / -2)\n    .attr('y', (node) => (node.height - sizeOffset(node)) / -2);\n};\n\nconst sizeOffset = (node) => (node.type === 'task' ? 5 : 16);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'd3-transition';\nimport { select } from 'd3-selection';\nimport { getNodeActive, getNodeSelected } from '../../selectors/nodes';\nimport { updateZoom } from '../../actions';\nimport { getChartSize, getChartZoom } from '../../selectors/layout';\nimport { getLinkedNodes } from '../../selectors/linked-nodes';\nimport {\n  viewing,\n  isOrigin,\n  viewTransformToFit,\n  getViewTransform,\n  setViewTransformExact,\n} from '../../utils/view';\nimport { drawNodes, drawViewport } from './draw';\nimport './styles/minimap.css';\n\n/**\n * Display a pipeline minimap, mostly rendered with D3\n */\nexport class MiniMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.DURATION = 700;\n    this.TRANSITION_WAIT = 200;\n    this.ZOOM_RATE = 0.0025;\n\n    this.isPointerDown = false;\n    this.isPointerInside = false;\n    this.lastTransitionTime = 0;\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.nodesRef = React.createRef();\n    this.viewportRef = React.createRef();\n\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerEnter = this.onPointerEnter.bind(this);\n    this.onPointerLeave = this.onPointerLeave.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerWheel = this.onPointerWheel.bind(this);\n    this.onPointerWheelGlobal = this.onPointerWheelGlobal.bind(this);\n    this.onPointerUpGlobal = this.onPointerUpGlobal.bind(this);\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n\n    this.view = viewing({\n      container: this.svgRef,\n      wrapper: this.wrapperRef,\n      allowUserInput: false,\n    });\n\n    this.addGlobalEventListeners();\n    this.update();\n  }\n\n  componentWillUnmount() {\n    this.removeGlobalEventListeners();\n  }\n\n  /**\n   * Add window event listeners\n   */\n  addGlobalEventListeners() {\n    window.addEventListener('wheel', this.onPointerWheelGlobal, {\n      passive: false,\n    });\n    window.addEventListener(\n      pointerEventName('pointerup'),\n      this.onPointerUpGlobal\n    );\n  }\n\n  /**\n   * Remove window event listeners\n   */\n  removeGlobalEventListeners() {\n    window.removeEventListener('wheel', this.onPointerWheelGlobal);\n    window.removeEventListener(\n      pointerEventName('pointerup'),\n      this.onPointerUpGlobal\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    this.update(prevProps);\n  }\n\n  /**\n   * Updates drawing and zoom if props have changed\n   */\n  update(prevProps = {}) {\n    const { visible, chartZoom } = this.props;\n\n    if (visible) {\n      const changed = (...names) => this.changed(names, prevProps, this.props);\n\n      if (\n        changed(\n          'visible',\n          'nodes',\n          'clickedNodes',\n          'linkedNodes',\n          'nodesActive',\n          'nodeSelected'\n        )\n      ) {\n        drawNodes.call(this);\n      }\n\n      if (changed('visible', 'chartZoom') && chartZoom.applied) {\n        drawViewport.call(this);\n      }\n\n      if (changed('visible', 'nodes', 'textLabels', 'chartSize')) {\n        this.resetView();\n      }\n    }\n  }\n\n  /**\n   * Returns true if any of the given props are different between given objects.\n   * Only shallow changes are detected.\n   */\n  changed(props, objectA, objectB) {\n    return (\n      objectA &&\n      objectB &&\n      props.some((prop) => objectA[prop] !== objectB[prop])\n    );\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      nodeGroup: select(this.nodesRef.current),\n      viewport: select(this.viewportRef.current),\n    };\n  }\n\n  /**\n   * Handle pointer enter\n   */\n  onPointerEnter = () => {\n    this.isPointerInside = true;\n  };\n\n  /**\n   * Handle pointer leave\n   */\n  onPointerLeave = () => {\n    this.isPointerInside = false;\n  };\n\n  /**\n   * Handle global pointer up\n   */\n  onPointerUpGlobal = () => {\n    this.isPointerDown = false;\n    this.isPointerInside = false;\n  };\n\n  /**\n   * Handle pointer down\n   * @param {Object} event Event object\n   */\n  onPointerDown = (event) => {\n    this.isPointerDown = true;\n    this.isPointerInside = true;\n\n    this.onPointerMove(event, true);\n  };\n\n  /**\n   * Handle pointer wheel\n   * @param {Object} event Event object\n   */\n  onPointerWheel = (event) => {\n    // Change zoom based on wheel velocity\n    this.props.onUpdateChartZoom({\n      relative: true,\n      scale: -(event.deltaY || 0) * this.ZOOM_RATE,\n      applied: false,\n      transition: false,\n    });\n  };\n\n  /**\n   * Handle global pointer wheel\n   * @param {Object} event Event object\n   */\n  onPointerWheelGlobal = (event) => {\n    // Prevent window scroll when wheeling on this minimap\n    const wasTarget = this.containerRef.current.contains(event.target);\n    if (wasTarget) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Handle pointer move\n   * @param {Object} event Event object\n   * @param {?Boolean} useTransition Apply with transition\n   */\n  onPointerMove = (event, useTransition = false) => {\n    if (this.isPointerDown && this.isPointerInside) {\n      // Wait for transition\n      const time = Number(new Date());\n      if (time - this.lastTransitionTime < this.TRANSITION_WAIT) {\n        return;\n      }\n\n      // Get current state\n      const { scale: chartScale = 1 } = this.props.chartZoom;\n      const { width, height } = this.props.mapSize;\n      const { width: graphWidth, height: graphHeight } = this.props.graphSize;\n      const { k: scale = 1 } = getViewTransform(this.view);\n      const containerRect = this.svgRef.current.getBoundingClientRect();\n\n      // Transform minimap pointer position to a graph position\n      const pointerX = (event.clientX - containerRect.x) / scale;\n      const pointerY = (event.clientY - containerRect.y) / scale;\n      const centerX = (width / scale - graphWidth) * 0.5;\n      const centerY = (height / scale - graphHeight) * 0.5;\n      const x = (pointerX - centerX) * chartScale;\n      const y = (pointerY - centerY) * chartScale;\n\n      // Dispatch an update to be applied\n      this.props.onUpdateChartZoom({\n        x,\n        y,\n        scale: chartScale,\n        relative: false,\n        applied: false,\n        transition: useTransition,\n      });\n\n      if (useTransition) {\n        this.lastTransitionTime = time;\n      }\n    }\n  };\n\n  /**\n   * Zoom and scale to fit\n   */\n  resetView() {\n    const { graphSize, mapSize } = this.props;\n    const { width: mapWidth, height: mapHeight } = mapSize;\n    const { width: graphWidth, height: graphHeight } = graphSize;\n\n    // Skip if chart or graph is not ready yet\n    if (!mapWidth || !graphWidth) {\n      return;\n    }\n\n    // Padding offset\n    const offset = { x: padding * 0.5, y: padding * 0.5 };\n\n    // Find a transform that fits everything in view\n    const transform = viewTransformToFit({\n      offset,\n      viewWidth: mapWidth - padding,\n      viewHeight: mapHeight - padding,\n      objectWidth: graphWidth,\n      objectHeight: graphHeight,\n    });\n\n    // Detect first transform\n    const isFirstTransform = isOrigin(getViewTransform(this.view));\n\n    // Apply transform ignoring extents\n    setViewTransformExact(\n      this.view,\n      transform,\n      isFirstTransform ? 0 : this.DURATION,\n      false\n    );\n  }\n\n  /**\n   * Get the position of the viewport relative to the minimap\n   */\n  getViewport() {\n    const { chartZoom, chartSize } = this.props;\n    const {\n      k: mapScale,\n      x: translateX,\n      y: translateY,\n    } = getViewTransform(this.view);\n\n    const scale = mapScale / chartZoom.scale;\n    const width = chartSize.width * scale;\n    const height = chartSize.height * scale;\n    const x = -translateX - (chartZoom.x - chartSize.sidebarWidth) * scale;\n    const y = -translateY - chartZoom.y * scale;\n\n    return { x, y, width, height };\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { width, height } = this.props.mapSize;\n    const transformStyle = {\n      transform: `translate(calc(-100% + ${width}px), -100%)`,\n    };\n\n    // Add pointer events with back compatibility\n    const _ = pointerEventName;\n    const inputEvents = {\n      onWheel: this.onPointerWheel,\n      [_('onPointerEnter')]: this.onPointerEnter,\n      [_('onPointerLeave')]: this.onPointerLeave,\n      [_('onPointerDown')]: this.onPointerDown,\n      [_('onPointerMove')]: this.onPointerMove,\n    };\n\n    return (\n      <div\n        className=\"pipeline-minimap-container\"\n        style={this.props.visible ? transformStyle : {}}\n      >\n        <div\n          className=\"pipeline-minimap kedro\"\n          ref={this.containerRef}\n          {...inputEvents}\n        >\n          <svg\n            id=\"pipeline-minimap-graph\"\n            className=\"pipeline-minimap__graph\"\n            width={width}\n            height={height}\n            viewBox={`0 0 ${width} ${height}`}\n            ref={this.svgRef}\n          >\n            <g id=\"zoom-wrapper\" ref={this.wrapperRef}>\n              <g\n                id=\"minimap-nodes\"\n                className=\"pipeline-minimap__nodes\"\n                ref={this.nodesRef}\n              />\n            </g>\n            <rect\n              className=\"pipeline-minimap__viewport\"\n              ref={this.viewportRef}\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Map sizing constants\nconst padding = 32;\nconst height = 220;\nconst minWidth = 218;\nconst maxWidth = 1.5 * minWidth;\n\n/**\n * Convert pointer event name to a mouse event name if not supported\n */\nconst pointerEventName = (event) =>\n  window.PointerEvent\n    ? event\n    : event.replace('pointer', 'mouse').replace('Pointer', 'Mouse');\n\n/**\n * Gets the map sizing that fits the graph in state\n */\nconst getMapSize = (state) => {\n  const size = state.graph.size || {};\n  const graphWidth = size.width || 0;\n  const graphHeight = size.height || 0;\n\n  if (graphWidth > 0 && graphHeight > 0) {\n    // Constrain width\n    const scaledWidth = graphWidth * (height / graphHeight);\n    const width = Math.min(Math.max(scaledWidth, minWidth), maxWidth);\n\n    return { width, height };\n  }\n\n  // Use minimum size if no graph\n  return { width: minWidth, height: height };\n};\n\n// Maintain a single reference to support change detection\nconst emptyNodes = [];\nconst emptyGraphSize = {};\n\nexport const mapStateToProps = (state, ownProps) => ({\n  visible: state.visible.miniMap,\n  mapSize: getMapSize(state),\n  clickedNode: state.node.clicked,\n  chartSize: getChartSize(state),\n  chartZoom: getChartZoom(state),\n  graphSize: state.graph.size || emptyGraphSize,\n  nodes: state.graph.nodes || emptyNodes,\n  linkedNodes: getLinkedNodes(state),\n  nodeActive: getNodeActive(state),\n  nodeSelected: getNodeSelected(state),\n  textLabels: state.textLabels,\n  ...ownProps,\n});\n\nexport const mapDispatchToProps = (dispatch, ownProps) => ({\n  onUpdateChartZoom: (transform) => {\n    dispatch(updateZoom(transform));\n  },\n  ...ownProps,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniMap);\n","import MiniMap from './minimap';\n\nexport default MiniMap;\n","import React from 'react';\n\nconst MapIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M9.5 3l6 3.7 6-2.1v13.9l-6.2 3.3-6-3.8L3 20.4V5.3L9.5 3zm10 4.4l-3.1 1.2v10.3l3.2-1.6V7.4zm-9.1-1.5v10.4l4 2.5V8.4l-4-2.5zm-2-.4L5 6.7v10.8l3.4-1.3V5.5z\" />\n  </svg>\n);\n\nexport default MapIcon;\n","import React from 'react';\n\nconst PlusIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"m13 4v7h7v2h-7v7h-2v-7h-7v-2h7v-7z\" />\n  </svg>\n);\n\nexport default PlusIcon;\n","import React from 'react';\n\nconst MinusIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M19 13H5v-2h14z\" />\n  </svg>\n);\n\nexport default MinusIcon;\n","import React from 'react';\n\nconst ResetIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M8.5 4v5.5h-2V7.7A7 7 0 0012 19v2A9 9 0 015.3 6H3V4h5.5zM12 3a9 9 0 017.1 14.5h2.4v2H16V14h2v1.6A7 7 0 0012 5z\" />\n  </svg>\n);\n\nexport default ResetIcon;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleMiniMap, updateZoom } from '../../actions';\nimport { getChartZoom } from '../../selectors/layout';\nimport IconButton from '../ui/icon-button';\nimport MapIcon from '../icons/map';\nimport PlusIcon from '../icons/plus';\nimport MinusIcon from '../icons/minus';\nimport ResetIcon from '../icons/reset';\nimport './minimap-toolbar.css';\n\n/**\n * Controls for minimap\n */\nexport const MiniMapToolbar = ({\n  chartZoom,\n  displayMiniMap,\n  onToggleMiniMap,\n  onUpdateChartZoom,\n  visible,\n}) => {\n  const { scale, minScale, maxScale } = chartZoom;\n\n  return (\n    <>\n      <ul className=\"pipeline-minimap-toolbar kedro\">\n        {displayMiniMap && (\n          <IconButton\n            active={visible.miniMap}\n            ariaLabel={`Turn minimap ${visible.miniMap ? 'off' : 'on'}`}\n            className={'pipeline-minimap-button pipeline-minimap-button--map'}\n            icon={MapIcon}\n            labelText={`${visible.miniMap ? 'Hide' : 'Show'} minimap`}\n            onClick={() => onToggleMiniMap(!visible.miniMap)}\n            visible={visible.miniMapBtn}\n          />\n        )}\n        <IconButton\n          ariaLabel={'Zoom in'}\n          className={'pipeline-minimap-button pipeline-minimap-button--zoom-in'}\n          disabled={scale >= maxScale}\n          icon={PlusIcon}\n          labelText={'Zoom in'}\n          onClick={() => onUpdateChartZoom(scaleZoom(chartZoom, 1.3))}\n          visible={visible.miniMapBtn}\n        />\n        <IconButton\n          ariaLabel={'Zoom out'}\n          className={\n            'pipeline-minimap-button pipeline-minimap-button--zoom-out'\n          }\n          disabled={scale <= minScale}\n          icon={MinusIcon}\n          labelText={'Zoom out'}\n          onClick={() => onUpdateChartZoom(scaleZoom(chartZoom, 0.7))}\n          visible={visible.miniMapBtn}\n        />\n        <IconButton\n          ariaLabel={'Reset zoom'}\n          className={'pipeline-minimap-button pipeline-minimap-button--reset'}\n          icon={ResetIcon}\n          labelText={'Reset zoom'}\n          onClick={() => onUpdateChartZoom(scaleZoom(chartZoom, 0))}\n          visible={visible.miniMapBtn}\n        />\n        <li>\n          <span className=\"pipeline-minimap-toolbar__scale\" title=\"Zoom level\">\n            {Math.round(100 * chartZoom.scale) || 100}%\n          </span>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nconst scaleZoom = ({ scale }, factor) => ({\n  scale: scale * (factor || 1),\n  applied: false,\n  transition: true,\n  reset: factor === 0,\n});\n\nexport const mapStateToProps = (state) => ({\n  visible: state.visible,\n  displayMiniMap: state.display.miniMap,\n  chartZoom: getChartZoom(state),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleMiniMap: (value) => {\n    dispatch(toggleMiniMap(value));\n  },\n  onUpdateChartZoom: (transform) => {\n    dispatch(updateZoom(transform));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniMapToolbar);\n","import MiniMapToolbar from './minimap-toolbar';\n\nexport default MiniMapToolbar;\n","import React from 'react';\n\nconst SearchIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n  </svg>\n);\n\nexport default SearchIcon;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport 'what-input';\n\nimport './search-input.css';\n\nconst SearchInput = ({\n  disabled,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  theme,\n  value: inputValue,\n}) => {\n  const [focused, setFocused] = useState(false);\n  const [value, setValue] = useState(inputValue);\n\n  useEffect(() => {\n    if (inputValue !== null) {\n      setValue(inputValue);\n    }\n  }, [inputValue]);\n\n  const _handleFocused = (event) => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(event, { focused: true });\n    }\n  };\n\n  /**\n   * _handleBlurred - changes the focus to disabled state.\n   */\n  const _handleBlurred = (event) => {\n    setFocused(false);\n\n    if (typeof onBlur === 'function') {\n      onBlur(event, { focused: false, value: event.target.value });\n    }\n  };\n\n  /**\n   * _handleChanged - updates the state with the value from the input and triggers the passed on change callback.\n   * @param  {Object} event\n   */\n  const _handleChanged = (event) => {\n    setValue(event.target.value);\n\n    if (typeof onChange === 'function') {\n      onChange(event, { value: event.target.value });\n    }\n  };\n\n  const labelWrapper = label && (\n    <div className=\"search-input__label\">{label}</div>\n  );\n\n  return (\n    <div className=\"kedro search-input-wrapper\">\n      <div\n        className={classnames(\n          'search-input',\n          `search-theme--${theme}`,\n          { 'search-input--disabled': disabled },\n          { 'search-input--focused': focused }\n        )}\n        onFocus={_handleFocused}\n        onBlur={_handleBlurred}\n      >\n        {labelWrapper}\n        <input\n          className=\"search-input__field\"\n          disabled={disabled}\n          onBlur={_handleBlurred}\n          onChange={_handleChanged}\n          onFocus={_handleFocused}\n          placeholder={placeholder || ''}\n          type=\"text\"\n          value={value || ''}\n        />\n        <div\n          aria-hidden=\"true\"\n          className=\"search-input__line\"\n          data-value={value || ''}\n        />\n      </div>\n    </div>\n  );\n};\n\nSearchInput.defaultProps = {\n  disabled: false,\n  label: null,\n  onBlur: null,\n  onChange: null,\n  onFocus: null,\n  placeholder: null,\n  theme: 'light',\n  value: null,\n};\n\nSearchInput.propTypes = {\n  /**\n   * Whether the input should be editable or not.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Label indicating what should be written in the input.\n   */\n  label: PropTypes.string,\n  /**\n   * Event listener which will be triggered on losing focus of the input (in other words, on blur).\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Event listener which will be triggered when input will gain focus,\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Event listener which will be trigerred on change of the input.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Placeholder hint text which is displayed inside the input field and dissapers when something is written inside.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Theme of the input - either 'dark' or 'light'.\n   */\n  theme: PropTypes.oneOf(['dark', 'light']),\n  /**\n   * Value to be displayed inside the input field, it is editable and can change if not disabled.\n   */\n  value: PropTypes.string,\n};\n\nexport default SearchInput;\n","import SearchInput from './search-input';\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CloseIcon from '../../icons/close';\nimport SearchIcon from '../../icons/search';\nimport SearchInput from './search-input';\n\n/**\n * SearchBarRenderer, used to output the actual DOM markup for the component\n */\nconst SearchBarRenderer = (props) => {\n  const {\n    children,\n    isFocused,\n    placeholder,\n    onBlur,\n    onChange,\n    onClear,\n    onFocus,\n    onSubmit,\n    theme,\n    showClearButton,\n    value,\n  } = props;\n\n  return (\n    <form\n      className={classnames('kedro', 'search-bar', `kui-theme--${theme}`, {\n        'search-bar--focused': isFocused,\n      })}\n      onSubmit={onSubmit}\n      role={children ? 'combobox' : 'search'}\n    >\n      <label className=\"search-bar__label\" htmlFor=\"search-bar\">\n        Search\n      </label>\n      <div className=\"search-bar__icon-wrapper\">\n        <SearchIcon className=\"icon icon__graphics\" />\n      </div>\n      <SearchInput\n        id=\"search-bar\"\n        placeholder={placeholder}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        value={value}\n        theme={theme}\n        type=\"search\"\n      />\n      <div\n        className={classnames('search-bar__dynamic-icon', {\n          'search-bar__dynamic-icon--visible': showClearButton,\n        })}\n      >\n        <button\n          className=\"icon--close\"\n          onBlur={onBlur}\n          onClick={onClear}\n          onFocus={onFocus}\n        >\n          <CloseIcon className=\"icon icon__graphics\" />\n        </button>\n      </div>\n      {children}\n    </form>\n  );\n};\n\nSearchBarRenderer.defaultProps = {\n  children: null,\n  onSubmit: null,\n};\n\nSearchBarRenderer.propTypes = {\n  /**\n   * Child component, usually search-bar-results\n   */\n  children: PropTypes.node,\n  /**\n   * Indicating whether the search bar is focused or blurred\n   */\n  isFocused: PropTypes.bool.isRequired,\n  /**\n   * Place holder text for search input\n   */\n  placeholder: PropTypes.string.isRequired,\n  /**\n   * On blur method, triggered by clicking outside the input\n   */\n  onBlur: PropTypes.func.isRequired,\n  /**\n   * On change method called after wait time has passed\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * On close method, triggered by icon click\n   */\n  onClear: PropTypes.func.isRequired,\n  /**\n   * On focus method, triggered by clicking into the input\n   */\n  onFocus: PropTypes.func.isRequired,\n  /**\n   * On submit method, triggered by hitting enter on the input\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Theme of the component\n   */\n  theme: PropTypes.oneOf(['light', 'dark']).isRequired,\n  /**\n   * Show clear button on right\n   */\n  showClearButton: PropTypes.bool.isRequired,\n  /**\n   * Text value for the input\n   */\n  value: PropTypes.string.isRequired,\n};\n\nexport default SearchBarRenderer;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBarRenderer from './search-bar-renderer';\n\nimport './search-bar.css';\n\nconst SearchBar = ({\n  children,\n  onBlur,\n  onChange,\n  onClear,\n  onFocus,\n  onSubmit,\n  placeholder,\n  theme,\n  value: inputValue,\n}) => {\n  const [value, setValue] = useState(inputValue);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClearButton, setShowClearButton] = useState(inputValue !== '');\n\n  useEffect(() => {\n    setValue(inputValue);\n    setShowClearButton(inputValue !== '');\n  }, [inputValue]);\n\n  /**\n   * onChange - fired for onChange events in input field\n   * @param  {Event} e native change event\n   */\n  const _handleChanged = (e) => {\n    setValue(e.target.value);\n    setShowClearButton(e.target.value !== '');\n\n    // trigger onChange prop if available\n    if (typeof onChange === 'function') {\n      onChange(e.target.value);\n    }\n  };\n\n  /**\n   * onFocus - fired for onFocus events in input field\n   * @param  {Event} e native change event\n   */\n  const _handleFocused = (e) => {\n    setIsFocused(true);\n\n    // trigger onFocus prop if available\n    if (typeof onFocus === 'function') {\n      onFocus(e.target.value);\n    }\n  };\n\n  /**\n   * onBlurred - fired for onBlur events in input field\n   * @param  {Event} e native change event\n   */\n  const _handleBlurred = (e) => {\n    setIsFocused(false);\n\n    // trigger onBlur prop if available\n    if (typeof onBlur === 'function') {\n      onBlur(e.target.value);\n    }\n  };\n\n  /**\n   * onClose - clear the text in the input\n   */\n  const _handleCleared = (event) => {\n    setValue('');\n    setShowClearButton(false);\n\n    // trigger onClear prop if available\n    if (typeof onClear === 'function') {\n      onClear();\n    }\n\n    // trigger onChange prop if available\n    if (typeof onChange === 'function') {\n      onChange('');\n    }\n\n    event.preventDefault();\n  };\n\n  /**\n   * Trigger onSubmit prop if available\n   * @param {Object} e native change event\n   */\n  const _handleSubmit = (e) => {\n    if (typeof onSubmit === 'function') {\n      onSubmit({\n        e,\n        data: value,\n      });\n    }\n  };\n\n  return (\n    <SearchBarRenderer\n      onBlur={_handleBlurred}\n      isFocused={isFocused}\n      placeholder={placeholder}\n      onChange={_handleChanged}\n      onClear={_handleCleared}\n      onFocus={_handleFocused}\n      onSubmit={_handleSubmit}\n      showClearButton={showClearButton}\n      value={value}\n      theme={theme}\n    >\n      {children}\n    </SearchBarRenderer>\n  );\n};\n\nSearchBar.defaultProps = {\n  children: null,\n  placeholder: 'Search Here...',\n  onBlur: null,\n  onChange: null,\n  onClear: null,\n  onFocus: null,\n  onSubmit: null,\n  theme: 'dark',\n  value: '',\n};\n\nSearchBar.propTypes = {\n  /**\n   * Child component, usually search-bar-results\n   */\n  children: PropTypes.node,\n  /**\n   * On blur method, triggered by clicking outside the input\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Subscribe to change events from input field\n   */\n  onChange: PropTypes.func,\n  /**\n   * On clear, triggered when clear button is pressed\n   */\n  onClear: PropTypes.func,\n  /**\n   * On focus method, triggered by clicking into the input\n   */\n  onFocus: PropTypes.func,\n  /**\n   * On submit method, triggered by hitting enter on the input\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Place holder text for search input\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Theme of the component\n   */\n  theme: PropTypes.oneOf(['light', 'dark']).isRequired,\n  /**\n   * Value of the inner input bar\n   */\n  value: PropTypes.string,\n};\n\nexport default SearchBar;\n","import SearchBar from './search-bar';\n\nexport default SearchBar;\n","import React, { useEffect, useRef } from 'react';\nimport SearchBar from '../ui/search-bar';\nimport { connect } from 'react-redux';\nimport './search-list.css';\n\n/**\n * Handle Searching of List\n * @param {Function} onUpdateSearchValue Event handler\n * @param {String} searchValue Search text\n * @param {String} theme Light/dark theme for SearchBar component\n */\nexport const SearchList = ({ onUpdateSearchValue, searchValue, theme }) => {\n  const container = useRef(null);\n\n  /**\n   * Focus search on CMD+F/CTRL+F, but only if not already focused, so that if\n   * you hit the shortcut again you will receive the default browser behaviour\n   * @param {Object} event Keydown event\n   */\n  const handleWindowKeyDown = (event) => {\n    const isKeyF = event.key === 'f' || event.keyCode === 70;\n    const isKeyCtrlOrCmd = event.ctrlKey || event.metaKey;\n    if (isKeyF && isKeyCtrlOrCmd) {\n      const input = container.current.querySelector('input');\n      if (document.activeElement !== input) {\n        input.focus();\n        event.preventDefault();\n      } else {\n        input.blur();\n      }\n    }\n  };\n\n  /**\n   * Add window keydown event listener on mount, and remove on unmount\n   */\n  useEffect(() => {\n    window.addEventListener('keydown', handleWindowKeyDown);\n    return () => window.removeEventListener('keydown', handleWindowKeyDown);\n  });\n\n  /**\n   * Listen for keyboard events, and trigger relevant actions\n   * @param {Number} keyCode The key event keycode\n   */\n  const handleKeyDown = (event) => {\n    const isKeyEscape = event.key === 'Escape' || event.keyCode === 27;\n    if (isKeyEscape) {\n      onUpdateSearchValue('');\n      container.current.querySelector('input').blur();\n    }\n  };\n\n  return (\n    <div\n      className=\"pipeline-search-list\"\n      onKeyDown={handleKeyDown}\n      ref={container}\n    >\n      <SearchBar\n        onChange={onUpdateSearchValue}\n        placeholder={'Search'}\n        theme={theme}\n        value={searchValue}\n      />\n    </div>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(SearchList);\n","import SearchList from './search-list';\n\nexport default SearchList;\n","import React from 'react';\n\nconst VisibleIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M11.5 5.706c4.142 0 7.5 4.662 7.5 5.625 0 .963-3.358 5.625-7.5 5.625-4.142 0-7.5-4.632-7.5-5.625 0-.993 3.358-5.625 7.5-5.625zm0 1.875a3.75 3.75 0 100 7.5 3.75 3.75 0 000-7.5zm0 1.875a1.875 1.875 0 110 3.75 1.875 1.875 0 010-3.75z\" />\n  </svg>\n);\n\nexport default VisibleIcon;\n","import React from 'react';\n\nconst InvisibleIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M17.97 5.3L19 6.33l-2 2.01c1.24 1.23 2 2.53 2 3 0 .95-3.36 5.62-7.5 5.62-.9 0-1.76-.22-2.55-.57L6.33 19 5.3 17.97 17.97 5.3zm-2.88 4.94l-1.9 1.9c-.18.39-.5.7-.88.88l-1.9 1.9a3.74 3.74 0 004.84-3.59c0-.38-.06-.74-.16-1.09zM11.5 5.71c1 0 1.95.27 2.83.7l-1.45 1.44a3.74 3.74 0 00-4.87 4.86l-1.8 1.81C4.83 13.24 4 11.82 4 11.33c0-1 3.36-5.63 7.5-5.63zm-.24 3.76L9.64 11.1c.11-.84.77-1.5 1.61-1.62z\" />\n  </svg>\n);\n\nexport default InvisibleIcon;\n","import React from 'react';\n\nconst FocusModeIcon = ({ className, checked }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g>\n      <path\n        d=\"M5 0L5 2 2 2 2 5 0 5 0 0z\"\n        transform=\"translate(-258 -194) translate(258 194) translate(6 6)\"\n      />\n      <path\n        d=\"M12 0L12 2 9 2 9 5 7 5 7 0z\"\n        transform=\"translate(-258 -194) translate(258 194) translate(6 6) rotate(90 9.5 2.5)\"\n      />\n      <path\n        d=\"M12 7L12 9 9 9 9 12 7 12 7 7z\"\n        transform=\"translate(-258 -194) translate(258 194) translate(6 6) rotate(-180 9.5 9.5)\"\n      />\n      <path\n        d=\"M5 7L5 9 2 9 2 12 0 12 0 7z\"\n        transform=\"translate(-258 -194) translate(258 194) translate(6 6) rotate(-90 2.5 9.5)\"\n      />\n    </g>\n  </svg>\n);\n\nexport default FocusModeIcon;\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { changed, replaceMatches } from '../../utils';\nimport NodeIcon from '../icons/node-icon';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\nimport FocusModeIcon from '../icons/focus-mode';\nimport { getNodeActive } from '../../selectors/nodes';\nimport { toggleHoveredFocusMode } from '../../actions';\n\n// The exact fixed height of a row as measured by getBoundingClientRect()\nexport const nodeListRowHeight = 32;\n\n// This allows lambda and partial Python functions to render via dangerouslySetInnerHTML\nconst replaceTagsWithEntities = {\n  '<lambda>': '&lt;lambda&gt;',\n  '<partial>': '&lt;partial&gt;',\n};\n\n/**\n * Returns `true` if there are no props changes, therefore the last render can be reused.\n * Performance: Checks only the minimal set of props known to change after first render.\n */\nconst shouldMemo = (prevProps, nextProps) =>\n  !changed(\n    [\n      'active',\n      'checked',\n      'allUnchecked',\n      'disabled',\n      'faded',\n      'focused',\n      'visible',\n      'selected',\n      'label',\n      'children',\n      'count',\n    ],\n    prevProps,\n    nextProps\n  );\n\nconst NodeListRow = memo(\n  ({\n    container: Container = 'div',\n    active,\n    checked,\n    allUnchecked,\n    children,\n    disabled,\n    faded,\n    focused,\n    visible,\n    id,\n    label,\n    count,\n    name,\n    kind,\n    onMouseEnter,\n    onMouseLeave,\n    onChange,\n    onClick,\n    selected,\n    type,\n    icon,\n    visibleIcon = VisibleIcon,\n    invisibleIcon = InvisibleIcon,\n    focusModeIcon = FocusModeIcon,\n    rowType,\n    onToggleHoveredFocusMode,\n  }) => {\n    const isModularPipeline = type === 'modularPipeline';\n    const FocusIcon = isModularPipeline ? focusModeIcon : null;\n    const isChecked = isModularPipeline ? checked || focused : checked;\n    const VisibilityIcon = isChecked ? visibleIcon : invisibleIcon;\n    const isButton = onClick && kind !== 'filter';\n    const TextButton = isButton ? 'button' : 'div';\n\n    return (\n      <Container\n        className={classnames(\n          'pipeline-nodelist__row kedro',\n          `pipeline-nodelist__row--kind-${kind}`,\n          {\n            'pipeline-nodelist__row--visible': visible,\n            'pipeline-nodelist__row--active': active,\n            'pipeline-nodelist__row--selected': selected,\n            'pipeline-nodelist__row--disabled': disabled,\n            'pipeline-nodelist__row--unchecked': !isChecked,\n            'pipeline-nodelist__row--overwrite': !(active || selected),\n          }\n        )}\n        title={name}\n        onMouseEnter={visible ? onMouseEnter : null}\n        onMouseLeave={visible ? onMouseLeave : null}\n      >\n        {icon && (\n          <NodeIcon\n            className={classnames(\n              'pipeline-nodelist__row__type-icon',\n              'pipeline-nodelist__row__icon',\n              {\n                'pipeline-nodelist__row__type-icon--faded': faded,\n                'pipeline-nodelist__row__type-icon--disabled': disabled,\n                'pipeline-nodelist__row__type-icon--nested': !children,\n                'pipeline-nodelist__row__type-icon--active': active,\n                'pipeline-nodelist__row__type-icon--selected': selected,\n              }\n            )}\n            icon={icon}\n          />\n        )}\n        <TextButton\n          className={classnames(\n            'pipeline-nodelist__row__text',\n            `pipeline-nodelist__row__text--kind-${kind}`,\n            `pipeline-nodelist__row__text--${rowType}`\n          )}\n          data-heap-event={`clicked.sidebar.${icon}`}\n          onClick={onClick}\n          onFocus={onMouseEnter}\n          onBlur={onMouseLeave}\n          title={children ? null : name}\n        >\n          <span\n            className={classnames(\n              'pipeline-nodelist__row__label',\n              `pipeline-nodelist__row__label--kind-${kind}`,\n              {\n                'pipeline-nodelist__row__label--faded': faded,\n                'pipeline-nodelist__row__label--disabled': disabled,\n              }\n            )}\n            dangerouslySetInnerHTML={{\n              __html: replaceMatches(label, replaceTagsWithEntities),\n            }}\n          />\n        </TextButton>\n        {typeof count === 'number' && (\n          <span onClick={onClick} className={'pipeline-nodelist__row__count'}>\n            {count}\n          </span>\n        )}\n        {VisibilityIcon && (\n          <label\n            htmlFor={id}\n            className={classnames(\n              'pipeline-row__toggle',\n              `pipeline-row__toggle--kind-${kind}`,\n              {\n                'pipeline-row__toggle--disabled': isModularPipeline\n                  ? focused\n                  : disabled,\n                'pipeline-row__toggle--selected': selected,\n              }\n            )}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <input\n              id={id}\n              className=\"pipeline-nodelist__row__checkbox\"\n              data-heap-event={kind === `visible.${name}.${isChecked}`}\n              type=\"checkbox\"\n              checked={isChecked}\n              disabled={disabled}\n              name={name}\n              onChange={onChange}\n            />\n            <VisibilityIcon\n              aria-label={name}\n              checked={isChecked}\n              className={classnames(\n                'pipeline-nodelist__row__icon',\n                'pipeline-row__toggle-icon',\n                `pipeline-row__toggle-icon--kind-${kind}`,\n                {\n                  'pipeline-row__toggle-icon--parent': Boolean(children),\n                  'pipeline-row__toggle-icon--child': !children,\n                  'pipeline-row__toggle-icon--checked': isChecked,\n                  'pipeline-row__toggle-icon--unchecked': !isChecked,\n                  'pipeline-row__toggle-icon--all-unchecked': allUnchecked,\n                  'pipeline-row__toggle-icon--focus-checked': isModularPipeline\n                    ? false\n                    : focused,\n                }\n              )}\n            />\n          </label>\n        )}\n        {FocusIcon && (\n          <label\n            htmlFor={id + '-focus'}\n            className={classnames(\n              'pipeline-row__toggle',\n              `pipeline-row__toggle--kind-${kind}`,\n              {\n                'pipeline-row__toggle--disabled': disabled,\n                'pipeline-row__toggle--selected': selected,\n              }\n            )}\n            onClick={(e) => e.stopPropagation()}\n            onMouseEnter={() => onToggleHoveredFocusMode(true)}\n            onMouseLeave={() => onToggleHoveredFocusMode(false)}\n          >\n            <input\n              id={id + '-focus'}\n              className=\"pipeline-nodelist__row__checkbox\"\n              data-heap-event={kind === `focusMode.checked.${isChecked}`}\n              type=\"checkbox\"\n              checked={isChecked}\n              disabled={disabled}\n              name={name}\n              onChange={onChange}\n              data-icon-type=\"focus\"\n            />\n            <FocusIcon\n              aria-label={name}\n              checked={isChecked}\n              className={classnames(\n                'pipeline-nodelist__row__icon',\n                'pipeline-row__toggle-icon',\n                `pipeline-row__toggle-icon--kind-${kind}`,\n                {\n                  'pipeline-row__toggle-icon--parent': Boolean(children),\n                  'pipeline-row__toggle-icon--child': !children,\n                  'pipeline-row__toggle-icon--checked': isChecked,\n                  'pipeline-row__toggle-icon--unchecked': !isChecked,\n                  'pipeline-row__toggle-icon--all-unchecked': allUnchecked,\n                  'pipeline-row__toggle-icon--focus-checked': focused,\n                }\n              )}\n            />\n          </label>\n        )}\n        {children}\n      </Container>\n    );\n  },\n  shouldMemo\n);\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleHoveredFocusMode: (active) => {\n    dispatch(toggleHoveredFocusMode(active));\n  },\n});\n\nexport const mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  active:\n    typeof ownProps.active !== 'undefined'\n      ? ownProps.active\n      : getNodeActive(state)[ownProps.id] || false,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NodeListRow);\n","import { useState, useLayoutEffect, useRef, useMemo, useCallback } from 'react';\n\n/**\n * A component that renders only the children currently visible on screen.\n * Renders all children if not supported by browser or is disabled via the `lazy` prop.\n * @param {Function} height A `function(start, end)` returning the pixel height for any given range of items\n * @param {Number} total The total count of all items in the list\n * @param {Function} children A `function(props)` rendering the list and items (see `childProps`)\n * @param {?Number} [buffer=0.5] A number [0...1] as a % of the visible region to render additionally\n * @param {?Boolean} [lazy=true] Toggles the lazy functionality\n * @param {?Boolean} [dispose=false] Toggles disposing items when they lose visibility\n * @param {?Function} onChange Optional change callback\n * @param {?Function} container Optional, default scroll container is `element.offsetParent`\n * @return {Object} The rendered children\n **/\nconst LazyList = ({\n  height,\n  total,\n  children,\n  lazy = true,\n  dispose = false,\n  buffer = 0.5,\n  onChange,\n  container = (element) => element?.offsetParent,\n}) => {\n  // Required browser feature checks\n  const supported = typeof window.IntersectionObserver !== 'undefined';\n\n  // Active only if supported and enabled else renders all children\n  const active = lazy && supported;\n\n  // The range of items currently rendered\n  const [range, setRange] = useState([0, 0]);\n  const rangeRef = useRef([0, 0]);\n\n  // List container element\n  const listRef = useRef();\n\n  // Upper placeholder element\n  const upperRef = useRef();\n\n  // Lower placeholder element\n  const lowerRef = useRef();\n\n  // Height of a single item\n  const itemHeight = useMemo(() => height(0, 1), [height]);\n\n  // Height of all items\n  const totalHeight = useMemo(() => height(0, total), [height, total]);\n\n  // Height of items above the rendered range\n  const upperHeight = useMemo(() => height(0, range[0]), [height, range]);\n\n  // Height of items below the rendered range\n  const lowerHeight = useMemo(\n    () => height(range[1], total),\n    [height, range, total]\n  );\n\n  // Allows an update only once per frame\n  const requestUpdate = useRequestFrameOnce(\n    // Memoise the frame callback\n    useCallback(() => {\n      // Get the range of items visible in this frame\n      const visibleRange = visibleRangeOf(\n        // The list container\n        listRef.current,\n        // The list's scrolling parent container\n        container(listRef.current),\n        buffer,\n        total,\n        itemHeight\n      );\n\n      // Merge ranges\n      const effectiveRange =\n        // If dispose, render visible range only\n        dispose\n          ? visibleRange\n          : // If not dispose, expand current range with visible range\n            rangeUnion(rangeRef.current, visibleRange);\n\n      // Avoid duplicate render calls as state is not set immediate\n      if (!rangeEqual(rangeRef.current, effectiveRange)) {\n        // Store the update in a ref immediately\n        rangeRef.current = effectiveRange;\n\n        // Apply the update in the next render\n        setRange(effectiveRange);\n      }\n    }, [buffer, total, itemHeight, dispose, container])\n  );\n\n  // Memoised observer options\n  const observerOptions = useMemo(\n    () => ({\n      // Create a threshold point for every item\n      threshold: thresholds(total),\n    }),\n    [total]\n  );\n\n  // Updates on changes in visibility at the given thresholds (intersection ratios)\n  useIntersection(listRef, observerOptions, requestUpdate);\n  useIntersection(upperRef, observerOptions, requestUpdate);\n  useIntersection(lowerRef, observerOptions, requestUpdate);\n\n  // Updates on changes in item dimensions\n  useLayoutEffect(\n    () => requestUpdate(),\n    [total, itemHeight, totalHeight, requestUpdate]\n  );\n\n  // Memoised child props for user to apply as needed\n  const childProps = useMemo(\n    () => ({\n      listRef,\n      upperRef,\n      lowerRef,\n      total,\n      start: active ? range[0] : 0,\n      end: active ? range[1] : total,\n      listStyle: {\n        // Relative for placeholder positioning\n        position: 'relative',\n        // List must always have the correct height\n        height: active ? totalHeight : undefined,\n        // List must always pad missing items (upper at least)\n        paddingTop: active ? upperHeight : undefined,\n      },\n      upperStyle: {\n        position: 'absolute',\n        display: !active ? 'none' : undefined,\n        height: upperHeight,\n        width: '100%',\n        // Upper placeholder must always snap to top edge\n        top: '0',\n      },\n      lowerStyle: {\n        position: 'absolute',\n        display: !active ? 'none' : undefined,\n        height: lowerHeight,\n        width: '100%',\n        // Lower placeholder must always snap to bottom edge\n        bottom: '0',\n      },\n    }),\n    [\n      active,\n      range,\n      total,\n      listRef,\n      upperRef,\n      lowerRef,\n      totalHeight,\n      upperHeight,\n      lowerHeight,\n    ]\n  );\n\n  // Optional change callback\n  onChange && onChange(childProps);\n\n  // Render the children\n  return children(childProps);\n};\n\n/**\n * Returns a range in the form `[start, end]` clamped inside `[min, max]`\n * @param {Number} start The start of the range\n * @param {Number} end The end of the range\n * @param {Number} min The range minimum\n * @param {Number} max The range maximum\n * @returns {Array} The clamped range\n */\nexport const range = (start, end, min, max) => [\n  Math.max(Math.min(start, max), min),\n  Math.max(Math.min(end, max), min),\n];\n\n/**\n * Returns the union of both ranges\n * @param {Array} rangeA The first range `[start, end]`\n * @param {Array} rangeB The second range `[start, end]`\n * @returns {Array} The range union\n */\nexport const rangeUnion = (rangeA, rangeB) => [\n  Math.min(rangeA[0], rangeB[0]),\n  Math.max(rangeA[1], rangeB[1]),\n];\n\n/**\n * Returns true if the ranges have the same `start` and `end` values\n * @param {Array} rangeA The first range `[start, end]`\n * @param {Array} rangeB The second range `[start, end]`\n * @returns {Boolean} True if ranges are equal else false\n */\nexport const rangeEqual = (rangeA, rangeB) =>\n  rangeA[0] === rangeB[0] && rangeA[1] === rangeB[1];\n\n/**\n * Gets the range of items inside the container's screen bounds.\n * Assumes a single fixed height for all child items.\n * Only considers visibility along the vertical y-axis (i.e. only top, bottom bounds).\n * @param {HTMLElement} element The target element (e.g. list container)\n * @param {?HTMLElement} container The clipping container of the target (e.g. scroll container)\n * @param {Number} buffer A number [0...1] as a % of the container to render additionally\n * @param {Number} childTotal The total count of all children in the target (e.g. list row count)\n * @param {Number} childHeight Height of a single child element (e.g. height of one list row)\n * @returns {Array} The calculated range of visible items as `[start, end]`\n */\nconst visibleRangeOf = (\n  element,\n  container,\n  buffer,\n  childTotal,\n  childHeight\n) => {\n  // Check element exists\n  if (!element) {\n    return [0, 0];\n  }\n\n  // If no container use the element itself\n  if (!container) {\n    container = element;\n  }\n\n  // Find the clipping container bounds (e.g. scroll container)\n  const clip = container.getBoundingClientRect();\n\n  // Find element bounds (e.g. list container inside scroll container)\n  const list = element.getBoundingClientRect();\n\n  // Find the number of items to buffer\n  const bufferCount = Math.ceil((buffer * clip.height) / childHeight);\n\n  // When clip is fully above viewport or element is fully above clip\n  if (clip.bottom < 0 || list.bottom < clip.top) {\n    // Only bottom part of the buffer in range\n    return range(childTotal - bufferCount, childTotal, 0, childTotal);\n  }\n\n  // Get the viewport bounds\n  const viewport = {\n    top: 0,\n    bottom: window.innerHeight || document.documentElement.clientHeight,\n  };\n\n  // When clip is fully below viewport or element is fully below clip\n  if (clip.top > viewport.bottom || list.top > clip.bottom) {\n    // Only top part of the buffer in range\n    return range(0, bufferCount, 0, childTotal);\n  }\n\n  // Find intersection of clip and viewport now overlap guaranteed\n  const top = Math.max(clip.top, viewport.top);\n  const bottom = Math.min(clip.bottom, viewport.bottom);\n\n  // Find unbounded item range within the intersection\n  const start = Math.floor((top - list.top) / childHeight);\n  const end = Math.ceil((bottom - list.top) / childHeight);\n\n  // Apply buffer and clamp unbounded range to list bounds\n  return range(start - bufferCount, end + bufferCount, 0, childTotal);\n};\n\n/**\n * A hook to create a callback that runs once, at the end of the frame\n * @param {Function} callback The callback\n * @returns {Function} The wrapped callback\n */\nconst useRequestFrameOnce = (callback) => {\n  const request = useRef();\n\n  // Allow only a single callback per-frame\n  return useCallback(() => {\n    cancelAnimationFrame(request.current);\n    request.current = requestAnimationFrame(callback);\n  }, [request, callback]);\n};\n\n/**\n * Generates an array of the form [0, ...n / total]\n * except where total is `0` where it returns `[0]`.\n * @param {Number} total The total number of thresholds to create\n * @returns {Array} The threshold array\n */\nexport const thresholds = (total) =>\n  total === 0\n    ? [0]\n    : [...Array.from({ length: total }, (_, i) => i / total), 1];\n\n/**\n * A hook that creates and manages an IntersectionObserver for the given element\n * @param {Object} element A React.Ref from the target element\n * @param {Object} options An IntersectionObserver options object\n * @param {Function} callback A function to call with IntersectionObserver changes\n */\nconst useIntersection = (element, options, callback) => {\n  const observer = useRef();\n\n  // After rendering and layout\n  return useLayoutEffect(() => {\n    // Check the element is ready\n    if (!element.current) {\n      return;\n    }\n\n    // Dispose any previous observer\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n\n    // Create a new observer if supported\n    if (window.IntersectionObserver) {\n      observer.current = new window.IntersectionObserver(callback, options);\n      observer.current.observe(element.current);\n    }\n\n    // Manually callback as element may already be visible\n    callback();\n  }, [callback, element, options]);\n};\n\nexport default LazyList;\n","import LazyList from './lazy-list';\n\nexport default LazyList;\n","import React from 'react';\nimport modifiers from '../../utils/modifiers';\nimport NodeListRow, { nodeListRowHeight } from './node-list-row';\nimport LazyList from '../lazy-list';\n\nconst NodeRowList = ({\n  items = [],\n  group,\n  collapsed,\n  onItemClick,\n  onItemChange,\n  onItemMouseEnter,\n  onItemMouseLeave,\n}) => (\n  <LazyList\n    height={(start, end) => (end - start) * nodeListRowHeight}\n    total={items.length}\n  >\n    {({\n      start,\n      end,\n      total,\n      listRef,\n      upperRef,\n      lowerRef,\n      listStyle,\n      upperStyle,\n      lowerStyle,\n    }) => (\n      <ul\n        ref={listRef}\n        style={listStyle}\n        className={modifiers(\n          'pipeline-nodelist__children',\n          { closed: collapsed },\n          'pipeline-nodelist__list pipeline-nodelist__list--nested'\n        )}\n      >\n        <li\n          className={modifiers('pipeline-nodelist__placeholder-upper', {\n            fade: start !== end && start > 0,\n          })}\n          ref={upperRef}\n          style={upperStyle}\n        />\n        <li\n          className={modifiers('pipeline-nodelist__placeholder-lower', {\n            fade: start !== end && end < total,\n          })}\n          ref={lowerRef}\n          style={lowerStyle}\n        />\n        {items.slice(start, end).map((item) => (\n          <NodeListRow\n            container=\"li\"\n            key={item.id}\n            id={item.id}\n            kind={group.kind}\n            label={item.highlightedLabel}\n            count={item.count}\n            name={item.name}\n            type={item.type}\n            icon={item.icon}\n            active={item.active}\n            checked={item.checked}\n            disabled={item.disabled}\n            faded={item.faded}\n            visible={item.visible}\n            selected={item.selected}\n            allUnchecked={group.allUnchecked}\n            visibleIcon={item.visibleIcon}\n            invisibleIcon={item.invisibleIcon}\n            onClick={() => onItemClick(item)}\n            onMouseEnter={() => onItemMouseEnter(item)}\n            onMouseLeave={() => onItemMouseLeave(item)}\n            onChange={(e) => onItemChange(item, !e.target.checked)}\n            rowType=\"filter\"\n          />\n        ))}\n      </ul>\n    )}\n  </LazyList>\n);\n\nexport default NodeRowList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport NodeListRow from './node-list-row';\nimport NodeRowList from './node-list-row-list';\n\nexport const NodeListGroup = ({\n  allUnchecked,\n  checked,\n  collapsed,\n  group,\n  id,\n  invisibleIcon,\n  items,\n  kind,\n  name,\n  onItemChange,\n  onItemClick,\n  onItemMouseEnter,\n  onItemMouseLeave,\n  onToggleChecked,\n  onToggleCollapsed,\n  visibleIcon,\n}) => {\n  const disabledGroup = items.length === 0;\n\n  return (\n    <li\n      className={classnames(\n        'pipeline-nodelist__group',\n        `pipeline-nodelist__group--type-${id}`,\n        `pipeline-nodelist__group--kind-${kind}`,\n        {\n          'pipeline-nodelist__group--all-unchecked': allUnchecked,\n        }\n      )}\n    >\n      <h3 className=\"pipeline-nodelist__heading\">\n        <NodeListRow\n          allUnchecked={allUnchecked}\n          checked={checked}\n          disabled={disabledGroup}\n          id={id}\n          invisibleIcon={invisibleIcon}\n          kind={kind}\n          label={name}\n          name={name}\n          onChange={(e) => {\n            onToggleChecked(id, !e.target.checked);\n          }}\n          rowType=\"filter\"\n          visibleIcon={visibleIcon}\n        >\n          <button\n            aria-label={`${collapsed ? 'Show' : 'Hide'} ${name.toLowerCase()}`}\n            className={classnames('pipeline-type-group-toggle', {\n              'pipeline-type-group-toggle--alt': collapsed,\n              'pipeline-type-group-toggle--disabled': disabledGroup,\n            })}\n            disabled={disabledGroup}\n            onClick={() => onToggleCollapsed(id)}\n          />\n        </NodeListRow>\n      </h3>\n      <NodeRowList\n        collapsed={collapsed}\n        group={group}\n        items={items}\n        onItemChange={onItemChange}\n        onItemClick={onItemClick}\n        onItemMouseEnter={onItemMouseEnter}\n        onItemMouseLeave={onItemMouseLeave}\n      />\n    </li>\n  );\n};\n\nexport default NodeListGroup;\n","import React, { useState } from 'react';\nimport { loadState, saveState } from '../../store/helpers';\nimport NodeListGroup from './node-list-group';\n\nconst storedState = loadState();\n\nconst NodeListGroups = ({\n  groups,\n  items,\n  onGroupToggleChanged,\n  onItemChange,\n  onItemClick,\n  onItemMouseEnter,\n  onItemMouseLeave,\n  searchValue,\n}) => {\n  const [collapsed, setCollapsed] = useState(storedState.groupsCollapsed || {});\n\n  // Collapse/expand node group\n  const onToggleGroupCollapsed = (groupID) => {\n    const groupsCollapsed = {\n      ...collapsed,\n      [groupID]: !collapsed[groupID],\n    };\n\n    setCollapsed(groupsCollapsed);\n    saveState({ groupsCollapsed });\n  };\n\n  return (\n    <nav className=\"pipeline-nodelist-section kedro\">\n      <ul className=\"pipeline-nodelist__list\">\n        {Object.values(groups).map((group) => (\n          <NodeListGroup\n            allUnchecked={group.allUnchecked}\n            checked={group.checked}\n            collapsed={Boolean(searchValue) ? false : collapsed[group.id]}\n            group={group}\n            id={group.id}\n            invisibleIcon={group.invisibleIcon}\n            items={items[group.id] || []}\n            key={group.id}\n            kind={group.kind}\n            name={group.name}\n            onItemChange={onItemChange}\n            onItemClick={onItemClick}\n            onItemMouseEnter={onItemMouseEnter}\n            onItemMouseLeave={onItemMouseLeave}\n            onToggleChecked={onGroupToggleChanged}\n            onToggleCollapsed={onToggleGroupCollapsed}\n            visibleIcon={group.visibleIcon}\n          />\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default NodeListGroups;\n","import { createSelector } from 'reselect';\nimport { getNodeDisabled } from './disabled';\nimport { arrayToObject } from '../utils';\n\nconst getNodeIDs = (state) => state.node.ids;\nconst getNodeType = (state) => state.node.type;\nexport const getNodeTypeIDs = (state) => state.nodeType.ids;\nconst getNodeTypeName = (state) => state.nodeType.name;\nconst getNodeTypeDisabled = (state) => state.nodeType.disabled;\nexport const isModularPipelineType = (type) => type === 'modularPipeline';\n\n/**\n * Calculate the total number of nodes (and the number of visible nodes)\n * for each node-type\n */\nexport const getTypeNodeCount = createSelector(\n  [getNodeTypeIDs, getNodeIDs, getNodeType, getNodeDisabled],\n  (types, nodeIDs, nodeType, nodeDisabled) =>\n    arrayToObject(types, (type) => {\n      const typeNodeIDs = nodeIDs.filter((nodeID) => nodeType[nodeID] === type);\n      const visibleTypeNodeIDs = typeNodeIDs.filter(\n        (nodeID) => !nodeDisabled[nodeID]\n      );\n      return {\n        total: typeNodeIDs.length,\n        visible: visibleTypeNodeIDs.length,\n      };\n    })\n);\n\n/**\n * Get formatted list of node type objects\n */\nexport const getNodeTypes = createSelector(\n  [getNodeTypeIDs, getNodeTypeName, getNodeTypeDisabled, getTypeNodeCount],\n  (types, typeName, typeDisabled, typeNodeCount) =>\n    types.map((id) => ({\n      id,\n      name: typeName[id],\n      disabled: typeDisabled[id],\n      nodeCount: typeNodeCount[id],\n    }))\n);\n","import React from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport NodeListRow from './node-list-row';\n\nconst arrowIconColor = '#8e8e90';\n\nconst NodeListTreeItem = ({\n  data,\n  onItemClick,\n  onItemMouseEnter,\n  onItemMouseLeave,\n  onItemChange,\n  children,\n}) => (\n  <TreeItem\n    key={data.id}\n    nodeId={data.id}\n    // this setup is to allow flexibility for adjusting the setting for individual arrow icons\n    collapseIcon={<ExpandMoreIcon style={{ color: arrowIconColor }} />}\n    expandIcon={<ChevronRightIcon style={{ color: arrowIconColor }} />}\n    label={\n      <NodeListRow\n        container=\"div\"\n        key={data.id}\n        id={data.id}\n        kind=\"element\"\n        label={data.highlightedLabel || data.name}\n        name={data.name}\n        icon={data.icon}\n        type={data.type}\n        active={data.active}\n        checked={data.checked}\n        disabled={data.disabled}\n        faded={data.faded}\n        visible={data.visible}\n        selected={data.selected}\n        allUnchecked={true}\n        visibleIcon={data.visibleIcon}\n        invisibleIcon={data.invisibleIcon}\n        focusModeIcon={data.focusModeIcon}\n        onClick={() => onItemClick(data)}\n        onMouseEnter={() => onItemMouseEnter(data)}\n        onMouseLeave={() => onItemMouseLeave(data)}\n        onChange={(e) =>\n          onItemChange(data, !e.target.checked, e.target.dataset.iconType)\n        }\n        rowType=\"tree\"\n        focused={data.focused}\n      />\n    }\n  >\n    {children}\n  </TreeItem>\n);\n\nexport default NodeListTreeItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport sortBy from 'lodash.sortby';\n\nimport { loadNodeData } from '../../actions/nodes';\nimport { getNodeSelected } from '../../selectors/nodes';\nimport { isModularPipelineType } from '../../selectors/node-types';\nimport NodeListTreeItem from './node-list-tree-item';\nimport VisibleIcon from '../icons/visible';\nimport InvisibleIcon from '../icons/invisible';\nimport FocusModeIcon from '../icons/focus-mode';\n\n// Display order of node groups\nconst GROUPED_NODES_DISPLAY_ORDER = {\n  modularPipeline: 0,\n  task: 1,\n  data: 2,\n  parameter: 3,\n};\n\n// please note that this setup is unique for initialization of the material-ui tree,\n// and setup is only used here and not anywhere else in the app.\nconst useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n});\n\nconst StyledTreeView = withStyles({\n  root: {\n    padding: '0 0 0 20px',\n  },\n})(TreeView);\n\n/**\n * Return whether the given modular pipeline ID is on focus mode path, i.e.\n * it's not the currently focused pipeline nor one of its children.\n * @param {String} focusModeID The currently focused modular pipeline ID.\n * @param {String} modularPipelineID The modular pipeline ID to check.\n * @return {Boolean} Whether the given modular pipeline ID is on focus mode path.\n */\nconst isOnFocusedModePath = (focusModeID, modularPipelineID) => {\n  return (\n    modularPipelineID === focusModeID ||\n    modularPipelineID.startsWith(`${focusModeID}.`)\n  );\n};\n\n/**\n * Return the data of a modular pipeline to display as a row in the node list.\n * @param {Object} params\n * @param {String} params.id The modular pipeline ID\n * @param {String} params.highlightedLabel The modular pipeline name with highlights when matched under search\n * @param {Object} params.data The modular pipeline data to display\n * @param {Boolean} params.disabled Whether the modular pipeline is disabled, e.g. when it's not the focused one\n * @param {Boolean} params.focused Whether the modular pipeline is the focused one in focus mode\n * @return {Object} The modular pipeline's data needed to render as a row in the node list tree.\n */\nconst getModularPipelineRowData = ({\n  id,\n  highlightedLabel,\n  data,\n  disabled,\n  focused,\n  focusModeIcon,\n}) => {\n  const checked = !data.disabledModularPipeline;\n  return {\n    id: id,\n    name: highlightedLabel || data.name,\n    type: 'modularPipeline',\n    icon: 'modularPipeline',\n    focusModeIcon: focusModeIcon,\n    active: false,\n    selected: false,\n    faded: disabled || !checked,\n    visible: !disabled && checked,\n    enabled: true,\n    disabled: disabled,\n    focused: focused,\n    checked,\n  };\n};\n\n/**\n * Return the data of a node to display as a row in the node list\n * @param {Object} node The node to display\n * @param {Boolean} selected Whether the node is currently disabled\n * @param {Boolean} selected Whether the node is currently selected\n */\nconst getNodeRowData = (node, disabled, selected) => {\n  const checked = !node.disabledNode;\n  return {\n    ...node,\n    visibleIcon: VisibleIcon,\n    invisibleIcon: InvisibleIcon,\n    active: node.active,\n    selected,\n    faded: disabled || node.disabledNode,\n    visible: !disabled && checked,\n    checked,\n    disabled,\n  };\n};\n\nconst TreeListProvider = ({\n  nodeSelected,\n  modularPipelinesSearchResult,\n  modularPipelinesTree,\n  onItemChange,\n  onItemMouseEnter,\n  onItemMouseLeave,\n  onItemClick,\n  onNodeToggleExpanded,\n  focusMode,\n  disabledModularPipeline,\n  expanded,\n  onToggleNodeSelected,\n}) => {\n  const classes = useStyles();\n\n  // render a leaf node in the modular pipelines tree\n  const renderLeafNode = (node) => {\n    const disabled =\n      node.disabledTag ||\n      node.disabledType ||\n      (focusMode &&\n        !node.modularPipelines\n          .map((modularPipelineID) =>\n            isOnFocusedModePath(focusMode.id, modularPipelineID)\n          )\n          .some(Boolean)) ||\n      (node.modularPipelines &&\n        node.modularPipelines\n          .map(\n            (modularPipelineID) => disabledModularPipeline[modularPipelineID]\n          )\n          .some(Boolean));\n\n    const selected = nodeSelected[node.id];\n    return (\n      <NodeListTreeItem\n        data={getNodeRowData(node, disabled, selected)}\n        onItemMouseEnter={onItemMouseEnter}\n        onItemMouseLeave={onItemMouseLeave}\n        onItemChange={onItemChange}\n        onItemClick={onItemClick}\n        key={node.id}\n      />\n    );\n  };\n\n  // recursively renders the modular pipeline tree\n  const renderTree = (tree, modularPipelineID) => {\n    // current tree node to render\n    const node = tree[modularPipelineID];\n    if (!node) {\n      return;\n    }\n\n    // render each child of the tree node first\n    const children = sortBy(\n      node.children,\n      (child) => GROUPED_NODES_DISPLAY_ORDER[child.type],\n      (child) => child.data.name\n    ).map((child) =>\n      isModularPipelineType(child.type)\n        ? renderTree(tree, child.id)\n        : renderLeafNode(child.data)\n    );\n\n    // then render the node itself wrapping around the children\n    // except when it's the root node,\n    // because we don't want to display the __root__ modular pipeline.\n    if (modularPipelineID === '__root__') {\n      return children;\n    }\n\n    const isFocusedModularPipeline = focusMode?.id === node.id;\n    let focusModeIcon;\n    if (!focusMode) {\n      focusModeIcon = FocusModeIcon;\n    } else {\n      focusModeIcon = isFocusedModularPipeline ? FocusModeIcon : null;\n    }\n\n    return (\n      <NodeListTreeItem\n        data={getModularPipelineRowData({\n          ...node,\n          focusModeIcon,\n          disabled: focusMode && !isOnFocusedModePath(focusMode.id, node.id),\n          focused: isFocusedModularPipeline,\n        })}\n        onItemMouseEnter={onItemMouseEnter}\n        onItemMouseLeave={onItemMouseLeave}\n        onItemChange={onItemChange}\n        onItemClick={onItemClick}\n        key={node.id}\n      >\n        {children}\n      </NodeListTreeItem>\n    );\n  };\n\n  const onItemExpandCollapseToggle = (event, expandedItemIds) => {\n    onNodeToggleExpanded(expandedItemIds);\n    //when the parent modular pipeline tree of the selected node is collapsed\n    if (expandedItemIds.length === 0) {\n      onToggleNodeSelected(null);\n    }\n  };\n\n  return modularPipelinesSearchResult ? (\n    <StyledTreeView\n      className={classes.root}\n      expanded={Object.keys(modularPipelinesSearchResult)}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      key=\"modularPipelinesSearchResult\"\n    >\n      {renderTree(modularPipelinesSearchResult, '__root__')}\n    </StyledTreeView>\n  ) : (\n    <StyledTreeView\n      expanded={expanded}\n      className={classes.root}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      onNodeToggle={onItemExpandCollapseToggle}\n      key=\"modularPipelinesTree\"\n    >\n      {renderTree(modularPipelinesTree, '__root__')}\n    </StyledTreeView>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  nodeSelected: getNodeSelected(state),\n  expanded: state.modularPipeline.expanded,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleNodeSelected: (nodeID) => {\n    dispatch(loadNodeData(nodeID));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TreeListProvider);\n","import SplitPanel from './split-panel';\n\nexport default SplitPanel;\n","import { useState, useRef } from 'react';\n\n/**\n * Any React render function that returns elements, including those representing the container, panels and handle elements.\n * The state and props this function provides are expected to be applied these child elements to enable SplitPanel functionality.\n * See split-panel.test.js for a reference implementation.\n * @callback splitPanelRender\n * @param {Object} state An object that contains a copy of the current split panel state and props intended for children\n * @param {Boolean} state.isResizing Is `true` when the split is being actively moved, otherwise `false`\n * @param {Number} state.split A number [0...1] as the current % split position\n * @param {Object} state.props.container The props intended for the panel container element(s)\n * @param {Object} state.props.panelA The props intended for the first panel descendent element(s)\n * @param {Object} state.props.panelB The props intended for the second panel descendent element(s)\n * @param {Object} state.props.handle The props intended for the handle descendent element(s)\n **/\n\n/**\n * A design agnostic user-resizable split panel controller.\n * Pass any React render function as this component's children and return your elements there.\n * See split-panel.test.js for a reference implementation.\n * @param {splitPanelRender} children Any React render function that returns elements including representing the container, panels, handle\n * @param {?Number} [splitDefault=0.65] A number [0...1] as the default % split position\n * @param {?Number} [splitMin=0] A number [0...1] as the minimum % split position\n * @param {?Number} [splitMax=1] A number [0...1] as the maximum % split position\n * @param {?Number} [keyboardStep=0.025] A number [0...1] as the % step to move split when using keyboard\n * @param {?String} [orientation='vertical'] Only 'vertical' currently supported\n **/\nexport const SplitPanel = ({\n  splitDefault = 0.65,\n  splitMin = 0,\n  splitMax = 1,\n  keyboardStep = 0.025,\n  orientation = 'vertical',\n  children,\n}) => {\n  const containerRef = useRef();\n  const handleRef = useRef();\n\n  const getRects = () => ({\n    container: containerRef.current?.getBoundingClientRect(),\n    handle: handleRef.current?.getBoundingClientRect(),\n  });\n\n  const clamp = (splitValue) => {\n    const rects = getRects();\n\n    const handleSize = rects.handle\n      ? rects.handle.height / rects.container.height\n      : 0;\n\n    if (splitValue < splitMin) {\n      return splitMin;\n    }\n\n    if (splitValue > splitMax - handleSize) {\n      return splitMax - handleSize;\n    }\n\n    return splitValue;\n  };\n\n  const [isResizing, setIsResizing] = useState(false);\n  const [split, setSplit] = useState(clamp(splitDefault));\n\n  const onMouse = (event) => {\n    if (event.type === 'mouseup') {\n      setIsResizing(false);\n      return;\n    }\n\n    if (isResizing || event.type === 'mousedown') {\n      const rects = getRects();\n\n      const mouseOffsetVertical =\n        (event.clientY - rects.container.top - rects.handle.height * 0.5) /\n        rects.container.height;\n\n      setIsResizing(true);\n      setSplit(clamp(mouseOffsetVertical));\n\n      event.preventDefault();\n    }\n  };\n\n  const onKey = (event) => {\n    const keyboardOffset =\n      {\n        ArrowUp: -keyboardStep,\n        ArrowLeft: -keyboardStep,\n        ArrowDown: keyboardStep,\n        ArrowRight: keyboardStep,\n      }[event.key] || 0;\n\n    if (keyboardOffset) {\n      setSplit(clamp(split + keyboardOffset));\n      event.preventDefault();\n    }\n  };\n\n  return children({\n    isResizing,\n    split,\n    props: {\n      container: {\n        ref: containerRef,\n        onMouseMove: onMouse,\n        onMouseUp: onMouse,\n      },\n      panelA: { style: { height: split * 100 + '%' } },\n      panelB: { style: { height: (1 - split) * 100 + '%' } },\n      handle: {\n        ref: handleRef,\n        role: 'separator',\n        'aria-orientation': orientation,\n        tabIndex: '0',\n        onMouseUp: onMouse,\n        onMouseDown: onMouse,\n        onKeyDown: onKey,\n      },\n    },\n  });\n};\n\nexport default SplitPanel;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport SearchList from '../search-list';\nimport NodeListGroups from './node-list-groups';\nimport NodeListTree from './node-list-tree';\nimport SplitPanel from '../split-panel';\n\nimport './styles/node-list.css';\n\n/**\n * Scrollable list of toggleable items, with search & filter functionality\n */\nconst NodeList = ({\n  faded,\n  items,\n  modularPipelinesTree,\n  modularPipelinesSearchResult,\n  groups,\n  searchValue,\n  getGroupState,\n  onUpdateSearchValue,\n  onGroupToggleChanged,\n  onItemClick,\n  onItemMouseEnter,\n  onItemMouseLeave,\n  onItemChange,\n  onModularPipelineToggleExpanded,\n  focusMode,\n  disabledModularPipeline,\n}) => {\n  return (\n    <div\n      className={classnames('pipeline-nodelist', {\n        'pipeline-nodelist--fade': faded,\n      })}\n    >\n      <SearchList\n        onUpdateSearchValue={onUpdateSearchValue}\n        searchValue={searchValue}\n      />\n      <SplitPanel>\n        {({ isResizing, props: { container, panelA, panelB, handle } }) => (\n          <div\n            className={classnames('pipeline-nodelist__split', {\n              'pipeline-nodelist__split--resizing': isResizing,\n            })}\n            {...container}\n          >\n            <div className=\"pipeline-nodelist__elements-panel\" {...panelA}>\n              <Scrollbars\n                className=\"pipeline-nodelist-scrollbars\"\n                style={{ width: 'auto' }}\n                autoHide\n                hideTracksWhenNotNeeded\n              >\n                <div className=\"pipeline-nodelist-section\">\n                  <NodeListTree\n                    modularPipelinesSearchResult={modularPipelinesSearchResult}\n                    modularPipelinesTree={modularPipelinesTree}\n                    searchValue={searchValue}\n                    faded={faded}\n                    onItemClick={onItemClick}\n                    onItemMouseEnter={onItemMouseEnter}\n                    onItemMouseLeave={onItemMouseLeave}\n                    onItemChange={onItemChange}\n                    onNodeToggleExpanded={onModularPipelineToggleExpanded}\n                    focusMode={focusMode}\n                    disabledModularPipeline={disabledModularPipeline}\n                  />\n                </div>\n              </Scrollbars>\n            </div>\n            <div className=\"pipeline-nodelist__filter-panel\" {...panelB}>\n              <div className=\"pipeline-nodelist__split-handle\" {...handle} />\n              <Scrollbars\n                className=\"pipeline-nodelist-scrollbars\"\n                style={{ width: 'auto' }}\n                autoHide\n                hideTracksWhenNotNeeded\n              >\n                <h2 className=\"pipeline-nodelist-section__title\">Filters</h2>\n                <NodeListGroups\n                  items={items}\n                  groups={groups}\n                  searchValue={searchValue}\n                  getGroupState={getGroupState}\n                  onItemClick={onItemClick}\n                  onItemMouseEnter={onItemMouseEnter}\n                  onItemMouseLeave={onItemMouseLeave}\n                  onItemChange={onItemChange}\n                  onGroupToggleChanged={onGroupToggleChanged}\n                />\n              </Scrollbars>\n            </div>\n          </div>\n        )}\n      </SplitPanel>\n    </div>\n  );\n};\n\nexport default NodeList;\n","import React from 'react';\n\nconst IndicatorIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <rect x=\"8.5\" y=\"9\" width=\"5\" height=\"5\" rx=\"1\" strokeWidth=\"1.5\" />\n  </svg>\n);\n\nexport default IndicatorIcon;\n","import React from 'react';\n\nconst OffIndicatorIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    {/* Note: some strokeWidth values fail when zoomed in Chrome e.g. 2 */}\n    <rect x=\"8.5\" y=\"9\" width=\"5\" height=\"5\" rx=\"1\" strokeWidth=\"1.9\" />\n  </svg>\n);\n\nexport default OffIndicatorIcon;\n","import React from 'react';\n\nconst PartialIndicatorIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <rect x=\"6.5\" y=\"10.5\" width=\"8\" height=\"1.5\" />\n  </svg>\n);\n\nexport default PartialIndicatorIcon;\n","import { createSelector } from 'reselect';\nimport { sidebarElementTypes, sidebarGroups } from '../../config';\nimport IndicatorIcon from '../icons/indicator';\nimport IndicatorOffIcon from '../icons/indicator-off';\nimport IndicatorPartialIcon from '../icons/indicator-partial';\nimport InvisibleIcon from '../icons/invisible';\nimport VisibleIcon from '../icons/visible';\nimport { escapeRegExp, getHighlightedText } from '../../utils/search-utils';\n\nexport const isTagType = (type) => type === 'tag';\nexport const isElementType = (type) => type === 'elementType';\nexport const isGroupType = (type) => isElementType(type) || isTagType(type);\n\n/**\n * Get a list of IDs of the visible nodes from all groups\n * @param {Object} nodeGroups Grouped lists of nodes by type\n * @return {Array} List of node IDs\n */\nexport const getNodeIDs = (nodeGroups) =>\n  Object.values(nodeGroups).flatMap((nodes) => nodes.map((node) => node.id));\n\n/**\n * Add a new highlightedLabel field to each of the node objects\n * @param {Object} nodeGroups Grouped lists of nodes by type\n * @param {String} searchValue Search term\n * @return {Object} The grouped nodes with highlightedLabel fields added\n */\nexport const highlightMatch = (nodeGroups, searchValue) => {\n  const highlightedGroups = {};\n\n  for (const type of Object.keys(nodeGroups)) {\n    highlightedGroups[type] = nodeGroups[type].map((node) => ({\n      ...node,\n      highlightedLabel: getHighlightedText(node.name, searchValue),\n    }));\n  }\n\n  return highlightedGroups;\n};\n\n/**\n * Check whether a node matches the search text or true if no search value given\n * @param {Object} node\n * @param {String} searchValue\n * @return {Boolean} True if node matches or no search value given\n */\nexport const nodeMatchesSearch = (node, searchValue) => {\n  if (searchValue) {\n    return new RegExp(escapeRegExp(searchValue), 'gi').test(node.name);\n  }\n\n  return true;\n};\n\n/**\n * Return only the results that match the search text\n * @param {Object} nodeGroups Grouped lists of nodes by type\n * @param {String} searchValue Search term\n * @return {Object} Grouped nodes\n */\nexport const filterNodeGroups = (nodeGroups, searchValue) => {\n  const filteredGroups = {};\n\n  for (const nodeGroupId of Object.keys(nodeGroups)) {\n    filteredGroups[nodeGroupId] = nodeGroups[nodeGroupId].filter((node) =>\n      nodeMatchesSearch(node, searchValue)\n    );\n  }\n\n  return filteredGroups;\n};\n\n/**\n * Return filtered/highlighted nodes, and filtered node IDs\n * @param {Object} nodeGroups Grouped lists of nodes by type\n * @param {String} searchValue Search term\n * @return {Object} Grouped nodes, and node IDs\n */\nexport const getFilteredNodes = createSelector(\n  [(state) => state.nodes, (state) => state.searchValue],\n  (nodeGroups, searchValue) => {\n    const filteredGroups = filterNodeGroups(nodeGroups, searchValue);\n    return {\n      filteredNodes: highlightMatch(filteredGroups, searchValue),\n      nodeIDs: getNodeIDs(filteredGroups),\n    };\n  }\n);\n\n/**\n * Return filtered/highlighted tags\n * @param {Object} tags List of tags\n * @param {String} searchValue Search term\n * @return {Object} Grouped tags\n */\nexport const getFilteredTags = createSelector(\n  [(state) => state.tags, (state) => state.searchValue],\n  (tags, searchValue) =>\n    highlightMatch(filterNodeGroups({ tag: tags }, searchValue), searchValue)\n);\n\n/**\n * Return filtered/highlighted tag list items\n * @param {Object} filteredTags List of filtered tags\n * @return {Array} Node list items\n */\nexport const getFilteredTagItems = createSelector(\n  [getFilteredTags, (state) => state.tagNodeCounts],\n  (filteredTags, tagNodeCounts = {}) => ({\n    tag: filteredTags.tag.map((tag) => ({\n      ...tag,\n      type: 'tag',\n      visibleIcon: IndicatorIcon,\n      invisibleIcon: IndicatorOffIcon,\n      active: false,\n      selected: false,\n      faded: false,\n      visible: true,\n      disabled: false,\n      checked: tag.enabled,\n      count: tagNodeCounts[tag.id] || 0,\n    })),\n  })\n);\n\n/**\n * Return filtered/highlighted element types\n * @param {String} searchValue Search term\n * @return {Object} Grouped element types\n */\nexport const getFilteredElementTypes = createSelector(\n  [(state) => state.searchValue],\n  (searchValue) =>\n    highlightMatch(\n      filterNodeGroups(\n        {\n          elementType: Object.entries(sidebarElementTypes).map(\n            ([type, name]) => ({\n              id: type,\n              name,\n            })\n          ),\n        },\n        searchValue\n      ),\n      searchValue\n    )\n);\n\n/**\n * Return filtered/highlighted element type items\n * @param {Object} filteredTags List of filtered element types\n * @param {Array} nodeTypes List of node types\n * @return {Object} Element type items\n */\nexport const getFilteredElementTypeItems = createSelector(\n  [getFilteredElementTypes, (state) => state.nodeTypes],\n  (filteredElementTypes, nodeTypes) => ({\n    elementType: filteredElementTypes.elementType.map((elementType) => {\n      const nodeType = nodeTypes.find((type) => type.id === elementType.id);\n\n      return {\n        ...elementType,\n        type: 'elementType',\n        visibleIcon: IndicatorIcon,\n        invisibleIcon: IndicatorOffIcon,\n        active: false,\n        selected: false,\n        faded: false,\n        visible: true,\n        disabled: false,\n        checked: nodeType.disabled === false,\n        count: nodeType.nodeCount.total,\n      };\n    }),\n  })\n);\n\n/**\n * Compares items for sorting in groups first\n * by enabled status (by tag) and then alphabeticaly (by name)\n * @param {Object} itemA First item to compare\n * @param {Object} itemB Second item to compare\n * @return {Number} Comparison result\n */\nconst compareEnabledThenAlpha = (itemA, itemB) => {\n  const byEnabledTag = Number(itemA.disabledTag) - Number(itemB.disabledTag);\n  const byAlpha = itemA.name.localeCompare(itemB.name);\n  return byEnabledTag !== 0 ? byEnabledTag : byAlpha;\n};\n\n/**\n * Compares items for sorting in groups first\n * by enabled status (by tag) and then alphabeticaly (by name)\n * @param {Object} itemA First item to compare\n * @param {Object} itemB Second item to compare\n * @return {Number} Comparison result\n */\nexport const getFilteredNodeItems = createSelector(\n  [\n    getFilteredNodes,\n    (state) => state.nodeSelected,\n    (state) => state.focusMode,\n    (state) => state.inputOutputDataNodes,\n  ],\n  ({ filteredNodes }, nodeSelected, focusMode, inputOutputDataNodes) => {\n    const filteredNodeItems = {};\n\n    for (const type of Object.keys(filteredNodes)) {\n      filteredNodeItems[type] = filteredNodes[type]\n        .map((node) => {\n          const checked = !node.disabledNode;\n          const disabled =\n            node.disabledTag ||\n            node.disabledType ||\n            (focusMode !== null && !!inputOutputDataNodes[node.id]);\n\n          return {\n            ...node,\n            visibleIcon: VisibleIcon,\n            invisibleIcon: InvisibleIcon,\n            active: undefined,\n            selected: nodeSelected[node.id],\n            faded: disabled || node.disabledNode,\n            visible: !disabled && checked,\n            checked,\n            disabled,\n          };\n        })\n        .sort(compareEnabledThenAlpha);\n    }\n\n    return filteredNodeItems;\n  }\n);\n\n/**\n * Returns group items for each sidebar filter group defined in the sidebar config.\n * @param {Object} items List items by group type\n * @return {Array} List of groups\n */\nexport const getGroups = createSelector([(state) => state.items], (items) => {\n  const groups = {};\n\n  for (const [type, name] of Object.entries(sidebarGroups)) {\n    const itemsOfType = items[type] || [];\n    const allUnchecked = itemsOfType.every((item) => !item.checked);\n    const allChecked = itemsOfType.every((item) => item.checked);\n\n    groups[type] = {\n      type,\n      name,\n      id: type,\n      kind: 'filter',\n      allUnchecked: itemsOfType.every((item) => !item.checked),\n      allChecked: itemsOfType.every((item) => item.checked),\n      checked: !allUnchecked,\n      visibleIcon: allChecked ? IndicatorIcon : IndicatorPartialIcon,\n      invisibleIcon: IndicatorOffIcon,\n    };\n  }\n\n  return groups;\n});\n\n/**\n * Returns filtered/highlighted items for nodes & tags\n * @param {Object} filteredNodeItems List of filtered nodes\n * @param {Object} filteredTagItems List of filtered tags\n * @param {Object} getFilteredElementTypeItems List of filtered element type items\n * @return {Array} final list of all filtered items from the three filtered item sets\n */\nexport const getFilteredItems = createSelector(\n  [getFilteredNodeItems, getFilteredTagItems, getFilteredElementTypeItems],\n  (filteredNodeItems, filteredTagItems, filteredElementTypeItems) => ({\n    ...filteredTagItems,\n    ...filteredNodeItems,\n    ...filteredElementTypeItems,\n  })\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport debounce from 'lodash/debounce';\nimport NodeList from './node-list';\nimport {\n  getFilteredItems,\n  getGroups,\n  isTagType,\n  isElementType,\n  isGroupType,\n} from './node-list-items';\nimport {\n  getNodeTypes,\n  isModularPipelineType,\n} from '../../selectors/node-types';\nimport { getTagData, getTagNodeCounts } from '../../selectors/tags';\nimport {\n  getFocusedModularPipeline,\n  getModularPipelinesSearchResult,\n} from '../../selectors/modular-pipelines';\nimport {\n  getGroupedNodes,\n  getNodeSelected,\n  getInputOutputNodesForFocusedModularPipeline,\n  getModularPipelinesTree,\n} from '../../selectors/nodes';\nimport { toggleTagActive, toggleTagFilter } from '../../actions/tags';\nimport { toggleTypeDisabled } from '../../actions/node-type';\nimport { toggleParametersHovered, toggleFocusMode } from '../../actions';\nimport {\n  toggleModularPipelineActive,\n  toggleModularPipelineDisabled,\n  toggleModularPipelinesExpanded,\n} from '../../actions/modular-pipelines';\nimport {\n  loadNodeData,\n  toggleNodeHovered,\n  toggleNodesDisabled,\n} from '../../actions/nodes';\nimport { useGeneratePathname } from '../../utils/hooks/use-generate-pathname';\nimport './styles/node-list.css';\n\n/**\n * Provides data from the store to populate a NodeList component.\n * Also handles user interaction and dispatches updates back to the store.\n */\nconst NodeListProvider = ({\n  faded,\n  nodes,\n  nodeSelected,\n  tags,\n  tagNodeCounts,\n  nodeTypes,\n  onToggleNodesDisabled,\n  onToggleNodeSelected,\n  onToggleNodeActive,\n  onToggleParametersActive,\n  onToggleTagActive,\n  onToggleTagFilter,\n  onToggleModularPipelineActive,\n  onToggleModularPipelineDisabled,\n  onToggleModularPipelineExpanded,\n  onToggleTypeDisabled,\n  onToggleFocusMode,\n  modularPipelinesTree,\n  focusMode,\n  disabledModularPipeline,\n  inputOutputDataNodes,\n}) => {\n  const [searchValue, updateSearchValue] = useState('');\n\n  const { toFlowchartPage, toSelectedNode, toFocusedModularPipeline } =\n    useGeneratePathname();\n\n  const items = getFilteredItems({\n    nodes,\n    tags,\n    nodeTypes,\n    tagNodeCounts,\n    nodeSelected,\n    searchValue,\n    focusMode,\n    inputOutputDataNodes,\n  });\n\n  const modularPipelinesSearchResult = searchValue\n    ? getModularPipelinesSearchResult(modularPipelinesTree, searchValue)\n    : null;\n\n  const groups = getGroups({ items });\n\n  const onItemClick = (item) => {\n    if (isGroupType(item.type)) {\n      onGroupItemChange(item, item.checked);\n    } else if (isModularPipelineType(item.type)) {\n      onToggleNodeSelected(null);\n    } else {\n      if (item.faded || item.selected) {\n        onToggleNodeSelected(null);\n        toFlowchartPage();\n      } else {\n        onToggleNodeSelected(item.id);\n        toSelectedNode(item);\n      }\n    }\n  };\n\n  const onItemChange = (item, checked, clickedIconType) => {\n    if (isGroupType(item.type) || isModularPipelineType(item.type)) {\n      onGroupItemChange(item, checked);\n\n      if (isModularPipelineType(item.type)) {\n        if (clickedIconType === 'focus') {\n          if (focusMode === null) {\n            onToggleFocusMode(item);\n            toFocusedModularPipeline(item);\n\n            if (disabledModularPipeline[item.id]) {\n              onToggleModularPipelineDisabled([item.id], checked);\n            }\n          } else {\n            onToggleFocusMode(null);\n            toFlowchartPage();\n          }\n        } else {\n          onToggleModularPipelineDisabled([item.id], checked);\n          onToggleModularPipelineActive([item.id], false);\n        }\n      }\n    } else {\n      if (checked) {\n        onToggleNodeActive(null);\n      }\n\n      onToggleNodesDisabled([item.id], checked);\n    }\n  };\n\n  const onItemMouseEnter = (item) => {\n    if (isTagType(item.type)) {\n      onToggleTagActive(item.id, true);\n    } else if (isModularPipelineType(item.type)) {\n      onToggleModularPipelineActive(item.id, true);\n    } else if (isElementType(item.type) && item.id === 'parameters') {\n      // Show parameters highlight when mouse enter parameters filter item\n      onToggleParametersActive(true);\n    } else if (item.visible) {\n      onToggleNodeActive(item.id);\n    }\n  };\n\n  const onItemMouseLeave = (item) => {\n    if (isTagType(item.type)) {\n      onToggleTagActive(item.id, false);\n    } else if (isModularPipelineType(item.type)) {\n      onToggleModularPipelineActive(item.id, false);\n    } else if (isElementType(item.type) && item.id === 'parameters') {\n      // Hide parameters highlight when mouse leave parameters filter item\n      onToggleParametersActive(false);\n    } else if (item.visible) {\n      onToggleNodeActive(null);\n    }\n  };\n\n  const onGroupToggleChanged = (groupType) => {\n    // Enable all items in group if none enabled, otherwise disable all of them\n    const groupItems = items[groupType] || [];\n    const groupItemsDisabled = groupItems.every(\n      (groupItem) => !groupItem.checked\n    );\n\n    if (isTagType(groupType)) {\n      onToggleTagFilter(\n        groupItems.map((item) => item.id),\n        groupItemsDisabled\n      );\n    } else if (isElementType(groupType)) {\n      onToggleTypeDisabled(\n        groupItems.reduce(\n          (state, item) => ({ ...state, [item.id]: !groupItemsDisabled }),\n          {}\n        )\n      );\n    }\n  };\n\n  const handleToggleModularPipelineExpanded = (expanded) => {\n    onToggleModularPipelineExpanded(expanded);\n  };\n\n  const onGroupItemChange = (item, wasChecked) => {\n    // Toggle the group\n    if (isTagType(item.type)) {\n      onToggleTagFilter(item.id, !wasChecked);\n    } else if (isElementType(item.type)) {\n      onToggleTypeDisabled({ [item.id]: wasChecked });\n    }\n\n    // Reset node selection\n    onToggleNodeSelected(null);\n    onToggleNodeActive(null);\n  };\n\n  // Deselect node on Escape key\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      onToggleNodeSelected(null);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  return (\n    <NodeList\n      faded={faded}\n      items={items}\n      modularPipelinesTree={modularPipelinesTree}\n      modularPipelinesSearchResult={modularPipelinesSearchResult}\n      groups={groups}\n      searchValue={searchValue}\n      onUpdateSearchValue={debounce(updateSearchValue, 250)}\n      onModularPipelineToggleExpanded={handleToggleModularPipelineExpanded}\n      onGroupToggleChanged={onGroupToggleChanged}\n      onToggleFocusMode={onToggleFocusMode}\n      onItemClick={onItemClick}\n      onItemMouseEnter={onItemMouseEnter}\n      onItemMouseLeave={onItemMouseLeave}\n      onItemChange={onItemChange}\n      focusMode={focusMode}\n      disabledModularPipeline={disabledModularPipeline}\n    />\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  tags: getTagData(state),\n  tagNodeCounts: getTagNodeCounts(state),\n  nodes: getGroupedNodes(state),\n  nodeSelected: getNodeSelected(state),\n  nodeTypes: getNodeTypes(state),\n  focusMode: getFocusedModularPipeline(state),\n  disabledModularPipeline: state.modularPipeline.disabled,\n  inputOutputDataNodes: getInputOutputNodesForFocusedModularPipeline(state),\n  modularPipelinesTree: getModularPipelinesTree(state),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleTagActive: (tagIDs, active) => {\n    dispatch(toggleTagActive(tagIDs, active));\n  },\n  onToggleTagFilter: (tagIDs, enabled) => {\n    dispatch(toggleTagFilter(tagIDs, enabled));\n  },\n  onToggleModularPipelineActive: (modularPipelineIDs, active) => {\n    dispatch(toggleModularPipelineActive(modularPipelineIDs, active));\n  },\n  onToggleModularPipelineDisabled: (modularPipelineIDs, disabled) => {\n    dispatch(toggleModularPipelineDisabled(modularPipelineIDs, disabled));\n  },\n  onToggleTypeDisabled: (typeID, disabled) => {\n    dispatch(toggleTypeDisabled(typeID, disabled));\n  },\n  onToggleNodeSelected: (nodeID) => {\n    dispatch(loadNodeData(nodeID));\n  },\n  onToggleModularPipelineExpanded: (expanded) => {\n    dispatch(toggleModularPipelinesExpanded(expanded));\n  },\n  onToggleNodeActive: (nodeID) => {\n    dispatch(toggleNodeHovered(nodeID));\n  },\n  onToggleParametersActive: (active) => {\n    dispatch(toggleParametersHovered(active));\n  },\n  onToggleNodesDisabled: (nodeIDs, disabled) => {\n    dispatch(toggleNodesDisabled(nodeIDs, disabled));\n  },\n  onToggleFocusMode: (modularPipeline) => {\n    dispatch(toggleFocusMode(modularPipeline));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NodeListProvider);\n","/**\n * Event Controller for managing listeners for the dropdown component.\n * Handles adding and removing listeners attached to body of the document.\n */\nclass EventController {\n  /**\n   * Manages the attachment of the event listener when body is clicked.\n   * @param {Object} eventHandler - event handler which will be added\n   */\n  static addBodyListener(eventHandler) {\n    if (typeof window.__bodyEventHandlers === 'undefined') {\n      window.__bodyEventHandlers = [];\n    }\n\n    // add event handler to the array attached to the window so that it can be retrieved outside of component\n    window.__bodyEventHandlers.push(eventHandler);\n    // add the event handler to the body\n    document.body.addEventListener('click', eventHandler);\n\n    // indicate that event listeners are attached\n    window.__bodyListenerAttached = true;\n  }\n\n  /**\n   * Manages the removal of the event listeners when body is clicked - all event listeners added\n   * by dropdown components are removed.\n   * This method is static because it doesn't utilize 'this'.\n   */\n  static removeBodyListeners() {\n    if (window.__bodyListenerAttached) {\n      // remove all event listeners attached to body\n      window.__bodyEventHandlers.forEach((handler) => {\n        document.body.removeEventListener('click', handler);\n      });\n\n      // indicate that no listeners are attached and reset the array\n      window.__bodyEventHandlers = [];\n      window.__bodyListenerAttached = false;\n    }\n  }\n}\n\nexport default EventController;\n","// Keyboard character codes\nconst KEYS = {\n  13: 'enter',\n  27: 'escape',\n  38: 'up',\n  40: 'down',\n};\n\n/**\n * Convenience function for handling keyCodes and creating actions\n * @param  {Number} keyCode - A keyboard character\n * @param  {Object} [keyActions] - An optional object-literal list of key names and actions\n * @return {Function|Object} Either a function for a given key char, or nothing\n */\nconst handleKeyEvent = (keyCode, keyActions) => {\n  /**\n   * Execute a callback if a given key name matches the key code received\n   * @param {String}   keyName  - A key name string (e.g. 'left')\n   * @param {Function} callback - A function to execute if the key name matches the key code\n   */\n  const handleSingleKey = (keyName, callback) => {\n    if (keyCode in KEYS && KEYS[keyCode] === keyName.toLowerCase()) {\n      return callback();\n    }\n\n    return undefined;\n  };\n\n  if (keyActions) {\n    return Object.keys(keyActions).map((key) =>\n      handleSingleKey(key, keyActions[key])\n    );\n  }\n\n  // Handle a single key, or a comma-separated list of keys\n  return (key, callback) => {\n    if (key.includes(',')) {\n      return key.split(/\\s*,\\s*/).map((k) => handleSingleKey(k, callback));\n    }\n\n    return handleSingleKey(key, callback);\n  };\n};\n\nexport default handleKeyEvent;\n","import React from 'react';\n\nconst DropdownArrow = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M15.572 15.35L17 13.936l-4.997-4.953L7 13.93l1.432 1.417 3.586-3.55z\"></path>\n  </svg>\n);\n\nexport default DropdownArrow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport handleKeyEvent from '../../../utils/key-events';\nimport uniqueId from 'lodash/uniqueId';\nimport DropdownArrow from '../../icons/dropdown-arrow';\n\n/**\n * Renderer for the Dropdown component\n */\nconst DropdownRenderer = ({\n  children,\n  defaultText,\n  disabled,\n  focusedOption,\n  handleRef,\n  onLabelClicked,\n  onOptionSelected,\n  onSelectChanged,\n  open,\n  selectedOption,\n  title,\n  width,\n}) => {\n  const wrapperClasses = classnames('kedro', 'dropdown', {\n    'dropdown--open': open,\n    'dropdown--disabled': disabled,\n  });\n  let optionIndex = 0;\n\n  /**\n   * Clone a React element and extend with extra props tieing it to a new scope\n   */\n  const _extendMenuOption = (element, id, index) => {\n    const extraProps = {\n      id,\n      onSelected: onOptionSelected,\n      focused: focusedOption === index,\n      selected:\n        selectedOption.id === id ||\n        (!selectedOption.id && element.props.selected),\n    };\n    optionIndex += 1;\n\n    return React.cloneElement(element, extraProps);\n  };\n\n  /**\n   * Handle keyboard events\n   * @param {Object} e - The key event object\n   */\n  const _handleKeyDown = (e) => {\n    if (open) {\n      handleKeyEvent(e.keyCode, {\n        escape: onLabelClicked,\n        up: onSelectChanged.bind(this, -1),\n        down: onSelectChanged.bind(this, 1),\n      });\n    } else {\n      handleKeyEvent(e.keyCode, {\n        up: onLabelClicked,\n        down: onLabelClicked,\n      });\n    }\n    // Prevent the page from scrolling etc when using the dropdown:\n    handleKeyEvent(e.keyCode)('escape, up, down', () => e.preventDefault());\n  };\n\n  const childElements = React.Children.toArray(children);\n  const sectionWrapRequired =\n    childElements[0] && typeof childElements[0].type === 'function';\n\n  // create options node\n  // we may have a plain array of Menu Options, in which case we'll wrap it with a section\n  // an array of sections, each containing an array of Menu Options\n  // sections may contain headings, which are defined as spans\n  const options = React.Children.map(childElements, (child, i) => {\n    switch (child.type) {\n      case 'section':\n        // one level of sections to iterate before we get to the Menu Options\n        return (\n          <section key={`menu-section-${uniqueId(i)}`}>\n            {React.Children.map(child.props.children, (sectionChild, j) => {\n              switch (sectionChild.type) {\n                case 'span':\n                  // Heading\n                  return sectionChild;\n                default:\n                  // Menu Option\n                  return _extendMenuOption(\n                    sectionChild,\n                    `menu-option-${i}.${j}`,\n                    optionIndex\n                  );\n              }\n            })}\n          </section>\n        );\n      case 'span':\n        // Heading\n        return child;\n      default:\n        // Menu Option\n        return _extendMenuOption(child, `menu-option-${i}`, optionIndex);\n    }\n  });\n\n  const optionsNode = sectionWrapRequired ? (\n    <section>{options}</section>\n  ) : (\n    options\n  );\n\n  return (\n    <div\n      aria-expanded={open.toString()}\n      aria-haspopup=\"true\"\n      className={wrapperClasses}\n      onKeyDown={_handleKeyDown}\n      ref={handleRef}\n      style={{ width: `${width}px` }}\n      title={title}\n    >\n      <button\n        type=\"button\"\n        disabled={disabled}\n        className=\"dropdown__label\"\n        onClick={onLabelClicked}\n      >\n        <span>{selectedOption.label || defaultText}</span>\n        <span className=\"dropdown__icon\">\n          <DropdownArrow />\n        </span>\n      </button>\n      <div className=\"dropdown__options\">{optionsNode}</div>\n    </div>\n  );\n};\n\nDropdownRenderer.defaultProps = {\n  children: null,\n  defaultText: 'Please select...',\n  disabled: false,\n  focusedOption: null,\n  handleRef: null,\n  onLabelClicked: null,\n  onOptionSelected: null,\n  onSelectChanged: null,\n  open: false,\n  selectedOption: null,\n  title: null,\n  width: 160,\n};\n\nDropdownRenderer.propTypes = {\n  /**\n   * Child items. The nodes which React will pass down, defined inside the DropdownRenderer tag.\n   */\n  children: PropTypes.node,\n  /**\n   * Default text to show in a closed unselected state\n   */\n  defaultText: PropTypes.string,\n  /**\n   * Whether to disable the dropdown\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The index of the currently-focused menu option\n   */\n  focusedOption: PropTypes.number,\n  /**\n   * Retrieve a reference to the dropdown DOM node\n   */\n  handleRef: PropTypes.func,\n  /**\n   * Callback to be executed when the main label is clicked\n   */\n  onLabelClicked: PropTypes.func,\n  /**\n   * Callback to be executed when an option is selected\n   */\n  onOptionSelected: PropTypes.func,\n  /**\n   * Callback to be executed when the focused option changes\n   */\n  onSelectChanged: PropTypes.func,\n  /**\n   * Whether the dropdown is in an open state\n   */\n  open: PropTypes.bool,\n  /**\n   * An object containing selected option details.\n   * This will be created based on the id, primaryText, value of a selected Menu Option.\n   */\n  selectedOption: PropTypes.shape({\n    id: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.any,\n  }),\n\n  /**\n   * Title text for native tooltip\n   */\n  title: PropTypes.string,\n  /**\n   * The width for the component. Both the label and options are the same width\n   */\n  width: PropTypes.number,\n};\n\nexport default DropdownRenderer;\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport 'what-input';\nimport { flatten, find, flow, isEqual, map } from 'lodash/fp';\nimport EventController from './event-controller.js';\nimport { usePrevious } from '../../../utils/hooks';\nimport DropdownRenderer from './dropdown-renderer';\n\nimport './dropdown.css';\n\nconst Dropdown = (props) => {\n  const {\n    children,\n    defaultText,\n    disabled,\n    onChanged,\n    onClosed,\n    onOpened,\n    width,\n  } = props;\n\n  /**\n   * Format the selected option props for adding to state\n   * @param {Object} props - Component props\n   * @return {Object} Selected option object for use in the state\n   */\n  const _findSelectedOption = useCallback((props) => {\n    const selectedOptionElement = _findSelectedOptionElement(props);\n\n    // check children for a selected option\n    if (selectedOptionElement) {\n      const { id, primaryText, value } = selectedOptionElement.props;\n\n      return {\n        id,\n        label: primaryText,\n        value,\n      };\n    }\n\n    // otherwise, default to first\n    return {\n      id: null,\n      label: null,\n      value: null,\n    };\n  }, []);\n\n  /**\n   * Find the selected option by traversing sections and MenuOptions\n   * @param {Object} props - Component props (optional)\n   * @return {Object} Selected option element\n   */\n  const _findSelectedOptionElement = (props) => {\n    const children = React.Children.toArray(props.children);\n\n    if (!children.length) {\n      return null;\n    }\n\n    // we may have an array of options\n    // or an array of sections, containing options\n    if (children[0].type === 'section') {\n      return flow(\n        map((x) => x.props.children),\n        flatten,\n        find((x) => x.props.selected)\n      )(children);\n    }\n\n    return find((child) => child.props.selected)(children);\n  };\n\n  const prevProps = usePrevious(props);\n  const [focusedOption, setFocusedOption] = useState(null);\n  const [haveClicked, setHaveClicked] = useState(false); // tracker for detecting _handleLabelClicked\n  const [selectedOption, setSelectedOption] = useState(\n    _findSelectedOption(props)\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedObject, setSelectedObject] = useState(null); // this is to store the object that was passed from the handleOptionSelected event handler\n\n  const dropdownRef = useRef();\n  const handleOptionSelectedRef = useRef({ open, selectedOption });\n  const selectedObjRef = useRef(selectedObject);\n\n  const mounted = useRef(false); // ref for detecting mounting of component\n\n  useEffect(() => {\n    /**\n     * Check whether new props contain updated children\n     * @param {Object} nextProps - New component props\n     * @return {Boolean} True if new children are different from current ones\n     */\n    const _childrenHaveChanged = (nextProps) => {\n      const children = [props, nextProps].map((props) =>\n        React.Children.toArray(props.children)\n      );\n\n      return !isEqual(...children);\n    };\n\n    if (!mounted.current) {\n      // update mounted on componentDidMount\n      mounted.current = true;\n    } else {\n      // triggers every time on componentDidUpdate\n      if (_childrenHaveChanged(prevProps)) {\n        setSelectedOption(_findSelectedOption(prevProps));\n      }\n    }\n  }, [_findSelectedOption, prevProps, props]);\n\n  useEffect(() => {\n    if (haveClicked === true) {\n      if (typeof onOpened === 'function' && open) {\n        onOpened();\n      } else if (typeof onClosed === 'function' && !open) {\n        onClosed();\n      }\n\n      setHaveClicked(false);\n    }\n  }, [haveClicked, onOpened, onClosed, open]);\n\n  // to be fired after state changes triggered by handleOptionSelected event handler\n  useEffect(() => {\n    // This check is to ensure that only the changes in the handleOptionSelected event handler will trigger this effect\n    if (selectedObjRef.current !== selectedObject) {\n      if (\n        !open &&\n        handleOptionSelectedRef.current.handleOptionSelectedRef !==\n          selectedOption\n      ) {\n        if (typeof onChanged === 'function') {\n          onChanged(selectedObject);\n        }\n      }\n      if (!open && typeof onClosed === 'function') {\n        onClosed();\n      }\n    }\n  });\n\n  // Event to be fired on componentWillUnmount\n  useEffect(() => {\n    return () => EventController.removeBodyListeners();\n  }, []);\n\n  useEffect(() => {\n    // Focus either the button label or the active option.\n    // This is so screen-readers will follow the active element\n    const focusClass =\n      focusedOption !== null ? '.menu-option--focused' : '.dropdown__label';\n\n    dropdownRef.current.querySelector(focusClass).focus();\n  }, [focusedOption]);\n\n  /**\n   * Handler for closing a dropdown if a click occurred outside the dropdown.\n   * @param {Object} e - event object\n   */\n  const _handleBodyClicked = (e) => {\n    if (!dropdownRef.current.contains(e.target) && open) {\n      _handleClose();\n    }\n  };\n\n  /**\n   * Event handler which is fired when the label is clicked\n   */\n  const _handleLabelClicked = () => {\n    // remove or add the event listeners for\n    if (open) {\n      EventController.removeBodyListeners();\n    } else {\n      EventController.addBodyListener(_handleBodyClicked);\n    }\n    // revert the state of open\n    setOpen(!open);\n    // set the click tracker to true to trigger the userEffect callback\n    setHaveClicked(true);\n\n    _focusLabel();\n  };\n\n  /**\n   * Sort, filter and flatten the list of children to retrieve just the MenuOptions,\n   * with any Sections removed.\n   * @return {Object} A flat list of MenuOptions\n   */\n  const _getOptionsList = () => {\n    /**\n     * Recurse through sections to retrieve a list of all MenuOptions\n     * @param  {Object} previous The Options array as of the previous iteration\n     * @param  {Object} current  The current item (either a MenuOption or Section)\n     * @return {Object}          The current state of the Options array\n     */\n    const getSectionChildren = (previous, current) => {\n      if (current.props.primaryText) {\n        // MenuOption: Add to list\n        return previous.concat(current);\n      }\n      if (current.type === 'section') {\n        // Section: Keep recursing\n        return previous.concat(\n          current.props.children.reduce(getSectionChildren, [])\n        );\n      }\n      return previous;\n    };\n\n    return React.Children.toArray(props.children).reduce(\n      getSectionChildren,\n      []\n    );\n  };\n\n  /**\n   * Convenience method to return focus from an option to the label.\n   * This is particularly useful for screen-readers and keyboard users.\n   */\n  const _focusLabel = () => {\n    dropdownRef.current.querySelector('.dropdown__label').focus();\n\n    setFocusedOption(null);\n  };\n\n  /**\n   * When the focused option changes (e.g. via up/down keyboard controls),\n   * update the focusedOption index state and select the new one\n   * @param {Number} direction - The direction that focus is travelling through the list:\n   * negative is up and positive is down.\n   */\n  const _handleFocusChange = (direction) => {\n    let newFocusedOption = focusedOption;\n    const optionsLength = _getOptionsList().length;\n\n    if (focusedOption === null) {\n      newFocusedOption = direction > 0 ? 0 : optionsLength - 1;\n    } else {\n      newFocusedOption += direction;\n    }\n    if (newFocusedOption >= optionsLength || newFocusedOption < 0) {\n      newFocusedOption = null;\n    }\n\n    setFocusedOption(newFocusedOption);\n  };\n\n  /**\n   * Event handler which is fired when a child item is selected\n   */\n  const _handleOptionSelected = (obj) => {\n    const { label, id, value } = obj;\n\n    setSelectedObject(obj);\n\n    // detect if the selected item has changed\n    const hasChanged = value !== selectedOption.value;\n    if (hasChanged) {\n      const newSelectedOption = { label, value, id };\n\n      setOpen(false);\n      setSelectedOption(newSelectedOption);\n    } else {\n      setOpen(false);\n    }\n    _focusLabel();\n  };\n\n  /**\n   * Retrieve a reference to the dropdown DOM node (from the renderer component),\n   * and assign it to a class-wide variable property.\n   * @param {Object} el - The ref for the Dropdown container node\n   */\n  const _handleRef = (el) => {\n    dropdownRef.current = el;\n  };\n\n  /**\n   * API method to close the dropdown\n   */\n  const _handleClose = () => {\n    setOpen(false);\n\n    // remove event listener\n    EventController.removeBodyListeners();\n  };\n\n  return (\n    <DropdownRenderer\n      defaultText={defaultText}\n      disabled={disabled}\n      handleRef={_handleRef}\n      onLabelClicked={_handleLabelClicked}\n      onOptionSelected={_handleOptionSelected}\n      onSelectChanged={_handleFocusChange}\n      open={open}\n      focusedOption={focusedOption}\n      selectedOption={selectedOption}\n      width={width}\n    >\n      {children}\n    </DropdownRenderer>\n  );\n};\n\nDropdown.defaultProps = {\n  children: null,\n  defaultText: 'Please select...',\n  disabled: false,\n  onChanged: null,\n  onClosed: null,\n  onOpened: null,\n  width: 160,\n};\n\nDropdown.propTypes = {\n  /**\n   * Child items. The nodes which React will pass down, defined inside the DropdownRenderer tag\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Default text to show in a closed unselected state\n   */\n  defaultText: PropTypes.string,\n  /**\n   * Whether to disable the dropdown\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Callback function to be executed when a menu item is clicked, other than the one currently selected.\n   */\n  onChanged: PropTypes.func,\n  /**\n   * Callback to be executed after menu opens\n   */\n  onOpened: PropTypes.func,\n  /**\n   * Callback to be executed after menu closed\n   */\n  onClosed: PropTypes.func,\n  /**\n   * The width for the component. Both the label and options are the same width\n   */\n  width: PropTypes.number,\n};\n\nexport default Dropdown;\n","import Dropdown from './dropdown';\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport handleKeyEvent from '../../../utils/key-events';\nimport './menu-option.css';\n\n/**\n * Generic Kedro Menu Option\n */\nconst MenuOption = ({\n  className,\n  focused,\n  id,\n  onSelected,\n  primaryText,\n  selected,\n  value,\n}) => {\n  const wrapperClasses = classnames('kedro', 'menu-option', className, {\n    'menu-option--focused': focused,\n    'menu-option--selected': selected,\n  });\n\n  /**\n   * Event handler executed when the option is selected\n   * @param  {Object} e The event object\n   * @return {Function}   The event handler\n   */\n  const _handleClicked = (e) =>\n    onSelected({\n      event: e,\n      id,\n      label: primaryText,\n      value,\n    });\n\n  /**\n   * Event handler executed when key events are triggered on the focused option\n   * @param {Object} e - The key event object\n   */\n  const _handleKeyDown = (e) =>\n    handleKeyEvent(e.keyCode)('enter, space', () => {\n      _handleClicked(e);\n      // Prevent the page from scrolling when selecting an item:\n      e.preventDefault();\n    });\n\n  return (\n    <div\n      aria-selected={selected.toString()}\n      className={wrapperClasses}\n      onClick={_handleClicked}\n      onKeyDown={_handleKeyDown}\n      role=\"option\"\n      tabIndex=\"-1\"\n    >\n      <div className=\"menu-option__content\" title={primaryText}>\n        <span>{primaryText}</span>\n      </div>\n    </div>\n  );\n};\n\nMenuOption.defaultProps = {\n  className: null,\n  focused: false,\n  id: null,\n  onSelected: null,\n  selected: false,\n  value: null,\n};\n\nMenuOption.propTypes = {\n  /**\n   * Container class\n   */\n  className: PropTypes.string,\n  /**\n   * Whether the option is focused\n   */\n  focused: PropTypes.bool,\n  /**\n   * A unique key for this element, which will be set by the parent menu component.\n   * This is used by the parent menu component to determine which option is selected.\n   */\n  id: PropTypes.string,\n  /**\n   * A callback which is automatically implemented by a parent menu component\n   */\n  onSelected: PropTypes.func,\n  /**\n   * The main label displayed\n   */\n  primaryText: PropTypes.string.isRequired,\n  /**\n   * Whether the option is selected\n   */\n  selected: PropTypes.bool,\n  /**\n   * The value to send to the parent menu component when this item is selected\n   */\n  value: PropTypes.any,\n};\n\nexport default MenuOption;\n","import MenuOption from './menu-option';\n\nexport default MenuOption;\n","import PipelineList from './pipeline-list';\n\nexport default PipelineList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport Dropdown from '../ui/dropdown';\nimport MenuOption from '../ui/menu-option';\nimport { loadPipelineData } from '../../actions/pipelines';\nimport { toggleFocusMode } from '../../actions';\nimport { useGeneratePathname } from '../../utils/hooks/use-generate-pathname';\nimport './pipeline-list.css';\n\n/**\n * A Dropdown displaying a list of selectable pipelines\n * @param {Object} pipeline Pipeline IDs, names, and active pipeline\n * @param {Function} onUpdateActivePipeline Handle updating the active pipeline\n * @param {Function} onToggleOpen Callback when opening/closing the dropdown\n */\nexport const PipelineList = ({\n  asyncDataSource,\n  onUpdateActivePipeline,\n  pipeline,\n  prettyName,\n  onToggleOpen,\n}) => {\n  const { toFlowchartPage } = useGeneratePathname();\n\n  if (!pipeline.ids.length && !asyncDataSource) {\n    return null;\n  }\n  return (\n    <div className=\"pipeline-list\">\n      <Dropdown\n        disabled={!pipeline.ids.length}\n        onOpened={() => onToggleOpen(true)}\n        onClosed={() => onToggleOpen(false)}\n        width={null}\n        onChanged={(value) => {\n          onUpdateActivePipeline(value);\n          // Reset the URL to '/' when switching between different view\n          toFlowchartPage();\n        }}\n        defaultText={\n          prettyName\n            ? pipeline.name[pipeline.active]\n            : pipeline.active || 'Default'\n        }\n      >\n        {pipeline.ids.map((id) => (\n          <MenuOption\n            key={`pipeline-${id}`}\n            className={classnames({\n              'pipeline-list__option--active': pipeline.active === id,\n            })}\n            value={id}\n            primaryText={prettyName ? pipeline.name[id] : id}\n          />\n        ))}\n      </Dropdown>\n    </div>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  asyncDataSource: state.dataSource === 'json',\n  pipeline: state.pipeline,\n  prettyName: state.prettyName,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onUpdateActivePipeline: (event) => {\n    dispatch(loadPipelineData(event.value));\n    dispatch(toggleFocusMode(null));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PipelineList);\n","import Switch from './switch';\n\nexport default Switch;\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\n\nimport './switch.css';\n\nconst Switch = ({ defaultChecked = false, onChange }) => {\n  const [checked, setChecked] = useState(defaultChecked);\n\n  const onClick = () => {\n    setChecked(!checked);\n    onChange && onChange();\n  };\n\n  return (\n    <div className=\"switch\" onClick={onClick}>\n      <span className=\"switch__label\">{checked ? 'On' : 'Off'}</span>\n      <div className=\"switch__root\">\n        <div\n          className={classnames('switch__base', {\n            'switch__base--active': checked,\n          })}\n        >\n          <input\n            className=\"switch__input\"\n            defaultChecked={checked}\n            type=\"checkbox\"\n          />\n          <div className=\"switch__circle\"></div>\n        </div>\n        <div className=\"switch__track\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Switch;\n","import Accordion from './accordion';\n\nexport default Accordion;\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\n\nimport './accordion.css';\n\n/**\n * A collapsable container component.\n * @param {Object} children React children\n * @param {String|null} className A top-level class name for the component.\n * @param {String} heading Text to display on the top-level.\n * @param {String|null} headingClassName A class name for the accordion header.\n * @param {String|null} headingDetail Text to display on the top-level.\n * @param {Boolean} isCollapsed Control to collapse or expand the content.\n * @param {String|null} layout A secondary text string for additional context\n * @param {Function} onCallback Fire a function on click from a parent.\n * @param {String} size Set the header font size.\n */\nconst Accordion = ({\n  children,\n  className = null,\n  heading = '',\n  headingClassName = null,\n  headingDetail = null,\n  isCollapsed = false,\n  layout = 'right',\n  onCallback,\n  size = 'small',\n}) => {\n  const [collapsed, setCollapsed] = useState(isCollapsed);\n\n  useEffect(() => {\n    setCollapsed(isCollapsed);\n  }, [isCollapsed]);\n\n  const onClick = () => {\n    setCollapsed(!collapsed);\n    onCallback && onCallback();\n  };\n\n  return (\n    <div\n      className={classnames('accordion', {\n        'accordion--left': layout === 'left',\n        [`${className}`]: className,\n      })}\n    >\n      <div\n        className={classnames('accordion__heading', {\n          [`${headingClassName}`]: headingClassName,\n        })}\n      >\n        {layout === 'left' && (\n          <button\n            aria-label={`${\n              collapsed ? 'Show' : 'Hide'\n            } ${heading.toLowerCase()}`}\n            onClick={onClick}\n            className={classnames('accordion__toggle', {\n              'accordion__toggle--alt': collapsed,\n            })}\n          />\n        )}\n        <div\n          className={classnames('accordion__title', {\n            'accordion__title--medium': size === 'medium',\n            'accordion__title--large': size === 'large',\n          })}\n        >\n          {heading}\n          {headingDetail && (\n            <span className=\"accordion__title__detail\">{headingDetail}</span>\n          )}\n        </div>\n        {layout === 'right' && (\n          <button\n            aria-label={`${\n              collapsed ? 'Show' : 'Hide'\n            } ${heading.toLowerCase()}`}\n            onClick={onClick}\n            className={classnames('accordion__toggle', {\n              'accordion__toggle--alt': collapsed,\n            })}\n          />\n        )}\n      </div>\n      <div className={collapsed ? 'accordion__content--hide' : null}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nconst _dayJs = dayjs.extend(relativeTime);\n\nexport const formatTimestamp = (timestamp) =>\n  timestamp.replace('.', ':').replace('.', ':');\n\n/**\n * Take a timestamp and return a meaningful length of time, e.g. 5 months ago\n * Kedro uses this format VERSION_FORMAT = \"%Y-%m-%dT%H.%M.%S.%fZ\"\n * So we need to do some string manipulation to get it to this formatted\n * version: 2021-11-08T18:31:01.171Z\n * @param {String} timestamp The timestamp to be converted\n * @returns A human-readable from-now date\n */\nexport const toHumanReadableTime = (timestamp) => {\n  return _dayJs(formatTimestamp(timestamp)).fromNow();\n};\n\n/**\n * Take a set of runIds and sort them in ascending order of time\n * Kedro uses this format VERSION_FORMAT = \"%Y-%m-%dT%H.%M.%S.%fZ\"\n * So we need to do some string manipulation to get it to this formatted\n * version: 2021-11-08T18:31:01.171Z\n * @param {Array} runIds The runID which adopts the same format as the timestamp\n * @returns a sorted list of runIDs according to ascending time\n */\nexport const sortRunByTime = (runIds) => {\n  const runsWithTimestamps = runIds.map((runId) => ({\n    id: runId,\n    dateObj: new Date(formatTimestamp(runId)),\n  }));\n\n  runsWithTimestamps.sort((a, b) => new Date(a.dateObj) - new Date(b.dateObj));\n\n  return runsWithTimestamps.map((run) => run.id);\n};\n","import React, { createContext, useState } from 'react';\n\nexport const HoverStateContext = createContext(null);\n\n/**\n * Provides a way to manage state for hovered elements between\n * RunListCard and metrics plots components\n */\nexport const HoverStateContextProvider = ({ children }) => {\n  const [hoveredElementId, setHoveredElementId] = useState(null);\n\n  return (\n    <HoverStateContext.Provider\n      value={{\n        hoveredElementId,\n        setHoveredElementId,\n      }}\n    >\n      {children}\n    </HoverStateContext.Provider>\n  );\n};\n","import RunsListCard from './runs-list-card';\n\nexport default RunsListCard;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useUpdateRunDetails } from '../../../apollo/mutations';\nimport classnames from 'classnames';\nimport {\n  getHighlightedText,\n  textMatchesSearch,\n} from '../../../utils/search-utils';\nimport { toHumanReadableTime } from '../../../utils/date-utils';\nimport BookmarkIcon from '../../icons/bookmark';\nimport BookmarkStrokeIcon from '../../icons/bookmark-stroke';\nimport { HoverStateContext } from '../utils/hover-state-context';\n\nimport './runs-list-card.css';\n\n/**\n * Display a card showing run info from an experiment\n * @param {Object} data High-level data from the run (id, etc.)\n */\nconst RunsListCard = ({\n  data,\n  disableRunSelection = false,\n  enableComparisonView = false,\n  onRunSelection,\n  selectedRunIds = [],\n  searchValue,\n  selectedIndex,\n}) => {\n  const { id, notes, title = null, bookmark, gitSha } = data;\n  const [active, setActive] = useState(false);\n  const { updateRunDetails } = useUpdateRunDetails();\n  const humanReadableTime = toHumanReadableTime(id);\n\n  const { setHoveredElementId, hoveredElementId } =\n    useContext(HoverStateContext);\n\n  const isMatchSearchValue = (text) =>\n    searchValue ? textMatchesSearch(text, searchValue) : false;\n\n  const displayValue = (value) =>\n    isMatchSearchValue(value) ? getHighlightedText(value, searchValue) : value;\n\n  const isSearchValueInNotes = isMatchSearchValue(notes);\n\n  const onRunsListCardClick = (id, e) => {\n    /**\n     * If we click the bookmark icon or the path HTML element within the SVG,\n     * then update the bookmark boolean. If we didn't check for the path, the\n     * user could hit a dead zone, and nothing would happen.\n     */\n    if (\n      e.target.classList.contains('runs-list-card__bookmark') ||\n      e.target.tagName === 'path'\n    ) {\n      updateRunDetails({\n        runId: id,\n        runInput: { bookmark: !bookmark },\n      });\n\n      return;\n    }\n\n    onRunSelection(id);\n  };\n\n  useEffect(() => {\n    setActive(selectedRunIds.includes(id));\n  }, [id, selectedRunIds]);\n\n  return (\n    <div\n      className={classnames('kedro', 'runs-list-card', {\n        'runs-list-card--active': active,\n        'runs-list-card--disabled': disableRunSelection && !active,\n        'runs-list-card--hovered': hoveredElementId === id,\n      })}\n      onClick={(e) => onRunsListCardClick(id, e)}\n      onMouseOver={() => setHoveredElementId(id)}\n      onMouseLeave={() => setHoveredElementId(null)}\n    >\n      {enableComparisonView && (\n        <div\n          className={classnames('runs-list-card__checked', {\n            'runs-list-card__checked--active': active,\n            'runs-list-card__checked--comparing': enableComparisonView,\n            'runs-list-card__checked--selected-first': selectedIndex === 0,\n            'runs-list-card__checked--selected-second': selectedIndex === 1,\n            'runs-list-card__checked--selected-third': selectedIndex === 2,\n          })}\n        />\n      )}\n      <div>\n        <div\n          className=\"runs-list-card__title\"\n          dangerouslySetInnerHTML={{\n            __html: displayValue(title),\n          }}\n        />\n\n        <div\n          className=\"runs-list-card__gitsha\"\n          dangerouslySetInnerHTML={{\n            __html: displayValue(gitSha),\n          }}\n        />\n        <div className=\"runs-list-card__timestamp\">{humanReadableTime}</div>\n        {isSearchValueInNotes && (\n          <div\n            className=\"runs-list-card__notes\"\n            dangerouslySetInnerHTML={{\n              __html: `Notes:  <em>${displayValue(notes)}</em>`,\n            }}\n          />\n        )}\n      </div>\n      {bookmark ? (\n        <BookmarkIcon\n          className={'runs-list-card__bookmark runs-list-card__bookmark--solid'}\n        />\n      ) : (\n        <BookmarkStrokeIcon\n          className={\n            'runs-list-card__bookmark runs-list-card__bookmark--stroke'\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RunsListCard;\n","import RunsList from './runs-list';\n\nexport default RunsList;\n","import React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { textMatchesSearch } from '../../../utils/search-utils';\nimport SearchList from '../../search-list';\nimport Switch from '../../ui/switch';\nimport Accordion from '../accordion';\nimport RunsListCard from '../runs-list-card';\nimport { metricLimit } from '../../../config';\n\nimport './runs-list.css';\n\n/**\n * Return only the runs that match the search text\n * @param {Object} runData original set of runs\n * @param {String} searchValue Search term\n * @return {Object} Grouped nodes\n */\nconst getFilteredRunList = (runData, searchValue) => {\n  // filter the runs that matches the runId\n  const filteredRuns = runData?.filter(\n    (run) =>\n      textMatchesSearch(run.title, searchValue) ||\n      textMatchesSearch(run.notes, searchValue) ||\n      textMatchesSearch(run.gitSha, searchValue)\n  );\n\n  return filteredRuns;\n};\n\nconst RunsList = ({\n  disableRunSelection,\n  enableComparisonView,\n  isDisplayingMetrics,\n  onRunSelection,\n  onToggleComparisonView,\n  runData,\n  selectedRunIds,\n}) => {\n  const [searchValue, updateSearchValue] = useState('');\n\n  const condensedRunsList = isDisplayingMetrics\n    ? runData.slice(0, metricLimit)\n    : runData;\n  const filteredRunList = getFilteredRunList(condensedRunsList, searchValue);\n\n  const bookmarkedRuns = filteredRunList.filter((run) => run.bookmark === true);\n  const unbookmarkedRuns = filteredRunList.filter(\n    (run) => run.bookmark === false\n  );\n\n  return (\n    <>\n      <div className=\"runs-list-top-wrapper\">\n        <div className=\"search-bar-wrapper\">\n          <SearchList\n            onUpdateSearchValue={debounce(updateSearchValue, 250)}\n            searchValue={searchValue}\n          />\n        </div>\n        <div className=\"compare-switch-wrapper\">\n          <span className=\"compare-switch-wrapper__text\">\n            Compare runs (max. 3)\n          </span>\n          <Switch onChange={onToggleComparisonView} />\n        </div>\n      </div>\n      {bookmarkedRuns.length > 0 ? (\n        <Accordion\n          heading=\"Bookmarked\"\n          headingClassName=\"runs-list__accordion-header\"\n          headingDetail={bookmarkedRuns.length}\n        >\n          <div className=\"runs-list__wrapper\">\n            {bookmarkedRuns.map((data) => (\n              <RunsListCard\n                data={data}\n                disableRunSelection={disableRunSelection}\n                enableComparisonView={enableComparisonView}\n                key={data.id}\n                onRunSelection={onRunSelection}\n                selectedRunIds={selectedRunIds}\n                searchValue={searchValue}\n                selectedIndex={selectedRunIds.indexOf(data.id)}\n              />\n            ))}\n          </div>\n        </Accordion>\n      ) : null}\n      {unbookmarkedRuns.length > 0 ? (\n        <Accordion\n          heading={`${bookmarkedRuns.length === 0 ? 'All' : 'Unbookmarked'}`}\n          headingClassName=\"runs-list__accordion-header\"\n          headingDetail={unbookmarkedRuns.length}\n        >\n          <div className=\"runs-list__wrapper\">\n            {unbookmarkedRuns.map((data) => (\n              <RunsListCard\n                data={data}\n                disableRunSelection={disableRunSelection}\n                enableComparisonView={enableComparisonView}\n                key={data.id}\n                onRunSelection={onRunSelection}\n                selectedRunIds={selectedRunIds}\n                searchValue={searchValue}\n                selectedIndex={selectedRunIds.indexOf(data.id)}\n              />\n            ))}\n          </div>\n        </Accordion>\n      ) : null}\n    </>\n  );\n};\n\nexport default RunsList;\n","import Sidebar from './sidebar';\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport ExperimentPrimaryToolbar from '../experiment-tracking/experiment-primary-toolbar';\nimport FlowchartPrimaryToolbar from '../flowchart-primary-toolbar';\nimport MiniMap from '../minimap';\nimport MiniMapToolbar from '../minimap-toolbar';\nimport NodeList from '../node-list';\nimport PipelineList from '../pipeline-list';\nimport RunsList from '../experiment-tracking/runs-list';\n\nimport './sidebar.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n * @param {Boolean} props.visible Whether the sidebar is open/closed\n */\nexport const Sidebar = ({\n  disableRunSelection,\n  displayGlobalToolbar,\n  displaySidebar,\n  enableComparisonView,\n  enableShowChanges,\n  isDisplayingMetrics = false,\n  isExperimentView = false,\n  onRunSelection,\n  onToggleComparisonView,\n  runMetadata,\n  runsListData,\n  runTrackingData,\n  selectedRunData,\n  selectedRunIds,\n  setEnableShowChanges,\n  setSidebarVisible,\n  showRunDetailsModal,\n  sidebarVisible,\n  visible,\n  setShowRunExportModal,\n}) => {\n  const [pipelineIsOpen, togglePipeline] = useState(false);\n\n  if (isExperimentView) {\n    return (\n      <>\n        <div\n          className={classnames('pipeline-sidebar', {\n            'pipeline-sidebar--visible': sidebarVisible,\n          })}\n        >\n          <div className=\"pipeline-ui pipeline-ui--experiment-tracking\">\n            <RunsList\n              disableRunSelection={disableRunSelection}\n              enableComparisonView={enableComparisonView}\n              isDisplayingMetrics={isDisplayingMetrics}\n              onRunSelection={onRunSelection}\n              onToggleComparisonView={onToggleComparisonView}\n              runData={runsListData}\n              selectedRunIds={selectedRunIds}\n            />\n          </div>\n          <nav className=\"pipeline-toolbar\">\n            <ExperimentPrimaryToolbar\n              displaySidebar={displaySidebar}\n              enableComparisonView={enableComparisonView}\n              enableShowChanges={enableShowChanges}\n              runMetadata={runMetadata}\n              runTrackingData={runTrackingData}\n              selectedRunData={selectedRunData}\n              setEnableShowChanges={setEnableShowChanges}\n              setSidebarVisible={setSidebarVisible}\n              showChangesIconDisabled={!(selectedRunIds.length > 1)}\n              showRunDetailsModal={showRunDetailsModal}\n              sidebarVisible={sidebarVisible}\n              setShowRunExportModal={setShowRunExportModal}\n            />\n          </nav>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <div\n          className={classnames('pipeline-sidebar', {\n            'pipeline-sidebar--visible': visible,\n            'pipeline-sidebar--no-global-toolbar': !displayGlobalToolbar,\n          })}\n        >\n          <div className=\"pipeline-ui\">\n            <PipelineList onToggleOpen={togglePipeline} />\n            <NodeList faded={pipelineIsOpen} />\n          </div>\n          <nav className=\"pipeline-toolbar\">\n            <FlowchartPrimaryToolbar />\n            <MiniMapToolbar />\n          </nav>\n          <MiniMap />\n        </div>\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  displayGlobalToolbar: state.display.globalToolbar,\n  displaySidebar: state.display.sidebar,\n  visible: state.visible.sidebar,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n","import { useCallback, useEffect, useState } from 'react';\nimport { useLocation, matchPath } from 'react-router-dom';\nimport { routes, params } from '../../config';\n\nconst errorMessages = {\n  node: 'Please check the value of \"selected_id\" in the URL',\n  modularPipeline: 'Please check the value of \"focused_id\" in the URL',\n  pipeline: 'Please check the value of \"pipeline_id\" in the URL',\n};\n\n/**\n * To trigger different actions based on the current location in the Flowchart.\n * This hook is only called when the page is reloaded or when the URL search changes.\n */\nexport const useRedirectLocationInFlowchart = (\n  modularPipelinesTree,\n  nodes,\n  onLoadNodeData,\n  onToggleFocusMode,\n  onToggleModularPipelineActive,\n  onToggleModularPipelineExpanded,\n  onUpdateActivePipeline,\n  pipelines,\n  reload\n) => {\n  const { pathname, search } = useLocation();\n\n  const [errorMessage, setErrorMessage] = useState({});\n  const [invalidUrl, setInvalidUrl] = useState(false);\n\n  const activePipelineId = search.substring(\n    search.indexOf(params.pipeline) + params.pipeline.length,\n    search.indexOf('&')\n  );\n\n  const decodedPipelineId = decodeURI(activePipelineId);\n\n  const matchedFlowchartMainPage = matchPath(pathname + search, {\n    exact: true,\n    path: [routes.flowchart.main],\n  });\n\n  const matchedSelectedNode = matchPath(pathname + search, {\n    exact: true,\n    path: [routes.flowchart.selectedNode],\n  });\n\n  const matchedFocusedNode = matchPath(pathname + search, {\n    exact: true,\n    path: [routes.flowchart.focusedNode],\n  });\n\n  const updatePipeline = useCallback(\n    (pipelines, decodedPipelineId) => {\n      const foundPipeline = pipelines.find((id) => id === decodedPipelineId);\n\n      if (foundPipeline) {\n        onUpdateActivePipeline(decodedPipelineId);\n      } else {\n        setErrorMessage(errorMessages.pipeline);\n        setInvalidUrl(true);\n      }\n    },\n    [onUpdateActivePipeline]\n  );\n\n  useEffect(() => {\n    setErrorMessage({});\n    setInvalidUrl(false);\n\n    if (matchedFlowchartMainPage) {\n      onLoadNodeData(null);\n      onToggleFocusMode(null);\n    }\n\n    if (matchedSelectedNode && Object.keys(nodes).length > 0) {\n      // Switching the view forces the page to reload again\n      // hence this action needs to happen first\n      updatePipeline(pipelines, decodedPipelineId);\n\n      // Reset the focus mode to null when when using the navigation buttons\n      onToggleFocusMode(null);\n\n      // This timeout is to ensure it has enough time to\n      // change to a different modular pipeline view first\n      const switchingModularPipelineTimeout = setTimeout(() => {\n        const nodeId = search.split(params.selected)[1];\n        const foundNode = Object.keys(nodes).find((node) => node === nodeId);\n        if (foundNode) {\n          const modularPipeline = nodes[nodeId];\n          const hasModularPipeline = modularPipeline?.length > 0;\n\n          if (hasModularPipeline) {\n            onToggleModularPipelineExpanded(modularPipeline);\n          }\n\n          // then upload the node data\n          onLoadNodeData(nodeId);\n        } else {\n          setErrorMessage(errorMessages.node);\n          setInvalidUrl(true);\n        }\n      }, 500);\n\n      return () => clearTimeout(switchingModularPipelineTimeout);\n    }\n\n    if (matchedFocusedNode && Object.keys(modularPipelinesTree).length > 0) {\n      updatePipeline(pipelines, decodedPipelineId);\n\n      // Reset the node data to null when when using the navigation buttons\n      onLoadNodeData(null);\n\n      const switchingModularPipelineTimeout = setTimeout(() => {\n        const modularPipelineId = search.split(params.focused)[1];\n\n        const foundModularPipeline = modularPipelinesTree[modularPipelineId];\n\n        if (foundModularPipeline) {\n          onToggleModularPipelineActive(modularPipelineId, true);\n          onToggleFocusMode(foundModularPipeline.data);\n        } else {\n          setErrorMessage(errorMessages.modularPipeline);\n          setInvalidUrl(true);\n        }\n      }, 500);\n\n      return () => clearTimeout(switchingModularPipelineTimeout);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reload, search]);\n\n  return { errorMessage, invalidUrl };\n};\n","import FlowChartWrapper from './flowchart-wrapper';\n\nexport default FlowChartWrapper;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { isLoading } from '../../selectors/loading';\nimport { getModularPipelinesTree } from '../../selectors/nodes';\nimport {\n  toggleModularPipelineActive,\n  toggleModularPipelinesExpanded,\n} from '../../actions/modular-pipelines';\nimport { toggleFocusMode } from '../../actions';\nimport { loadNodeData } from '../../actions/nodes';\nimport { loadPipelineData } from '../../actions/pipelines';\nimport ExportModal from '../export-modal';\nimport FlowChart from '../flowchart';\nimport PipelineWarning from '../pipeline-warning';\nimport LoadingIcon from '../icons/loading';\nimport MetaData from '../metadata';\nimport MetadataModal from '../metadata-modal';\nimport Sidebar from '../sidebar';\nimport { useRedirectLocationInFlowchart } from '../../utils/hooks/use-redirect-location';\nimport './flowchart-wrapper.css';\n\n/**\n * Main flowchart container. Handles showing/hiding the sidebar nav for flowchart view,\n * the rendering of the flowchart, as well as the display of all related modals.\n */\nexport const FlowChartWrapper = ({\n  loading,\n  modularPipelinesTree,\n  nodes,\n  onLoadNodeData,\n  onToggleFocusMode,\n  onToggleModularPipelineActive,\n  onToggleModularPipelineExpanded,\n  onUpdateActivePipeline,\n  reload,\n  sidebarVisible,\n  pipelines,\n}) => {\n  const { errorMessage, invalidUrl } = useRedirectLocationInFlowchart(\n    modularPipelinesTree,\n    nodes,\n    onLoadNodeData,\n    onToggleFocusMode,\n    onToggleModularPipelineActive,\n    onToggleModularPipelineExpanded,\n    onUpdateActivePipeline,\n    pipelines,\n    reload\n  );\n\n  if (invalidUrl) {\n    return (\n      <div className=\"kedro-pipeline\">\n        <Sidebar />\n        <MetaData />\n        <PipelineWarning errorMessage={errorMessage} invalidUrl={invalidUrl} />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"kedro-pipeline\">\n        <Sidebar />\n        <MetaData />\n        <div className=\"pipeline-wrapper\">\n          <PipelineWarning />\n          <FlowChart />\n          <div\n            className={classnames('pipeline-wrapper__loading', {\n              'pipeline-wrapper__loading--sidebar-visible': sidebarVisible,\n            })}\n          >\n            <LoadingIcon visible={loading} />\n          </div>\n        </div>\n        <ExportModal />\n        <MetadataModal />\n      </div>\n    );\n  }\n};\n\nexport const mapStateToProps = (state) => ({\n  loading: isLoading(state),\n  modularPipelinesTree: getModularPipelinesTree(state),\n  nodes: state.node.modularPipelines,\n  pipelines: state.pipeline.ids,\n  sidebarVisible: state.visible.sidebar,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  onToggleFocusMode: (modularPipeline) => {\n    dispatch(toggleFocusMode(modularPipeline));\n  },\n  onLoadNodeData: (nodeClicked) => {\n    dispatch(loadNodeData(nodeClicked));\n  },\n  onToggleModularPipelineActive: (modularPipelineIDs, active) => {\n    dispatch(toggleModularPipelineActive(modularPipelineIDs, active));\n  },\n  onToggleModularPipelineExpanded: (expanded) => {\n    dispatch(toggleModularPipelinesExpanded(expanded));\n  },\n  onUpdateActivePipeline: (pipelineId) => {\n    dispatch(loadPipelineData(pipelineId));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlowChartWrapper);\n","import gql from 'graphql-tag';\n\n/** subscribe to receive new runs */\nexport const NEW_RUN_SUBSCRIPTION = gql`\n  subscription {\n    runsAdded {\n      id\n      bookmark\n      gitSha\n      title\n    }\n  }\n`;\n","import React, { createContext, useState } from 'react';\n\nexport const ButtonTimeoutContext = createContext(null);\n\n/**\n * Provides a way to pass different states to a button depending on whether\n * it's successful or not.\n * {@returns hasNotInteracted and setHasNotInteracted} these 2 are only used for modal with editable fields\n */\nexport const ButtonTimeoutContextProvider = ({ children }) => {\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [hasNotInteracted, setHasNotInteracted] = useState(true);\n\n  const handleClick = () => {\n    setShowModal(true);\n\n    const localStateTimeout = setTimeout(() => {\n      setIsSuccessful(true);\n    }, 500);\n\n    // so user is able to see the success message on the button first before the modal goes away\n    const modalTimeout = setTimeout(() => {\n      setShowModal(false);\n    }, 1500);\n\n    // Delay the reset so the user can't see the button text change.\n    const resetTimeout = setTimeout(() => {\n      setIsSuccessful(false);\n      setHasNotInteracted(true);\n    }, 2000);\n\n    return () => {\n      clearTimeout(localStateTimeout);\n      clearTimeout(modalTimeout);\n      clearTimeout(resetTimeout);\n    };\n  };\n\n  return (\n    <ButtonTimeoutContext.Provider\n      value={{\n        handleClick,\n        hasNotInteracted,\n        isSuccessful,\n        setHasNotInteracted: (state) => setHasNotInteracted(state),\n        setIsSuccessful: (state) => setIsSuccessful(state),\n        showModal,\n      }}\n    >\n      {children}\n    </ButtonTimeoutContext.Provider>\n  );\n};\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport {\n  experimentTrackingLazyLoadingColours,\n  experimentTrackingLazyLoadingGap,\n} from '../../../config';\n\nimport './run-dataset.css';\n\nconst GAP = experimentTrackingLazyLoadingGap;\n\nconst SubCatLoader = ({ y }) => (\n  <>\n    <rect width=\"10\" height=\"10\" x=\"0\" y={y + 3} />\n    <rect width=\"100\" height=\"20\" x=\"30\" y={y} />\n  </>\n);\n\nconst TitleLoader = ({ y }) => (\n  <>\n    <rect width=\"10\" height=\"10\" x=\"0\" y={y + 3} />\n    <rect width=\"180\" height=\"20\" x=\"30\" y={y} />\n    <rect width=\"50\" height=\"16\" x=\"0\" y={y + GAP} />\n    <rect width=\"100\" height=\"16\" x=\"0\" y={y + GAP * 2} />\n  </>\n);\n\nconst DetailsLoader = ({ x, y }) => {\n  return (\n    <>\n      <rect width=\"0\" height=\"0\" x={x} y={y} />\n      <rect width=\"50\" height=\"16\" x={x} y={y + GAP} />\n      <rect width=\"180\" height=\"16\" x={x} y={y + GAP * 2} />\n    </>\n  );\n};\n\nexport const SingleRunDatasetLoader = ({ theme }) => (\n  <div className=\"details-dataset\">\n    <ContentLoader\n      viewBox=\"0 0 1000 625\"\n      width=\"1000px\"\n      height=\"100%\"\n      backgroundColor={\n        theme === 'dark'\n          ? experimentTrackingLazyLoadingColours.backgroundDarkTheme\n          : experimentTrackingLazyLoadingColours.backgroundLightTheme\n      }\n      foregroundColor={\n        theme === 'dark'\n          ? experimentTrackingLazyLoadingColours.foregroundDarkTheme\n          : experimentTrackingLazyLoadingColours.foregroundLightTheme\n      }\n    >\n      <SubCatLoader y={0} />\n\n      <TitleLoader y={50} />\n      <DetailsLoader x={380} y={50} />\n\n      <TitleLoader y={185} />\n      <DetailsLoader x={380} y={185} />\n\n      <TitleLoader y={320} />\n      <DetailsLoader x={380} y={320} />\n    </ContentLoader>\n  </div>\n);\n\nexport const DataSetLoader = ({ x, y, length, theme }) => {\n  return (\n    <ContentLoader\n      viewBox=\"0 10 200 30\"\n      width=\"180px\"\n      height=\"100%\"\n      backgroundColor={\n        theme === 'dark'\n          ? experimentTrackingLazyLoadingColours.backgroundDarkTheme\n          : experimentTrackingLazyLoadingColours.backgroundLightTheme\n      }\n      foregroundColor={\n        theme === 'dark'\n          ? experimentTrackingLazyLoadingColours.foregroundDarkTheme\n          : experimentTrackingLazyLoadingColours.foregroundLightTheme\n      }\n    >\n      <rect width=\"150\" height=\"16\" x={x} y={y + length * 2} />\n    </ContentLoader>\n  );\n};\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport {\n  experimentTrackingLazyLoadingColours,\n  experimentTrackingLazyLoadingGap,\n} from '../../../config';\n\nimport './run-metadata.css';\n\nconst GAP = experimentTrackingLazyLoadingGap;\n\nconst TitleLoader = () => (\n  <>\n    <rect width=\"180\" height=\"20\" x=\"0\" y=\"12\" />\n    <rect width=\"88\" height=\"16\" x=\"0\" y={12 + GAP} />\n    <rect width=\"88\" height=\"16\" x=\"0\" y={12 + GAP * 2} />\n    <rect width=\"88\" height=\"16\" x=\"0\" y={12 + GAP * 3} />\n    <rect width=\"88\" height=\"16\" x=\"0\" y={12 + GAP * 4} />\n    <rect width=\"88\" height=\"16\" x=\"0\" y={12 + GAP * 5} />\n    <rect width=\"88\" height=\"16\" x=\"0\" y={12 + GAP * 6} />\n  </>\n);\n\nconst DetailsLoader = ({ x }) => (\n  <>\n    <rect width=\"0\" height=\"0\" x={x} y=\"12\" />\n    <rect width=\"30\" height=\"16\" x={x} y={12 + GAP} />\n    <rect width=\"180\" height=\"16\" x={x} y={12 + GAP * 2} />\n    <rect width=\"88\" height=\"16\" x={x} y={12 + GAP * 3} />\n    <rect width=\"50\" height=\"16\" x={x} y={12 + GAP * 4} />\n    <rect width=\"100\" height=\"16\" x={x} y={12 + GAP * 5} />\n    <rect width=\"150\" height=\"16\" x={x} y={12 + GAP * 6} />\n  </>\n);\n\nexport const SingleRunMetadataLoader = ({ theme }) => (\n  <div className=\"details-metadata\">\n    <ContentLoader\n      viewBox=\"0 0 1000 300\"\n      width=\"1000px\"\n      height=\"100%\"\n      backgroundColor={\n        theme === 'dark'\n          ? experimentTrackingLazyLoadingColours.backgroundDarkTheme\n          : experimentTrackingLazyLoadingColours.backgroundLightTheme\n      }\n      foregroundColor={\n        theme === 'dark'\n          ? experimentTrackingLazyLoadingColours.foregroundDarkTheme\n          : experimentTrackingLazyLoadingColours.foregroundLightTheme\n      }\n    >\n      <TitleLoader />\n      <DetailsLoader x={380} />\n    </ContentLoader>\n  </div>\n);\n\nexport const MetaDataLoader = ({ length, theme }) => {\n  const x = length > 1 ? 75 : 0;\n\n  return (\n    <tbody className=\"details-metadata__run-lazy-loader\">\n      <tr>\n        <td>\n          <ContentLoader\n            viewBox=\"0 0 200 300\"\n            width=\"200px\"\n            height=\"100%\"\n            backgroundColor={\n              theme === 'dark'\n                ? experimentTrackingLazyLoadingColours.backgroundDarkTheme\n                : experimentTrackingLazyLoadingColours.backgroundLightTheme\n            }\n            foregroundColor={\n              theme === 'dark'\n                ? experimentTrackingLazyLoadingColours.foregroundDarkTheme\n                : experimentTrackingLazyLoadingColours.foregroundLightTheme\n            }\n          >\n            <DetailsLoader x={x} />\n          </ContentLoader>\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './tooltip.css';\n\nexport const tooltipDefaultProps = {\n  content: { label1: '', value1: '', label2: '', value2: '' },\n  direction: 'right',\n  position: { x: -500, y: -500 },\n  visible: false,\n};\n\nexport const MetricsChartsTooltip = ({\n  content = tooltipDefaultProps.content,\n  direction = tooltipDefaultProps.direction,\n  position = tooltipDefaultProps.position,\n  visible = tooltipDefaultProps.visible,\n}) => {\n  return (\n    <div\n      className={classnames('tooltip', { 'tooltip--show': visible })}\n      style={{ transform: `translate(${position.x}px, ${position.y}px)` }}\n    >\n      <span\n        className={classnames('tooltip-arrow', `tooltip-arrow--${direction}`)}\n      />\n      <h3 className=\"tooltip-label\">{`${content?.label1}:`}</h3>\n      <h4 className=\"tooltip-value\">{content?.value1}</h4>\n\n      <br />\n      <h3 className=\"tooltip-label\">{`${content?.label2}:`}</h3>\n      <h4 className=\"tooltip-value\">{content?.value2}</h4>\n    </div>\n  );\n};\n","import { sidebarWidth } from '../../../config';\n\nconst tooltipMaxWidth = 300;\nconst tooltipLeftGap = 85;\nconst tooltipRightGap = 70;\nconst tooltipTopGap = 150;\n\nexport const getTooltipPosition = (e) => {\n  const y = e.clientY - tooltipTopGap;\n  let x, direction;\n\n  if (window.innerWidth - e.clientX > tooltipMaxWidth) {\n    x = e.clientX - sidebarWidth.open - tooltipRightGap;\n    direction = 'right';\n  } else {\n    x = e.clientX - sidebarWidth.open - sidebarWidth.open / 2 - tooltipLeftGap;\n    direction = 'left';\n  }\n\n  return { x, y, direction };\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { formatTimestamp } from '../../../utils/date-utils';\nimport { usePrevious } from '../../../utils/hooks';\nimport { HoverStateContext } from '../utils/hover-state-context';\nimport { MetricsChartsTooltip, tooltipDefaultProps } from '../tooltip/tooltip';\nimport { getTooltipPosition } from '../tooltip/get-tooltip-position';\nimport * as d3 from 'd3';\n\nimport './time-series.css';\n\nexport const getSelectedOrderedData = (runData, selectedRuns) => {\n  return runData\n    .filter(([key, _]) => selectedRuns.includes(key))\n    .sort((a, b) => {\n      // We need to sort the selected data to match the order of selectedRuns.\n      // If we didn't, the highlighted runs would switch colors unnecessarily.\n      return selectedRuns.indexOf(a[0]) - selectedRuns.indexOf(b[0]);\n    })\n    .map(([key, value], i) => [new Date(formatTimestamp(key)), value]);\n};\n\nconst chartBuffer = 0.02;\nconst height = 150;\nconst margin = { top: 20, right: 10, bottom: 80, left: 35 };\nconst yScales = {};\n\nexport const TimeSeries = ({ chartWidth, metricsData, selectedRuns }) => {\n  const previouslySelectedRuns = usePrevious(selectedRuns);\n  const [showTooltip, setShowTooltip] = useState(tooltipDefaultProps);\n  const [rangeSelection, setRangeSelection] = useState(undefined);\n\n  const { hoveredElementId, setHoveredElementId } =\n    useContext(HoverStateContext);\n\n  const defaultChartWidth = isNaN(chartWidth) ? 100 : chartWidth;\n\n  const selectedMarkerRotate = [45, 0, 0];\n  const selectedMarkerShape = [\n    d3.symbolSquare,\n    d3.symbolCircle,\n    d3.symbolTriangle,\n  ];\n\n  const hoveredElementDate =\n    hoveredElementId && new Date(formatTimestamp(hoveredElementId));\n\n  const hoveredValues = hoveredElementId && metricsData.runs[hoveredElementId];\n\n  const metricKeys = Object.keys(metricsData.metrics);\n  const metricData = Object.entries(metricsData.metrics);\n  const runKeys = Object.keys(metricsData.runs);\n  const runData = Object.entries(metricsData.runs);\n\n  const parsedData = runData.map(([key, value]) => [\n    new Date(formatTimestamp(key)),\n    value,\n  ]);\n  const parsedDates = parsedData.map(([key, _]) => key);\n\n  const diffDays = parseInt(\n    (d3.max(parsedDates) - d3.min(parsedDates)) / (1000 * 60 * 60 * 24),\n    10\n  );\n  const minDate = new Date(d3.min(parsedDates));\n  minDate.setDate(minDate.getDate() - diffDays * chartBuffer);\n  const maxDate = new Date(d3.max(parsedDates));\n  maxDate.setDate(maxDate.getDate() + diffDays * chartBuffer);\n\n  const selectedData = runData\n    .filter(([key, _]) => selectedRuns.includes(key))\n    .map(([key, value], i) => [new Date(formatTimestamp(key)), value]);\n\n  metricData.map(\n    ([_, value], i) =>\n      (yScales[i] = d3\n        .scaleLinear()\n        .domain([\n          Math.min(...value) - Math.min(...value) * chartBuffer,\n          Math.max(...value) + Math.max(...value) * chartBuffer,\n        ])\n        .range([height, 0]))\n  );\n\n  const xScale = d3\n    .scaleTime()\n    .domain([minDate, maxDate])\n    .range([0, defaultChartWidth]);\n\n  if (rangeSelection) {\n    xScale.domain(rangeSelection);\n  }\n\n  const handleMouseOverLine = (e, key) => {\n    setHoveredElementId(key);\n\n    if (e) {\n      const parsedDate = new Date(formatTimestamp(key));\n      const { x, y, direction } = getTooltipPosition(e);\n\n      setShowTooltip({\n        content: {\n          label1: 'Run name',\n          value1: key,\n          label2: 'Date',\n          value2: parsedDate.toLocaleDateString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n          }),\n        },\n        direction,\n        position: { x, y },\n        visible: true,\n      });\n    }\n  };\n\n  const handleMouseOutLine = () => {\n    setHoveredElementId(null);\n    setShowTooltip(tooltipDefaultProps);\n  };\n\n  useEffect(() => {\n    d3.selectAll(`line[id=\"${hoveredElementId}\"]`).raise();\n  }, [hoveredElementId]);\n\n  if (previouslySelectedRuns !== selectedRuns) {\n    if (rangeSelection) {\n      setRangeSelection(undefined);\n    }\n  }\n\n  return (\n    <div className=\"time-series\">\n      <MetricsChartsTooltip\n        content={showTooltip.content}\n        direction={showTooltip.direction}\n        position={showTooltip.position}\n        visible={showTooltip.visible}\n      />\n      {metricKeys.map((metricName, metricIndex) => {\n        const metricValues = Object.values(metricsData.metrics)[metricIndex];\n\n        const getXAxis = (ref) => {\n          if (rangeSelection) {\n            d3.select(ref)\n              .transition()\n              .duration(1000)\n              .call(d3.axisBottom(xScale).tickSizeOuter(0));\n          } else {\n            d3.select(ref).call(d3.axisBottom(xScale).tickSizeOuter(0));\n          }\n        };\n\n        const getYAxis = (ref) => {\n          d3.select(ref).call(\n            d3\n              .axisLeft(yScales[metricIndex])\n              .tickSizeOuter(0)\n              .tickFormat((x) => `${x.toFixed(2)}`)\n          );\n        };\n\n        const lineGenerator = d3.line().defined(function (d) {\n          return d !== null;\n        });\n\n        const linePath = (data) => {\n          let points = data.map((x, i) => {\n            if (x !== null) {\n              return [xScale(parsedDates[i]), yScales[metricIndex](x)];\n            } else {\n              return null;\n            }\n          });\n\n          return lineGenerator(points);\n        };\n\n        const trendLinePath = (data) => {\n          let points = data.map(([key, value]) => {\n            if (value !== null) {\n              return [xScale(key), yScales[metricIndex](value[metricIndex])];\n            } else {\n              return null;\n            }\n          });\n          return d3.line()(points);\n        };\n\n        const brush = d3\n          .brushX()\n          .extent([\n            [0, 0],\n            [defaultChartWidth, height],\n          ])\n          .on('end', (e) => {\n            if (e.selection) {\n              const indexSelection = e.selection.map(xScale.invert);\n              setRangeSelection(indexSelection);\n              d3.selectAll('.time-series__brush').call(brush.move, null);\n            }\n          });\n\n        d3.selectAll('.time-series__brush').call(brush);\n\n        const resetXScale = () => setRangeSelection(undefined);\n\n        return (\n          <React.Fragment key={metricName + metricIndex}>\n            <div className=\"time-series__metric-name\">{metricName}</div>\n            <svg\n              preserveAspectRatio=\"xMinYMin meet\"\n              key={`time-series--${metricName}`}\n              width={defaultChartWidth + margin.left + margin.right}\n              height={height + margin.top + margin.bottom}\n            >\n              <defs>\n                <clipPath id=\"clip\">\n                  <rect x={0} y={0} width={defaultChartWidth} height={height} />\n                </clipPath>\n              </defs>\n\n              <defs>\n                <clipPath id=\"brush_clip\">\n                  <rect\n                    height={height - 1}\n                    width={defaultChartWidth}\n                    x={0}\n                    y={0.5}\n                  />\n                </clipPath>\n              </defs>\n\n              <g\n                id={metricName}\n                transform={`translate(${margin.left},${margin.top})`}\n              >\n                <g\n                  className=\"time-series__runs-axis\"\n                  ref={getXAxis}\n                  transform={`translate(0,${height})`}\n                />\n\n                <g className=\"time-series__metric-axis\" ref={getYAxis} />\n\n                <g\n                  className=\"time-series__metric-axis-dual\"\n                  ref={getYAxis}\n                  transform={`translate(${defaultChartWidth},0)`}\n                />\n\n                <text\n                  className=\"time-series__axis-label\"\n                  x={-10 - height / 2}\n                  y={10 - margin.left}\n                >\n                  value\n                </text>\n\n                <g className=\"time-series__brush\" onDoubleClick={resetXScale} />\n\n                <g\n                  className=\"time-series__run-lines\"\n                  clipPath=\"url(#brush_clip)\"\n                >\n                  {parsedData.map(([key, _], index) => (\n                    <line\n                      className={classnames('time-series__run-line', {\n                        'time-series__run-line--hovered':\n                          hoveredElementId === runKeys[index],\n                        'time-series__run-line--blend':\n                          hoveredElementId || selectedRuns.length > 1,\n                      })}\n                      id={runKeys[index]}\n                      key={key + index}\n                      x1={xScale(key)}\n                      y1={0}\n                      x2={xScale(key)}\n                      y2={height}\n                      onMouseOver={(e) =>\n                        handleMouseOverLine(e, runKeys[index])\n                      }\n                      onMouseLeave={handleMouseOutLine}\n                    />\n                  ))}\n                </g>\n\n                {hoveredValues && (\n                  <g className=\"time-series__hovered-line-group\">\n                    {hoveredValues.map((value, index) => {\n                      if (metricIndex === index) {\n                        return (\n                          <React.Fragment key={value + index}>\n                            <line\n                              className=\"time-series__hovered-line\"\n                              x1={0}\n                              y1={yScales[index](value)}\n                              x2={defaultChartWidth}\n                              y2={yScales[index](value)}\n                            />\n                            <g className=\"time-series__ticks\">\n                              <line\n                                className=\"time-series__tick-line\"\n                                x1={xScale(hoveredElementDate)}\n                                y1={yScales[index](value)}\n                                x2={xScale(hoveredElementDate) - 5}\n                                y2={yScales[index](value)}\n                              />\n                              <text\n                                className=\"time-series__tick-text\"\n                                x={xScale(hoveredElementDate)}\n                                y={yScales[index](value)}\n                              >\n                                {value?.toFixed(3)}\n                              </text>\n                            </g>\n                          </React.Fragment>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })}\n                    ;\n                  </g>\n                )}\n\n                <g\n                  className={classnames('time-series__metric-line', {\n                    'time-series__metric-line--blend':\n                      hoveredElementId || selectedRuns.length > 1,\n                  })}\n                  clipPath=\"url(#clip)\"\n                >\n                  <path d={linePath(metricValues)} />\n                </g>\n\n                <g\n                  className=\"time-series__selected-group\"\n                  clipPath=\"url(#brush_clip)\"\n                >\n                  {getSelectedOrderedData(runData, selectedRuns).map(\n                    ([key, value], index) => (\n                      <React.Fragment key={key + value}>\n                        <line\n                          className={`time-series__run-line--selected-${index}`}\n                          x1={xScale(key)}\n                          y1={0}\n                          x2={xScale(key)}\n                          y2={height}\n                        />\n                        <text\n                          className=\"time-series__tick-text\"\n                          x={xScale(key)}\n                          y={yScales[metricIndex](value[metricIndex])}\n                        >\n                          {value[metricIndex]?.toFixed(3)}\n                        </text>\n                        <path\n                          className={`time-series__marker--selected-${index}`}\n                          d={`${d3.symbol(selectedMarkerShape[index], 20)()}`}\n                          transform={`translate(${xScale(key)},${yScales[\n                            metricIndex\n                          ](value[metricIndex])}) \n                  rotate(${selectedMarkerRotate[index]})`}\n                        />\n                      </React.Fragment>\n                    )\n                  )}\n                </g>\n\n                <g className=\"time-series__trend-line\">\n                  <path d={trendLinePath(selectedData)} />\n                </g>\n              </g>\n            </svg>\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect, useMemo } from 'react';\nimport classnames from 'classnames';\nimport * as d3 from 'd3';\nimport { HoverStateContext } from '../utils/hover-state-context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { MetricsChartsTooltip, tooltipDefaultProps } from '../tooltip/tooltip';\nimport { getTooltipPosition } from '../tooltip/get-tooltip-position';\nimport { formatTimestamp } from '../../../utils/date-utils';\n\nimport './parallel-coordinates.css';\n\nexport const getUniqueValues = (values) => {\n  return values\n    .filter((value, i, self) => self.indexOf(value) === i)\n    .filter((value) => value !== null)\n    .sort((a, b) => a - b);\n};\n\nconst paddingTopBottom = 38;\nconst paddingLeftRight = 80;\nconst axisGapBuffer = 3;\nconst selectedMarkerRotate = [45, 0, 0];\n\nconst selectedMarkerColors = ['#0084B2', '#FFBC00', '#31E27B'];\n\nconst yAxis = {};\nconst yScales = {};\n\nexport const ParallelCoordinates = ({\n  chartHeight,\n  chartWidth,\n  metricsData,\n  selectedRuns,\n}) => {\n  const [hoveredMetricLabel, setHoveredMetricLabel] = useState(null);\n  const [showTooltip, setShowTooltip] = useState(tooltipDefaultProps);\n\n  const { hoveredElementId, setHoveredElementId } =\n    useContext(HoverStateContext);\n\n  const selectedMarkerShape = [\n    d3.symbolSquare,\n    d3.symbolCircle,\n    d3.symbolTriangle,\n  ];\n\n  const graph = Object.entries(metricsData.metrics);\n  const graphKeys = useMemo(\n    () => Object.keys(metricsData.metrics),\n    [metricsData.metrics]\n  );\n\n  const data = Object.entries(metricsData.runs);\n  const selectedData = data\n    .filter(([key]) => selectedRuns.includes(key))\n    .sort((a, b) => {\n      // We need to sort the selected data to match the order of selectedRuns.\n      // If we didn't, the highlighted runs would switch colors unnecessarily.\n      return selectedRuns.indexOf(a[0]) - selectedRuns.indexOf(b[0]);\n    });\n\n  const hoveredValues = hoveredElementId && metricsData.runs[hoveredElementId];\n\n  const xScale = d3\n    .scalePoint()\n    .domain(graphKeys)\n    .range([paddingLeftRight, chartWidth - paddingLeftRight]);\n\n  // For each metric, draw a y-scale\n  graph.forEach(([key, value]) => {\n    yScales[key] = d3\n      .scaleLinear()\n      .domain([d3.min(value), d3.max(value)])\n      .range([\n        chartHeight - paddingTopBottom * 2.15,\n        paddingTopBottom + paddingTopBottom / axisGapBuffer,\n      ]);\n  });\n\n  Object.entries(yScales).forEach(([key, value]) => {\n    yAxis[key] = d3.axisLeft(value).ticks(0).tickSizeOuter(0);\n  });\n\n  const lineGenerator = d3.line().defined(function (d) {\n    return d !== null;\n  });\n\n  const linePath = function (d) {\n    const points = d.map((x, i) => {\n      if (x !== null) {\n        return [xScale(graphKeys[i]), yScales[graphKeys[i]](x)];\n      } else {\n        return null;\n      }\n    });\n\n    return lineGenerator(points);\n  };\n\n  const handleMouseOverMetric = (e, key) => {\n    const runsCount = graph.find((each) => each[0] === key)[1].length;\n    const { x, y, direction } = getTooltipPosition(e);\n\n    setHoveredMetricLabel(key);\n\n    setShowTooltip({\n      content: {\n        label1: 'Metric name',\n        value1: key,\n        label2: 'Run count',\n        value2: runsCount,\n      },\n      direction,\n      position: { x, y },\n      visible: true,\n    });\n  };\n\n  const handleMouseOutMetric = () => {\n    setHoveredMetricLabel(null);\n    setShowTooltip(tooltipDefaultProps);\n  };\n\n  const handleMouseOverLine = (e, key) => {\n    setHoveredElementId(key);\n\n    if (e) {\n      const parsedDate = new Date(formatTimestamp(key));\n      const { x, y, direction } = getTooltipPosition(e);\n\n      setShowTooltip({\n        content: {\n          label1: 'Run name',\n          value1: key,\n          label2: 'Date',\n          value2: parsedDate.toLocaleDateString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n          }),\n        },\n        direction,\n        position: { x, y },\n        visible: true,\n      });\n    }\n  };\n\n  const handleMouseOutLine = () => {\n    setHoveredElementId(null);\n    setShowTooltip(tooltipDefaultProps);\n  };\n\n  useEffect(() => {\n    d3.select(`.run-line[id=\"${hoveredElementId}\"]`).raise();\n  }, [hoveredElementId]);\n\n  useEffect(() => {\n    d3.select(`.metric-axis[id=\"${hoveredMetricLabel}\"]`).raise();\n    d3.selectAll(`.selected-runs`).raise();\n    d3.selectAll(`.selected-runs > path`).raise();\n  }, [hoveredMetricLabel]);\n\n  return (\n    <div className=\"parallel-coordinates\">\n      <MetricsChartsTooltip\n        content={showTooltip.content}\n        direction={showTooltip.direction}\n        position={showTooltip.position}\n        visible={showTooltip.visible}\n      />\n\n      <svg\n        preserveAspectRatio=\"xMinYMin meet\"\n        viewBox={`0 0 ${chartWidth} ${chartHeight}`}\n        width=\"100%\"\n      >\n        {graphKeys.map((metricName) => {\n          const getYAxis = (ref) => {\n            d3.select(ref).call(yAxis[metricName]).attr('id', metricName);\n          };\n\n          return (\n            <g\n              className={classnames('metric-axis', {\n                'metric-axis--hovered': hoveredMetricLabel === metricName,\n                'metric-axis--faded':\n                  hoveredMetricLabel && hoveredMetricLabel !== metricName,\n              })}\n              key={`metric-axis--${metricName}`}\n              ref={getYAxis}\n              transform={`translate(${xScale(metricName)}, 0)`}\n              y={paddingTopBottom / 2}\n            >\n              <text\n                className=\"headers\"\n                key={`metric-axis-text--${metricName}`}\n                onMouseOut={handleMouseOutMetric}\n                onMouseOver={(e) => handleMouseOverMetric(e, metricName)}\n                textAnchor=\"middle\"\n                y={paddingTopBottom / 2}\n              >\n                {metricName.length > 20\n                  ? '...' + metricName.slice(-20)\n                  : metricName}\n              </text>\n            </g>\n          );\n        })}\n\n        <g className=\"run-lines\">\n          {data.map(([runId, value], i) => {\n            return (\n              <path\n                className={classnames('run-line', {\n                  'run-line--hovered': hoveredElementId === runId,\n                  'run-line--faded':\n                    (hoveredElementId && hoveredElementId !== runId) ||\n                    hoveredMetricLabel,\n                })}\n                d={linePath(value, i)}\n                id={runId}\n                key={runId}\n                onMouseLeave={handleMouseOutLine}\n                onMouseOver={(e) => handleMouseOverLine(e, runId)}\n              />\n            );\n          })}\n        </g>\n\n        {graph.map(([metricName, values], metricIndex) => {\n          // To avoid rendering a tick more than once\n          const uniqueValues = getUniqueValues(values);\n\n          return (\n            <g className=\"tick-values\" id={metricName} key={uuidv4()}>\n              {uniqueValues.map((value) => {\n                // To ensure the hoveredValues are highlighted once per axis\n                const highlightedValue =\n                  hoveredValues &&\n                  hoveredValues.find(\n                    (value, index) => index === metricIndex && value\n                  );\n\n                const xScaleTickValue = isNaN(xScale(metricName))\n                  ? 0\n                  : xScale(metricName);\n\n                const yScaleTickValue = isNaN(yScales[metricName](value))\n                  ? 0\n                  : yScales[metricName](value);\n\n                return (\n                  <text\n                    className={classnames('text', {\n                      'text--hovered':\n                        hoveredMetricLabel === metricName ||\n                        (highlightedValue && highlightedValue === value),\n                      'text--faded':\n                        (hoveredMetricLabel &&\n                          hoveredMetricLabel !== metricName) ||\n                        (highlightedValue && highlightedValue !== value),\n                    })}\n                    key={uuidv4()}\n                    x={xScaleTickValue - 8}\n                    y={yScaleTickValue + 3}\n                    style={{\n                      textAnchor: 'end',\n                      transform: 'translate(-10,4)',\n                    }}\n                  >\n                    {value?.toFixed(3)}\n                  </text>\n                );\n              })}\n            </g>\n          );\n        })}\n\n        {graph.map(([metricName, values], metricIndex) => {\n          const sortedValues = getUniqueValues(values);\n\n          return (\n            <g\n              className=\"tick-lines\"\n              id={metricName}\n              key={`tick-lines--${metricName}`}\n            >\n              {sortedValues.map((value) => {\n                // To ensure the hoveredValues are highlighted once per axis\n                const highlightedValue =\n                  hoveredValues &&\n                  hoveredValues.find(\n                    (value, index) => index === metricIndex && value\n                  );\n\n                const xScaleMetricName = isNaN(xScale(metricName))\n                  ? 0\n                  : xScale(metricName);\n\n                const yScaleMetricName = isNaN(yScales[metricName](value))\n                  ? 0\n                  : yScales[metricName](value);\n\n                if (value) {\n                  return (\n                    <line\n                      className={classnames('line', {\n                        'line--hovered':\n                          hoveredMetricLabel === metricName ||\n                          (highlightedValue && highlightedValue === value),\n                        'line--faded':\n                          (hoveredMetricLabel &&\n                            hoveredMetricLabel !== metricName) ||\n                          (highlightedValue && highlightedValue !== value),\n                      })}\n                      key={uuidv4()}\n                      x1={xScaleMetricName}\n                      x2={xScaleMetricName - 4}\n                      y1={yScaleMetricName}\n                      y2={yScaleMetricName}\n                    />\n                  );\n                } else {\n                  return null;\n                }\n              })}\n            </g>\n          );\n        })}\n\n        <g className=\"selected-runs\">\n          {selectedData.map(([id, value], i) => (\n            <path\n              className={classnames({\n                'run-line--selected-first': i === 0,\n                'run-line--selected-second': i === 1,\n                'run-line--selected-third': i === 2,\n              })}\n              d={linePath(value, i)}\n              id={id}\n              key={id}\n            />\n          ))}\n\n          {selectedData.map(([, values], i) =>\n            values.map((value, index) => {\n              const transformX = xScale(graphKeys[index]);\n              const transformY = yScales[graphKeys[index]](value);\n              const rotate = selectedMarkerRotate[i];\n              const xScaleGraphKey = isNaN(xScale(graphKeys[index]))\n                ? 0\n                : xScale(graphKeys[index]);\n\n              const yScaleGraphKey = isNaN(yScales[graphKeys[index]](value))\n                ? 0\n                : yScales[graphKeys[index]](value);\n\n              return (\n                <React.Fragment key={uuidv4()}>\n                  <path\n                    d={`${d3.symbol(selectedMarkerShape[i], 20)()}`}\n                    key={`marker-path--${index}`}\n                    stroke={selectedMarkerColors[i]}\n                    transform={`translate(${transformX}, ${transformY}) rotate(${rotate})`}\n                  />\n                  <text\n                    className=\"text\"\n                    key={`marker-text--${index}`}\n                    x={xScaleGraphKey - 8}\n                    y={yScaleGraphKey + 3}\n                    style={{\n                      textAnchor: 'end',\n                      transform: 'translate(-10,4)',\n                    }}\n                  >\n                    {value?.toFixed(3)}\n                  </text>\n                </React.Fragment>\n              );\n            })\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { TimeSeries } from '../time-series/time-series.js';\n\nimport { ParallelCoordinates } from '../parallel-coordinates/parallel-coordinates.js';\nimport { GET_METRIC_PLOT_DATA } from '../../../apollo/queries';\nimport { useApolloQuery } from '../../../apollo/utils';\n\nimport { metricLimit } from '../../../config';\n\nimport './metrics-plots.css';\n\nconst tabLabels = ['Time-series', 'Parallel coordinates'];\n\nconst MetricsPlots = ({ selectedRunIds }) => {\n  const [activeTab, setActiveTab] = useState(tabLabels[0]);\n  const [chartHeight, setChartHeight] = useState(0);\n  const [parCoordsWidth, setParCoordsWidth] = useState(0);\n  const [timeSeriesWidth, setTimeSeriesWidth] = useState(0);\n  const [containerWidth, setContainerWidth] = useState('auto');\n\n  const { data: { runMetricsData = [] } = [] } = useApolloQuery(\n    GET_METRIC_PLOT_DATA,\n    {\n      variables: { limit: metricLimit },\n    }\n  );\n\n  useEffect(() => {\n    if (runMetricsData?.data) {\n      const numberOfMetrics = Object.keys(runMetricsData?.data.metrics).length;\n\n      if (numberOfMetrics > 5 && activeTab === tabLabels[1]) {\n        setContainerWidth(numberOfMetrics * 200);\n        setParCoordsWidth(numberOfMetrics * 200);\n      } else {\n        setContainerWidth('auto');\n        setParCoordsWidth(\n          document.querySelector('.metrics-plots-wrapper__charts').clientWidth\n        );\n      }\n    }\n  }, [activeTab, runMetricsData]);\n\n  useEffect(() => {\n    setTimeSeriesWidth(\n      document.querySelector('.metrics-plots-wrapper__charts').clientWidth\n    );\n    setChartHeight(\n      document.querySelector('.metrics-plots-wrapper__charts').clientHeight\n    );\n  }, []);\n\n  return (\n    <div className=\"metrics-plots-wrapper\">\n      <div className=\"kedro chart-types-wrapper\">\n        {tabLabels.map((tab) => {\n          return (\n            <div\n              className={classnames('chart-types-wrapper__tab', {\n                'chart-types-wrapper__tab--active': activeTab === tab,\n              })}\n              key={tab}\n              onClick={() => setActiveTab(tab)}\n            >\n              {tab}\n            </div>\n          );\n        })}\n      </div>\n      <div\n        className=\"metrics-plots-wrapper__charts\"\n        style={{ width: containerWidth }}\n      >\n        {runMetricsData?.data ? (\n          activeTab === tabLabels[0] ? (\n            <TimeSeries\n              chartWidth={timeSeriesWidth - 100}\n              metricsData={runMetricsData?.data}\n              selectedRuns={selectedRunIds}\n            />\n          ) : (\n            <ParallelCoordinates\n              chartHeight={chartHeight}\n              chartWidth={parCoordsWidth}\n              metricsData={runMetricsData?.data}\n              selectedRuns={selectedRunIds}\n            />\n          )\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default MetricsPlots;\n","import MetricsPlots from './metrics-plots';\n\nexport default MetricsPlots;\n","import React from 'react';\n\nexport const paths = {\n  upArrow:\n    'm10 4.167 4.583 4.583-1.146 1.146-2.604-2.604v9.375H9.167V7.292L6.563 9.896 5.417 8.75z',\n  downArrow:\n    'M10 15.833 5.417 11.25l1.145-1.146 2.605 2.604V3.333h1.666v9.375l2.604-2.604 1.146 1.146z',\n};\n\nconst PinArrowIcon = ({ className, icon }) => {\n  return paths[icon] ? (\n    <svg className=\"dataset-arrow-icon\" viewBox=\"0 0 24 24\">\n      <path d={paths[icon]} />\n    </svg>\n  ) : null;\n};\n\nexport default PinArrowIcon;\n","/**\n * Take a value and return a meaningful value for display on experiment tracking tables\n * @param {value} value The value to be sanitized\n * @returns A sanitized value\n */\nexport const sanitizeValue = (value) => {\n  if (value === '' || value === null || value === undefined) {\n    return '-';\n  } else if (typeof value === 'object' || typeof value === 'boolean') {\n    return JSON.stringify(value);\n  }\n\n  return value;\n};\n\n/**\n * Takes a set of run metadata and run tracking data to construct the array object for csv export\n * @param {Array} runMetadata The set of runMetadata\n * @param {Array} runTrackingData The set of runTrackingData\n * @returns An array formatted for CSV export\n */\nexport const constructExportData = (runMetadata, runTrackingData) => {\n  let csvData = [];\n\n  if (runMetadata && runTrackingData) {\n    // Obtain runMetadata\n    const runTitle = runMetadata?.map((run) => sanitizeValue(run.title));\n    const createdBy = runMetadata?.map((run) => sanitizeValue(run.author));\n    const gitSha = runMetadata?.map((run) => sanitizeValue(run.gitSha));\n    const gitBranch = runMetadata?.map((run) => sanitizeValue(run.gitBranch));\n    const runCommand = runMetadata?.map((run) => sanitizeValue(run.runCommand));\n    const notes = runMetadata?.map((run) => sanitizeValue(run.notes));\n\n    csvData.push(\n      ['Title', ...runTitle],\n      ['Created By', ...createdBy],\n      ['Git SHA', ...gitSha],\n      ['Git Branch', ...gitBranch],\n      ['Run Command', ...runCommand],\n      ['Notes', ...notes]\n    );\n\n    // Create empty line between metadata fields and tracking data fields.\n    csvData.push([]);\n\n    buildCSVRows('Metrics');\n    buildCSVRows('JSON Data');\n\n    function buildCSVRows(section) {\n      runTrackingData[section].forEach((trackingDataset) => {\n        const { datasetName, data } = trackingDataset;\n        const dataKeyNames = Object.keys(data).sort((a, b) => {\n          return a.localeCompare(b);\n        });\n\n        csvData.push([datasetName]);\n\n        dataKeyNames.forEach((key) => {\n          let keyData = [key];\n\n          data[key].forEach((dataField) => keyData.push(dataField.value));\n          csvData.push(keyData);\n        });\n\n        csvData.push([]);\n      });\n    }\n  }\n\n  return csvData;\n};\n\n/**\n * Take a the runMetadata list to generate a meaningful file name for csv export\n * @param {Array} runMetadata The set of runMetadata to be exported\n * @returns A string to be used as the file name\n */\nexport const generateCSVFileName = (runMetadata) => {\n  let filename = 'rundata';\n\n  runMetadata?.forEach((run) => (filename += `-${run.id}`));\n  filename += '.csv';\n\n  return filename;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport Accordion from '../accordion';\nimport PinArrowIcon from '../../icons/pin-arrow';\nimport PlotlyChart from '../../plotly-chart';\nimport { sanitizeValue } from '../../../utils/experiment-tracking-utils';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { DataSetLoader } from './run-dataset-loader';\n\nimport getShortType from '../../../utils/short-type';\nimport './run-dataset.css';\nimport '../run-metadata/animation.css';\n\nconst determinePinIcon = (data, pinValue, pinnedRun) => {\n  if (data.runId !== pinnedRun && typeof data.value === 'number') {\n    if (data.value > pinValue) {\n      return 'upArrow';\n    }\n    if (data.value < pinValue) {\n      return 'downArrow';\n    }\n  }\n  return null;\n};\n\nconst resolveRunDataWithPin = (runData, pinnedRun) => {\n  const pinValue = runData.filter((data) => data.runId === pinnedRun)[0]?.value;\n\n  if (typeof pinValue === 'number') {\n    return runData.map((data) => ({\n      pinIcon: determinePinIcon(data, pinValue, pinnedRun),\n      ...data,\n    }));\n  }\n\n  return runData;\n};\n\n/**\n * Display the dataset of the experiment tracking run.\n * @param {String} props.activeTab The selected tab (Overview || Plots).\n * @param {Boolean} enableComparisonView Whether or not the enableComparisonView is on.\n * @param {Boolean} props.enableShowChanges Are changes enabled or not.\n * @param {Boolean} props.isSingleRun Indication to display a single run.\n * @param {String} props.pinnedRun ID of the pinned run.\n * @param {Boolean} props.showLoader Whether to show the loading component.\n * @param {Object} props.trackingData The experiment tracking run data.\n * @param {String} props.theme The currently-selected light or dark theme.\n */\nconst RunDataset = ({\n  activeTab,\n  enableComparisonView,\n  enableShowChanges,\n  isSingleRun,\n  pinnedRun,\n  setRunDatasetToShow,\n  setShowRunPlotsModal,\n  showLoader,\n  trackingData,\n  theme,\n}) => {\n  if (!trackingData) {\n    return null;\n  }\n\n  // console.log('trackingData: ', trackingData);\n\n  return (\n    <div\n      className={classnames('details-dataset', {\n        'details-dataset--not-overview': activeTab !== 'Overview',\n      })}\n    >\n      {Object.keys(trackingData)\n        .filter((group) => {\n          if (activeTab === 'Plots' && group === activeTab) {\n            return true;\n          }\n\n          if (activeTab !== 'Plots' && group !== 'Plots') {\n            return true;\n          }\n\n          return false;\n        })\n        .map((group) => {\n          return (\n            <Accordion\n              className={classnames(\n                'details-dataset__accordion',\n                'details-dataset__accordion-wrapper',\n                {\n                  'details-dataset__accordion-wrapper-comparison-view':\n                    enableComparisonView,\n                }\n              )}\n              heading={group}\n              headingClassName={classnames(\n                'details-dataset__accordion-header',\n                {\n                  'details-dataset__accordion-header--hidden':\n                    group === 'Plots',\n                }\n              )}\n              key={group}\n              layout=\"left\"\n              size=\"large\"\n            >\n              {trackingData[group].length === 0 && (\n                <div className=\"details-dataset__row\">\n                  <span\n                    className=\"details-dataset__name-header\"\n                    style={{\n                      visibility: enableComparisonView ? 'hidden' : 'visible',\n                    }}\n                  >\n                    No data to display. Try selecting a different run.\n                  </span>\n                  <TransitionGroup\n                    component=\"div\"\n                    className=\"details-dataset__tranistion-group-wrapper\"\n                  >\n                    <CSSTransition\n                      timeout={300}\n                      classNames=\"details-dataset__value-animation\"\n                      enter={isSingleRun ? false : true}\n                      exit={isSingleRun ? false : true}\n                    >\n                      <span\n                        className={classnames('details-dataset__value-header', {\n                          'details-dataset__value-header--comparison-view':\n                            enableComparisonView,\n                        })}\n                        style={{\n                          display: enableComparisonView ? 'block' : 'none',\n                        }}\n                      >\n                        No data to display. Try selecting a different run.\n                      </span>\n                    </CSSTransition>\n                  </TransitionGroup>\n                </div>\n              )}\n              {trackingData[group].map((dataset) => {\n                const { data, datasetType, datasetName, runIds } = dataset;\n\n                return (\n                  <Accordion\n                    className=\"details-dataset__accordion\"\n                    heading={datasetName}\n                    headingClassName=\"details-dataset__accordion-header\"\n                    key={datasetName}\n                    layout=\"left\"\n                    size=\"medium\"\n                  >\n                    {Object.keys(data)\n                      .sort((a, b) => {\n                        return a.localeCompare(b);\n                      })\n                      .map((key, rowIndex) => {\n                        const updatedDatasetValues = fillEmptyMetrics(\n                          dataset.data[key],\n                          runIds\n                        );\n                        const runDataWithPin = resolveRunDataWithPin(\n                          updatedDatasetValues,\n                          pinnedRun\n                        );\n\n                        return buildDatasetDataMarkup(\n                          key,\n                          runDataWithPin,\n                          datasetType,\n                          rowIndex,\n                          isSingleRun,\n                          enableComparisonView,\n                          enableShowChanges,\n                          setRunDatasetToShow,\n                          setShowRunPlotsModal,\n                          showLoader,\n                          theme\n                        );\n                      })}\n                  </Accordion>\n                );\n              })}\n            </Accordion>\n          );\n        })}\n    </div>\n  );\n};\n\n/**\n * Build the necessary markup used to display the run dataset.\n * @param {String} datasetKey The row label of the data.\n * @param {Array} datasetValues A single dataset array from a run.\n * @param {Number} rowIndex The array index of the dataset data.\n * @param {Boolean} isSingleRun Whether or not this is a single run.\n * @param {Boolean} enableShowChanges Are changes enabled or not.\n * @param {Boolean} enableComparisonView Whether or not the enableComparisonView is on.\n * @param {Function} setRunDatasetToShow Callback function to show runDataset.\n * @param {Function} setShowRunPlotsModal Callback function to show RunPlot modal.\n */\nfunction buildDatasetDataMarkup(\n  datasetKey,\n  datasetValues,\n  datasetType,\n  rowIndex,\n  isSingleRun,\n  enableComparisonView,\n  enableShowChanges,\n  setRunDatasetToShow,\n  setShowRunPlotsModal,\n  showLoader,\n  theme\n) {\n  const isPlotlyDataset = getShortType(datasetType) === 'plotly';\n  const isImageDataset = getShortType(datasetType) === 'image';\n  const isTrackingDataset = getShortType(datasetType) === 'tracking';\n\n  const onExpandVizClick = () => {\n    setShowRunPlotsModal(true);\n    setRunDatasetToShow({ datasetKey, datasetType, datasetValues });\n  };\n\n  return (\n    <React.Fragment key={datasetKey + rowIndex}>\n      {rowIndex === 0 ? (\n        <div className=\"details-dataset__row\">\n          <span className=\"details-dataset__name-header\">Name</span>\n          <TransitionGroup\n            component=\"div\"\n            className=\"details-dataset__tranistion-group-wrapper\"\n          >\n            {datasetValues.map((data, index) => (\n              <CSSTransition\n                key={data.runId}\n                timeout={300}\n                classNames=\"details-dataset__value-animation\"\n                enter={isSingleRun ? false : true}\n                exit={isSingleRun ? false : true}\n              >\n                <span\n                  className={classnames('details-dataset__value-header', {\n                    'details-dataset__value-header--comparison-view':\n                      index === 0 && enableComparisonView,\n                  })}\n                >\n                  Value\n                </span>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n          {showLoader && (\n            <DataSetLoader\n              length={datasetValues.length}\n              theme={theme}\n              x={0}\n              y={12}\n            />\n          )}\n        </div>\n      ) : null}\n      <div className=\"details-dataset__row\">\n        <span className={'details-dataset__label'}>{datasetKey}</span>\n        <TransitionGroup\n          component=\"div\"\n          className=\"details-dataset__tranistion-group-wrapper\"\n        >\n          {datasetValues.map((run, index) => {\n            const isSinglePinnedRun = datasetValues.length === 1;\n            return (\n              <CSSTransition\n                key={run.runId}\n                timeout={300}\n                classNames=\"details-dataset__value-animation\"\n                enter={isSinglePinnedRun ? false : true}\n                exit={isSinglePinnedRun ? false : true}\n              >\n                <span\n                  className={classnames('details-dataset__value', {\n                    'details-dataset__value--comparison-view':\n                      index === 0 && enableComparisonView,\n                  })}\n                >\n                  {isTrackingDataset && (\n                    <>\n                      {sanitizeValue(run?.value)}\n                      {enableShowChanges && <PinArrowIcon icon={run.pinIcon} />}\n                    </>\n                  )}\n\n                  {isPlotlyDataset &&\n                    (run.value ? (\n                      <div\n                        className=\"details-dataset__visualization-wrapper\"\n                        onClick={onExpandVizClick}\n                      >\n                        <PlotlyChart\n                          data={run.value.data}\n                          layout={run.value.layout}\n                          view=\"experiment_preview\"\n                        />\n                      </div>\n                    ) : (\n                      fillEmptyPlots()\n                    ))}\n\n                  {isImageDataset &&\n                    (run.value ? (\n                      <div\n                        className=\"details-dataset__image-container\"\n                        onClick={onExpandVizClick}\n                      >\n                        <img\n                          alt=\"Matplotlib rendering\"\n                          className=\"details-dataset__image\"\n                          src={`data:image/png;base64,${run.value}`}\n                        />\n                      </div>\n                    ) : (\n                      fillEmptyPlots()\n                    ))}\n                </span>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n        {showLoader && (\n          <DataSetLoader\n            length={datasetValues.length}\n            theme={theme}\n            x={0}\n            y={12}\n          />\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\n/**\n * Fill in missing run metrics if they don't match the number of runIds.\n * @param {Array} datasetValues Array of objects for a metric, e.g. r2_score.\n * @param {Array} runIds Array of strings of runIds.\n * @returns Array of objects, the length of which matches the length\n * of the runIds.\n */\nfunction fillEmptyMetrics(datasetValues, runIds) {\n  if (datasetValues.length === runIds.length) {\n    return datasetValues;\n  }\n\n  const metrics = [];\n\n  runIds.forEach((id) => {\n    const foundIdIndex = datasetValues.findIndex((item) => {\n      return item.runId === id;\n    });\n\n    // We didn't find a metric with this runId, so add a placeholder.\n    if (foundIdIndex === -1) {\n      metrics.push({ runId: id, value: null });\n    } else {\n      metrics.push(datasetValues[foundIdIndex]);\n    }\n  });\n\n  return metrics;\n}\n\nfunction fillEmptyPlots() {\n  return <div className=\"details-dataset__empty-plot\">No plot available</div>;\n}\n\nexport default RunDataset;\n","import RunDataset from './run-dataset';\n\nexport default RunDataset;\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\n\nimport './input.css';\n\nconst MIN_HEIGHT = 20;\n\nconst Input = ({\n  characterLimit = false,\n  defaultValue = '',\n  onChange,\n  placeholder,\n  resetValueTrigger,\n  size = 'large',\n}) => {\n  const isLimitSet = characterLimit > 0;\n  const ref = useRef(null);\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue]);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue, resetValueTrigger]);\n\n  useLayoutEffect(() => {\n    ref.current.style.height = 'inherit';\n\n    ref.current.style.height = `${Math.max(\n      ref.current.scrollHeight,\n      MIN_HEIGHT\n    )}px`;\n  }, [value]);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n\n    if (isLimitSet) {\n      setValue(value.slice(0, characterLimit));\n      onChange && onChange(value.slice(0, characterLimit));\n    } else {\n      setValue(value.slice(0));\n      onChange && onChange(value.slice(0));\n    }\n  };\n\n  return (\n    <>\n      <textarea\n        className={`input input--${size}`}\n        onChange={handleChange}\n        placeholder={placeholder}\n        ref={ref}\n        rows={1}\n        value={value}\n      />\n      {isLimitSet ? (\n        <div className=\"input-character-count\">\n          <span>\n            <span className=\"input-number-characters\">{value.length}</span>/\n            {characterLimit} characters\n          </span>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Input;\n","import RunDetailsModal from './run-details-modal';\n\nexport default RunDetailsModal;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useUpdateRunDetails } from '../../../apollo/mutations';\n\nimport { ButtonTimeoutContext } from '../../../utils/button-timeout-context';\n\nimport Button from '../../ui/button';\nimport Modal from '../../ui/modal';\nimport Input from '../../ui/input';\n\nimport '../../settings-modal/settings-modal.css';\nimport './run-details-modal.css';\n\nconst RunDetailsModal = ({\n  runMetadataToEdit,\n  setShowRunDetailsModal,\n  theme,\n  visible,\n}) => {\n  const [valuesToUpdate, setValuesToUpdate] = useState({});\n  const { updateRunDetails, error, reset } = useUpdateRunDetails();\n  const {\n    handleClick,\n    hasNotInteracted,\n    isSuccessful,\n    setHasNotInteracted,\n    setIsSuccessful,\n    showModal,\n  } = useContext(ButtonTimeoutContext);\n\n  const onApplyChanges = () => {\n    updateRunDetails({\n      runId: runMetadataToEdit.id,\n      runInput: { notes: valuesToUpdate.notes, title: valuesToUpdate.title },\n    });\n\n    handleClick();\n\n    if (!error) {\n      setIsSuccessful(true);\n    }\n  };\n\n  const onChange = (key, value) => {\n    setValuesToUpdate(\n      Object.assign({}, valuesToUpdate, {\n        [key]: value,\n      })\n    );\n    setHasNotInteracted(false);\n  };\n\n  // only if the component is visible first, then apply isSuccessful to show or hide modal\n  useEffect(() => {\n    if (visible && isSuccessful) {\n      setShowRunDetailsModal(showModal);\n    }\n  }, [showModal, setShowRunDetailsModal, isSuccessful, visible]);\n\n  useEffect(() => {\n    setValuesToUpdate({\n      notes: runMetadataToEdit?.notes,\n      title: runMetadataToEdit?.title,\n    });\n  }, [runMetadataToEdit]);\n\n  useEffect(() => {\n    /**\n     * If there's a GraphQL error when trying to update the title/notes,\n     * reset the mutation when the modal closes so the error doesn't appear\n     * the next time the modal opens.\n     */\n    reset();\n  }, [runMetadataToEdit, visible, setHasNotInteracted, reset]);\n\n  return (\n    <div className=\"pipeline-settings-modal pipeline-settings-modal--experiment-tracking\">\n      <Modal\n        closeModal={() => setShowRunDetailsModal(false)}\n        theme={theme}\n        title=\"Edit run details\"\n        visible={visible}\n      >\n        <div className=\"pipeline-settings-modal__content pipeline-settings-modal__content--short\">\n          <div className=\"pipeline-settings-modal__header\">\n            <div className=\"pipeline-settings-modal__name\">Run name</div>\n          </div>\n          <Input\n            defaultValue={runMetadataToEdit?.title}\n            onChange={(value) => onChange('title', value)}\n            resetValueTrigger={visible}\n            size=\"large\"\n          />\n        </div>\n        <div className=\"pipeline-settings-modal__content pipeline-settings-modal__content--short\">\n          <div className=\"pipeline-settings-modal__header\">\n            <div className=\"pipeline-settings-modal__name\">Notes</div>\n          </div>\n          <Input\n            characterLimit={500}\n            defaultValue={runMetadataToEdit?.notes || ''}\n            onChange={(value) => onChange('notes', value)}\n            placeholder=\"Add here\"\n            resetValueTrigger={visible}\n            size=\"small\"\n          />\n        </div>\n        <div className=\"run-details-modal-button-wrapper\">\n          <Button\n            mode=\"secondary\"\n            onClick={() => setShowRunDetailsModal(false)}\n            size=\"small\"\n          >\n            Cancel\n          </Button>\n          <Button\n            disabled={hasNotInteracted}\n            onClick={onApplyChanges}\n            mode={isSuccessful ? 'success' : 'primary'}\n            size=\"small\"\n          >\n            {isSuccessful ? (\n              <>\n                Changes applied <span className=\"success-check-mark\">✅</span>\n              </>\n            ) : (\n              'Apply changes and close'\n            )}\n          </Button>\n        </div>\n        {error ? (\n          <div className=\"run-details-modal-error-wrapper\">\n            <p>Couldn't update run details. Please try again later.</p>\n          </div>\n        ) : null}\n      </Modal>\n    </div>\n  );\n};\n\nexport default RunDetailsModal;\n","import RunExportModal from './run-export-modal';\n\nexport default RunExportModal;\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { CSVLink } from 'react-csv';\n\nimport { constructExportData } from '../../../utils/experiment-tracking-utils';\nimport { ButtonTimeoutContext } from '../../../utils/button-timeout-context';\n\nimport Button from '../../ui/button';\nimport Modal from '../../ui/modal';\n\nimport './run-export-modal.css';\n\nconst RunExportModal = ({\n  runMetadata,\n  runTrackingData,\n  setShowRunExportModal,\n  theme,\n  visible,\n}) => {\n  const [exportData, setExportData] = useState([]);\n  const { isSuccessful, showModal, handleClick } =\n    useContext(ButtonTimeoutContext);\n\n  const updateExportData = useCallback(() => {\n    setExportData(constructExportData(runMetadata, runTrackingData));\n    handleClick();\n  }, [runMetadata, runTrackingData, handleClick]);\n\n  // only if the component is visible first, then apply isSuccessful to show or hide modal\n  useEffect(() => {\n    if (visible && isSuccessful) {\n      setShowRunExportModal(showModal);\n    }\n  }, [showModal, setShowRunExportModal, isSuccessful, visible]);\n\n  return (\n    <div className=\"pipeline-run-export-modal pipeline-run-export-modal--experiment-tracking\">\n      <Modal\n        closeModal={() => setShowRunExportModal(false)}\n        theme={theme}\n        title=\"Export experiment run\"\n        visible={visible}\n      >\n        <div className=\"run-export-modal-button-wrapper\">\n          <Button\n            mode=\"secondary\"\n            onClick={() => setShowRunExportModal(false)}\n            size=\"small\"\n          >\n            Cancel\n          </Button>\n          <CSVLink\n            asyncOnClick={true}\n            className={\n              isSuccessful\n                ? 'run-export-modal-export-button--success'\n                : 'run-export-modal-export-button'\n            }\n            data={exportData}\n            filename=\"run-data.csv\"\n            onClick={updateExportData}\n          >\n            <Button mode={isSuccessful ? 'success' : 'primary'} size=\"small\">\n              {isSuccessful ? (\n                <>\n                  Done <span className=\"success-check-mark\">✅</span>\n                </>\n              ) : (\n                'Export all and close'\n              )}\n            </Button>\n          </CSVLink>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RunExportModal;\n","import React from 'react';\n\nconst KebabIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 16a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0-6a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm0-6a2 2 0 1 1 0 4 2 2 0 0 1 0-4z\" />\n  </svg>\n);\n\nexport default KebabIcon;\n","import React from 'react';\n\nconst SelectedPinIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 4a8 8 0 1 1 0 16 8 8 0 0 1 0-16zm0 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8z\" />\n  </svg>\n);\n\nexport default SelectedPinIcon;\n","import React from 'react';\n\nconst UnSelectedPinIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 24 24\">\n    <path d=\"M12 4a8 8 0 1 1 0 16 8 8 0 0 1 0-16zm0 2a6 6 0 1 0 0 12 6 6 0 0 0 0-12zm0 4a2 2 0 1 1 0 4 2 2 0 0 1 0-4z\" />\n  </svg>\n);\n\nexport default UnSelectedPinIcon;\n","import React, { useCallback, useState } from 'react';\nimport classnames from 'classnames';\nimport { useOutsideClick } from '../../../utils/hooks';\nimport { useUpdateRunDetails } from '../../../apollo/mutations';\nimport { toHumanReadableTime } from '../../../utils/date-utils';\nimport CloseIcon from '../../icons/close';\nimport IconButton from '../../ui/icon-button';\nimport KebabIcon from '../../icons/kebab';\nimport SelectedPin from '../../icons/selected-pin';\nimport UnSelectedPin from '../../icons/un-selected-pin';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { MetaDataLoader } from './run-metadata-loader';\n\nimport './run-metadata.css';\nimport './animation.css';\n\n// Return a '-' character if the value is empty or null\nconst sanitiseEmptyValue = (value) => {\n  return value === '' || value === null ? '-' : value;\n};\n\nconst HiddenMenu = ({ isBookmarked, runId }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const { updateRunDetails } = useUpdateRunDetails();\n\n  const handleClickOutside = useCallback(() => {\n    setIsVisible(false);\n  }, []);\n\n  const menuRef = useOutsideClick(handleClickOutside);\n\n  const toggleBookmark = () => {\n    updateRunDetails({\n      runId,\n      runInput: { bookmark: !isBookmarked },\n    });\n\n    // Close the menu when the bookmark is toggled.\n    setIsVisible(false);\n  };\n\n  return (\n    <div\n      className=\"hidden-menu-wrapper\"\n      onClick={() => setIsVisible(!isVisible)}\n      ref={menuRef}\n    >\n      <div\n        className={classnames('hidden-menu', {\n          'hidden-menu--visible': isVisible,\n        })}\n      >\n        <div\n          className=\"hidden-menu__item\"\n          onClick={(e) => {\n            toggleBookmark();\n            e.stopPropagation();\n          }}\n        >\n          {isBookmarked ? 'Unbookmark' : 'Bookmark'}\n        </div>\n      </div>\n      <IconButton\n        active={isVisible}\n        ariaLabel=\"Runs menu\"\n        className=\"pipeline-menu-button--labels\"\n        icon={KebabIcon}\n      />\n    </div>\n  );\n};\n\nconst RunMetadata = ({\n  activeTab,\n  enableComparisonView,\n  enableShowChanges = false,\n  isSingleRun,\n  onRunSelection,\n  pinnedRun,\n  runs = [],\n  setPinnedRun,\n  setRunMetadataToEdit,\n  setShowRunDetailsModal,\n  showLoader,\n  theme,\n}) => {\n  let initialState = {};\n  for (let i = 0; i < runs.length; i++) {\n    initialState[i] = false;\n  }\n\n  const [toggleNotes, setToggleNotes] = useState(initialState);\n\n  const onToggleNoteExpand = (index) => {\n    setToggleNotes({ ...toggleNotes, [index]: !toggleNotes[index] });\n  };\n\n  const onTitleOrNoteClick = (id) => {\n    const metadata = runs.find((run) => run.id === id);\n\n    setRunMetadataToEdit(metadata);\n    setShowRunDetailsModal(true);\n  };\n\n  return (\n    <div\n      className={classnames('details-metadata', {\n        'details-metadata--not-overview': activeTab !== 'Overview',\n      })}\n    >\n      <table\n        className={classnames('details-metadata__table', {\n          'details-metadata__table-comparison-view': enableComparisonView,\n        })}\n      >\n        {runs.map((run, i) => (\n          <React.Fragment key={run.id + i}>\n            {i === 0 ? (\n              <tbody>\n                <tr\n                  className={classnames(\n                    'details-metadata__run',\n                    'details-metadata__labels',\n                    {\n                      'details-metadata__labels-comparison-view':\n                        enableComparisonView,\n                    }\n                  )}\n                >\n                  <td className=\"details-metadata__title\">\n                    <span\n                      className=\"details-metadata__title-detail\"\n                      onClick={() => onTitleOrNoteClick(run.id)}\n                      title={sanitiseEmptyValue(run.title)}\n                    >\n                      {sanitiseEmptyValue(run.title)}\n                    </span>\n                  </td>\n                  {activeTab !== 'Plots' ? (\n                    <>\n                      <td className=\"details-metadata__table-label\">\n                        Created By\n                      </td>\n                      <td className=\"details-metadata__table-label\">\n                        Creation Date\n                      </td>\n                      <td className=\"details-metadata__table-label\">Git SHA</td>\n                      <td className=\"details-metadata__table-label\">\n                        Git Branch\n                      </td>\n                      <td className=\"details-metadata__table-label\">\n                        Run Command\n                      </td>\n                      <td className=\"details-metadata__table-label\">Notes</td>\n                    </>\n                  ) : null}\n                </tr>\n              </tbody>\n            ) : null}\n          </React.Fragment>\n        ))}\n        <TransitionGroup\n          className=\"details-metadata__run--wrapper\"\n          component={'tbody'}\n        >\n          {runs.map((run, i) => {\n            const humanReadableTime = toHumanReadableTime(run.id);\n\n            return (\n              <CSSTransition\n                classNames={'details-metadata__run-animation'}\n                enter={isSingleRun ? false : true}\n                exit={isSingleRun ? false : true}\n                key={run.id}\n                timeout={300}\n              >\n                <tr\n                  className={classnames('details-metadata__run', {\n                    'details-metadata__run--first-run': i === 0,\n                    'details-metadata__run--first-run-comparison-view':\n                      i === 0 && enableComparisonView,\n                  })}\n                >\n                  <td className=\"details-metadata__title\">\n                    <div\n                      className={classnames('details-metadata__indicator', {\n                        'details-metadata__indicator--selected-first': i === 0,\n                        'details-metadata__indicator--selected-second': i === 1,\n                        'details-metadata__indicator--selected-third': i === 2,\n                      })}\n                    ></div>\n                    <span\n                      className=\"details-metadata__title-detail\"\n                      onClick={() => onTitleOrNoteClick(run.id)}\n                      title={sanitiseEmptyValue(run.title)}\n                    >\n                      {sanitiseEmptyValue(run.title)}\n                    </span>\n                    <ul className=\"details-metadata__buttons\">\n                      {!isSingleRun ? (\n                        <>\n                          <IconButton\n                            active={run.id === pinnedRun}\n                            ariaLive=\"polite\"\n                            className={classnames(\n                              'pipeline-menu-button--labels',\n                              'pipeline-menu-button__pin',\n                              {\n                                'details-metadata__buttons--selected-pin':\n                                  run.id === pinnedRun,\n                              }\n                            )}\n                            icon={\n                              run.id === pinnedRun ? SelectedPin : UnSelectedPin\n                            }\n                            labelText={\n                              run.id === pinnedRun\n                                ? 'Baseline'\n                                : 'Make baseline'\n                            }\n                            labelTextPosition=\"bottom\"\n                            onClick={() => setPinnedRun(run.id)}\n                            visible={enableShowChanges}\n                          />\n                          <IconButton\n                            ariaLive=\"polite\"\n                            className=\"pipeline-menu-button--labels__close\"\n                            icon={CloseIcon}\n                            labelText=\"Remove run\"\n                            labelTextPosition=\"bottom\"\n                            onClick={() => onRunSelection(run.id)}\n                          />\n                        </>\n                      ) : null}\n                      <HiddenMenu isBookmarked={run.bookmark} runId={run.id} />\n                    </ul>\n                  </td>\n                  {activeTab !== 'Plots' ? (\n                    <>\n                      <td className=\"details-metadata__table-value\">\n                        {sanitiseEmptyValue(run.author)}\n                      </td>\n                      <td className=\"details-metadata__table-value\">{`${humanReadableTime} (${sanitiseEmptyValue(\n                        run.id\n                      )})`}</td>\n                      <td className=\"details-metadata__table-value\">\n                        {sanitiseEmptyValue(run.gitSha)}\n                      </td>\n                      <td className=\"details-metadata__table-value\">\n                        {sanitiseEmptyValue(run.gitBranch)}\n                      </td>\n                      <td className=\"details-metadata__table-value\">\n                        {sanitiseEmptyValue(run.runCommand)}\n                      </td>\n                      <td className=\"details-metadata__table-value\">\n                        <p\n                          className={classnames(\n                            'details-metadata__notes',\n                            'details-metadata__table-label'\n                          )}\n                          onClick={() => onTitleOrNoteClick(run.id)}\n                          style={toggleNotes[i] ? { display: 'block' } : null}\n                        >\n                          {run.notes !== '' ? run.notes : '- Add notes here'}\n                        </p>\n                        {run.notes.length > 100 ? (\n                          <button\n                            className=\"details-metadata__show-more kedro\"\n                            onClick={() => onToggleNoteExpand(i)}\n                          >\n                            {toggleNotes[i] ? 'Show less' : 'Show more'}\n                          </button>\n                        ) : null}\n                      </td>\n                    </>\n                  ) : null}\n                </tr>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n        {showLoader && <MetaDataLoader length={runs.length} theme={theme} />}\n      </table>\n    </div>\n  );\n};\n\nexport default RunMetadata;\n","import RunMetadata from './run-metadata';\n\nexport default RunMetadata;\n","import React from 'react';\n\nconst BackWideIcon = ({ className }) => (\n  <svg className={className} viewBox=\"0 0 37 14\">\n    <path d=\"M7.31269 0.244326C7.70024 0.580197 7.76681 1.14874 7.48475 1.56241L7.41345 1.65495L3.83955 5.777L35.5236 5.71879C36.0759 5.71777 36.5244 6.16465 36.5254 6.71694C36.5264 7.22977 36.1411 7.65316 35.6439 7.71185L35.5273 7.71879L4.20355 7.777L7.42846 11.6765C7.75524 12.0718 7.72704 12.6435 7.38055 13.0049L7.29496 13.0844C6.89971 13.4112 6.32798 13.383 5.96656 13.0365L5.88706 12.9509L0.560547 6.5084L5.90207 0.345086C6.26378 -0.0722699 6.89533 -0.117382 7.31269 0.244326Z\" />\n  </svg>\n);\n\nexport default BackWideIcon;\n","import RunPlotsModal from './run-plots-modal';\n\nexport default RunPlotsModal;\n","import React, { useEffect } from 'react';\nimport PlotlyChart from '../../plotly-chart';\nimport BackWideIcon from '../../icons/back-wide';\nimport NodeIcon from '../../icons/node-icon';\nimport getShortType from '../../../utils/short-type';\nimport { toHumanReadableTime } from '../../../utils/date-utils';\nimport classNames from 'classnames';\nimport './run-plots-modal.css';\n\nconst RunPlotsModal = ({ runDatasetToShow, visible, setShowRunPlotsModal }) => {\n  const { datasetKey, datasetType, datasetValues } = runDatasetToShow;\n  const runDataWithPlotData = datasetValues?.filter(({ value }) => value);\n  const numDatasets = runDataWithPlotData?.length;\n  const plotView =\n    numDatasets === 3\n      ? 'threeCharts'\n      : numDatasets === 2\n      ? 'twoCharts'\n      : 'oneChart';\n  const isPlotly = getShortType(datasetType) === 'plotly';\n  const isImage = getShortType(datasetType) === 'image';\n  const nodeTypeIcon = getShortType(datasetType);\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      setShowRunPlotsModal(false);\n    }\n  };\n\n  useEffect(() => {\n    if (visible) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"pipeline-run-plots-modal\">\n      <div className=\"pipeline-run-plots-modal__top\">\n        <button\n          className=\"pipeline-run-plots-modal__back\"\n          onClick={() => setShowRunPlotsModal(false)}\n        >\n          <BackWideIcon className=\"pipeline-run-plots-modal__back-icon\"></BackWideIcon>\n          <span className=\"pipeline-run-plots-modal__back-text\">Back</span>\n        </button>\n        <div className=\"pipeline-run-plots-modal__header\">\n          <NodeIcon\n            className=\"pipeline-run-plots-modal__icon\"\n            icon={nodeTypeIcon}\n          />\n          <span className=\"pipeline-run-plots-modal__title\">{datasetKey}</span>\n        </div>\n      </div>\n      <div\n        className={classNames(\n          'pipeline-run-plots-modal__content',\n          `pipeline-run-plots-modal__content--${plotView}`,\n          {\n            'pipeline-run-plots-modal__content--plotly': isPlotly,\n          }\n        )}\n      >\n        {isPlotly &&\n          runDataWithPlotData.map((data) => {\n            return (\n              data.value && (\n                <div\n                  className={classNames(\n                    'pipeline-run-plots__plot-wrapper',\n                    `pipeline-run-plots__plot-wrapper--${plotView}`\n                  )}\n                  key={data.runId}\n                >\n                  <PlotlyChart\n                    data={data.value.data}\n                    layout={data.value.layout}\n                    view={plotView}\n                  />\n                  <div className=\"pipeline-run-plots-image-text\">\n                    <span className=\"pipeline-run-plots-image-text-timestamp\">\n                      {data.runId}\n                    </span>\n                    <span className=\"pipeline-run-plots-image-text-relative_timestamp\">\n                      {toHumanReadableTime(data.runId)}\n                    </span>\n                  </div>\n                </div>\n              )\n            );\n          })}\n        {isImage &&\n          runDataWithPlotData.map((data) => {\n            return (\n              <div\n                className={classNames(\n                  `pipeline-run-plots__image-wrapper`,\n                  `pipeline-run-plots__image-wrapper--${plotView}`\n                )}\n                key={data.runId}\n              >\n                <img\n                  alt=\"Matplotlib rendering\"\n                  className={classNames(\n                    `pipeline-run-plots__image--${plotView}`\n                  )}\n                  src={`data:image/png;base64,${data.value}`}\n                />\n                <div className=\"pipeline-run-plots-image-text\">\n                  <span className=\"pipeline-run-plots-image-text-timestamp\">\n                    {data.runId}\n                  </span>\n                  <span className=\"pipeline-run-plots-image-text-relative_timestamp\">\n                    {toHumanReadableTime(data.runId)}\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default RunPlotsModal;\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { ButtonTimeoutContextProvider } from '../../../utils/button-timeout-context';\nimport { SingleRunDatasetLoader } from '../run-dataset/run-dataset-loader';\nimport { SingleRunMetadataLoader } from '../run-metadata/run-metadata-loader';\nimport MetricsPlots from '../metrics-plots';\nimport RunDataset from '../run-dataset';\nimport RunDetailsModal from '../run-details-modal';\nimport RunExportModal from '../run-export-modal';\nimport RunMetadata from '../run-metadata';\nimport RunPlotsModal from '../run-plots-modal';\n\nimport './details.css';\n\nconst tabLabels = ['Overview', 'Metrics', 'Plots'];\n\nconst Details = ({\n  enableComparisonView,\n  enableShowChanges,\n  isRunDataLoading,\n  newRunAdded,\n  onRunSelection,\n  pinnedRun,\n  runDataError,\n  runMetadata,\n  runTrackingData,\n  selectedRunIds,\n  setIsDisplayingMetrics,\n  setPinnedRun,\n  setShowRunDetailsModal,\n  setShowRunExportModal,\n  setShowRunPlotsModal,\n  showRunDetailsModal,\n  showRunExportModal,\n  showRunPlotsModal,\n  sidebarVisible,\n  theme,\n}) => {\n  const [runMetadataToEdit, setRunMetadataToEdit] = useState(null);\n  const [runDatasetToShow, setRunDatasetToShow] = useState({});\n  const [showSingleRunLoader, setShowSingleRunLoader] = useState(false);\n  const [showRunLoader, setRunLoader] = useState(false);\n  const [activeTab, setActiveTab] = useState(tabLabels[0]);\n\n  // Delay showing loader for 0.2s so it has enough time to load the data first\n  useEffect(() => {\n    // For single run\n    if (isRunDataLoading && !enableComparisonView) {\n      const showSingleRunLoaderTimer = setTimeout(() => {\n        setShowSingleRunLoader(true);\n      }, 200);\n\n      return () => clearTimeout(showSingleRunLoaderTimer);\n    } else {\n      setShowSingleRunLoader(false);\n    }\n\n    // For multiple runs when the comparison mode is active\n    if (isRunDataLoading && newRunAdded) {\n      const showRunLoaderTimer = setTimeout(() => {\n        setRunLoader(true);\n      }, 200);\n\n      return () => clearTimeout(showRunLoaderTimer);\n    } else {\n      setRunLoader(false);\n    }\n  }, [isRunDataLoading, newRunAdded, enableComparisonView]);\n\n  useEffect(() => {\n    if (runMetadata && !enableComparisonView) {\n      const metadata = runMetadata.find((run) => run.id === selectedRunIds[0]);\n\n      setRunMetadataToEdit(metadata);\n    }\n  }, [enableComparisonView, runMetadata, selectedRunIds]);\n\n  useEffect(() => {\n    if (activeTab === 'Metrics') {\n      setIsDisplayingMetrics(true);\n    } else {\n      setIsDisplayingMetrics(false);\n    }\n  }, [activeTab, setIsDisplayingMetrics]);\n\n  const isSingleRun = runMetadata?.length === 1 ? true : false;\n\n  if (runDataError) {\n    return null;\n  }\n\n  if (showSingleRunLoader) {\n    return (\n      <div\n        className={classnames('kedro', 'details-mainframe', {\n          'details-mainframe--sidebar-visible': sidebarVisible,\n        })}\n      >\n        <SingleRunMetadataLoader theme={theme} />\n        <SingleRunDatasetLoader theme={theme} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <ButtonTimeoutContextProvider>\n        <RunDetailsModal\n          runMetadataToEdit={runMetadataToEdit}\n          runs={runMetadata}\n          setShowRunDetailsModal={setShowRunDetailsModal}\n          theme={theme}\n          visible={showRunDetailsModal}\n        />\n        <RunExportModal\n          runMetadata={runMetadata}\n          runTrackingData={runTrackingData}\n          setShowRunExportModal={setShowRunExportModal}\n          theme={theme}\n          visible={showRunExportModal}\n        />\n        <RunPlotsModal\n          runDatasetToShow={runDatasetToShow}\n          setShowRunPlotsModal={setShowRunPlotsModal}\n          theme={theme}\n          visible={showRunPlotsModal}\n        />\n      </ButtonTimeoutContextProvider>\n      <div\n        className={classnames('kedro', 'details-mainframe', {\n          'details-mainframe--sidebar-visible': sidebarVisible,\n        })}\n      >\n        <div className=\"details__tabs\">\n          {tabLabels.map((tab) => {\n            return (\n              <div\n                className={classnames('tabs__item', {\n                  'tabs__item--active': activeTab === tab,\n                })}\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n              >\n                {tab}\n              </div>\n            );\n          })}\n        </div>\n        {activeTab === 'Metrics' ? (\n          <MetricsPlots selectedRunIds={selectedRunIds} />\n        ) : (\n          <>\n            <RunMetadata\n              activeTab={activeTab}\n              enableComparisonView={enableComparisonView}\n              enableShowChanges={enableShowChanges}\n              isSingleRun={isSingleRun}\n              onRunSelection={onRunSelection}\n              pinnedRun={pinnedRun}\n              runs={runMetadata}\n              setPinnedRun={setPinnedRun}\n              setRunMetadataToEdit={setRunMetadataToEdit}\n              setShowRunDetailsModal={setShowRunDetailsModal}\n              showLoader={showRunLoader}\n              theme={theme}\n            />\n            <RunDataset\n              activeTab={activeTab}\n              enableComparisonView={enableComparisonView}\n              enableShowChanges={enableShowChanges}\n              isSingleRun={isSingleRun}\n              pinnedRun={pinnedRun}\n              runMetadata={runMetadata}\n              setRunDatasetToShow={setRunDatasetToShow}\n              setShowRunPlotsModal={setShowRunPlotsModal}\n              showLoader={showRunLoader}\n              trackingData={runTrackingData}\n              theme={theme}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Details;\n","import Details from './details';\n\nexport default Details;\n","import React, { useEffect, useState } from 'react';\nimport { Transition } from 'react-transition-group';\nimport { useApolloQuery } from '../../apollo/utils';\nimport { connect } from 'react-redux';\nimport { GET_RUNS, GET_RUN_DATA } from '../../apollo/queries';\nimport { NEW_RUN_SUBSCRIPTION } from '../../apollo/subscriptions';\nimport Button from '../ui/button';\nimport Details from '../experiment-tracking/details';\nimport Sidebar from '../sidebar';\nimport { HoverStateContextProvider } from '../experiment-tracking/utils/hover-state-context';\n\nimport './experiment-wrapper.css';\n\nconst MAX_NUMBER_COMPARISONS = 2; // 0-based, so three.\n\nconst defaultStyle = {\n  opacity: 0,\n  transition: `opacity .5s ease-in-out`,\n};\n\nconst transitionStyles = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 },\n};\n\nconst ExperimentWrapper = ({ theme }) => {\n  const [disableRunSelection, setDisableRunSelection] = useState(false);\n  const [enableComparisonView, setEnableComparisonView] = useState(false);\n  const [enableShowChanges, setEnableShowChanges] = useState(true);\n  const [isSidebarVisible, setIsSidebarVisible] = useState(true);\n  const [pinnedRun, setPinnedRun] = useState();\n  const [selectedRunIds, setSelectedRunIds] = useState([]);\n  const [selectedRunData, setSelectedRunData] = useState(null);\n  const [showRunDetailsModal, setShowRunDetailsModal] = useState(false);\n  const [showRunExportModal, setShowRunExportModal] = useState(false);\n  const [showRunPlotsModal, setShowRunPlotsModal] = useState(false);\n  const [newRunAdded, setNewRunAdded] = useState(false);\n  const [isDisplayingMetrics, setIsDisplayingMetrics] = useState(false);\n\n  // Fetch all runs.\n  const { subscribeToMore, data, loading } = useApolloQuery(GET_RUNS);\n\n  // Fetch all data for selected runs.\n  const {\n    data: { runMetadata = [], plots = [], metrics = [], JSONData = [] } = [],\n    error: runDataError,\n    loading: isRunDataLoading,\n  } = useApolloQuery(GET_RUN_DATA, {\n    skip: selectedRunIds.length === 0,\n    variables: { runIds: selectedRunIds, showDiff: true },\n  });\n\n  let runTrackingData = {};\n\n  if (plots.length > 0) {\n    runTrackingData['Plots'] = plots;\n  } else {\n    runTrackingData['Plots'] = [];\n  }\n\n  if (metrics.length > 0) {\n    runTrackingData['Metrics'] = metrics;\n  }\n\n  if (JSONData.length > 0) {\n    runTrackingData['JSON Data'] = JSONData;\n  }\n\n  const onRunSelection = (id) => {\n    if (enableComparisonView) {\n      if (selectedRunIds.includes(id)) {\n        if (selectedRunIds.length === 1) {\n          return;\n        }\n        setSelectedRunIds(selectedRunIds.filter((run) => run !== id));\n        setNewRunAdded(false);\n      } else {\n        setSelectedRunIds([...selectedRunIds, id]);\n        setNewRunAdded(true);\n      }\n    } else {\n      if (selectedRunIds.includes(id)) {\n        return;\n      } else {\n        setSelectedRunIds([id]);\n      }\n    }\n  };\n\n  const onToggleComparisonView = () => {\n    setEnableComparisonView(!enableComparisonView);\n\n    if (enableComparisonView && selectedRunIds.length > 1) {\n      setSelectedRunIds(selectedRunIds.slice(0, 1));\n    }\n  };\n\n  useEffect(() => {\n    if (selectedRunIds.length > MAX_NUMBER_COMPARISONS) {\n      setDisableRunSelection(true);\n    } else {\n      setDisableRunSelection(false);\n    }\n  }, [selectedRunIds]);\n\n  useEffect(() => {\n    if (data?.runsList.length > 0 && selectedRunIds.length === 0) {\n      /**\n       * If we return runs and don't yet have a selected run, set the first one\n       * as the default, with precedence given to runs that are bookmarked.\n       */\n      const bookmarkedRuns = data.runsList.filter((run) => {\n        return run.bookmark === true;\n      });\n\n      if (bookmarkedRuns.length > 0) {\n        setSelectedRunIds(bookmarkedRuns.map((run) => run.id).slice(0, 1));\n      } else {\n        setSelectedRunIds(data.runsList.map((run) => run.id).slice(0, 1));\n      }\n    }\n  }, [data, selectedRunIds]);\n\n  useEffect(() => {\n    /**\n     * If we return runs and aren't in comparison view, set a single selected\n     * run data object for use in the ExperimentPrimaryToolbar component.\n     */\n    if (data?.runsList.length > 0 && !enableComparisonView) {\n      const singleSelectedRunData = data.runsList.filter((run) => {\n        return run.id === selectedRunIds[0];\n      })[0];\n\n      setSelectedRunData(singleSelectedRunData);\n    }\n  }, [data, enableComparisonView, selectedRunIds]);\n\n  useEffect(() => {\n    if (\n      typeof pinnedRun === 'undefined' ||\n      !selectedRunIds.includes(pinnedRun)\n    ) {\n      // Assign the first selected run as the first pinned run.\n      setPinnedRun(selectedRunIds[0]);\n    }\n  }, [selectedRunIds, pinnedRun]);\n\n  useEffect(() => {\n    if (!data?.runsList || data.runsList.length === 0) {\n      return;\n    }\n\n    subscribeToMore({\n      document: NEW_RUN_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data || !prev?.runsList) {\n          return prev;\n        }\n        const newRuns = subscriptionData.data.runsAdded;\n\n        return Object.assign({}, prev, {\n          runsList: [...newRuns, ...prev.runsList],\n        });\n      },\n    });\n  }, [data, subscribeToMore]);\n\n  if (loading) {\n    return (\n      <div className=\"experiment-wrapper\">\n        <p className=\"experiment-wrapper__text\">Loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <HoverStateContextProvider>\n        {data?.runsList.length > 0 ? (\n          <>\n            <Sidebar\n              disableRunSelection={disableRunSelection}\n              enableComparisonView={enableComparisonView}\n              enableShowChanges={enableShowChanges}\n              isDisplayingMetrics={isDisplayingMetrics}\n              isExperimentView\n              onRunSelection={onRunSelection}\n              onToggleComparisonView={onToggleComparisonView}\n              runsListData={data.runsList}\n              selectedRunData={selectedRunData}\n              selectedRunIds={selectedRunIds}\n              setEnableShowChanges={setEnableShowChanges}\n              setShowRunExportModal={setShowRunExportModal}\n              setSidebarVisible={setIsSidebarVisible}\n              showRunDetailsModal={setShowRunDetailsModal}\n              sidebarVisible={isSidebarVisible}\n            />\n            <Transition in={selectedRunIds.length > 0} timeout={300}>\n              {(state) => (\n                <div\n                  style={{\n                    ...defaultStyle,\n                    ...transitionStyles[state],\n                  }}\n                >\n                  {selectedRunIds.length > 0 ? (\n                    <Details\n                      enableComparisonView={enableComparisonView}\n                      enableShowChanges={\n                        enableShowChanges && selectedRunIds.length > 1\n                      }\n                      isRunDataLoading={isRunDataLoading}\n                      newRunAdded={newRunAdded}\n                      onRunSelection={onRunSelection}\n                      pinnedRun={pinnedRun}\n                      runDataError={runDataError}\n                      runMetadata={runMetadata}\n                      runTrackingData={runTrackingData}\n                      selectedRunIds={selectedRunIds}\n                      setIsDisplayingMetrics={setIsDisplayingMetrics}\n                      setPinnedRun={setPinnedRun}\n                      setShowRunDetailsModal={setShowRunDetailsModal}\n                      setShowRunExportModal={setShowRunExportModal}\n                      setShowRunPlotsModal={setShowRunPlotsModal}\n                      showRunDetailsModal={showRunDetailsModal}\n                      showRunExportModal={showRunExportModal}\n                      showRunPlotsModal={showRunPlotsModal}\n                      sidebarVisible={isSidebarVisible}\n                      theme={theme}\n                    />\n                  ) : null}\n                </div>\n              )}\n            </Transition>\n          </>\n        ) : (\n          <Transition in={data?.runsList.length <= 0} timeout={300}>\n            {(state) => (\n              <div\n                className=\"experiment-wrapper\"\n                style={{\n                  ...defaultStyle,\n                  ...transitionStyles[state],\n                }}\n              >\n                <h2 className=\"experiment-wrapper__header\">\n                  You don't have any experiments\n                </h2>\n                <p className=\"experiment-wrapper__text\">\n                  Kedro can help you manage your experiments. Learn more how you\n                  can enable experiment tracking in your projects from our docs.{' '}\n                </p>\n                <a\n                  href=\"https://kedro.readthedocs.io/en/stable/logging/experiment_tracking.html\"\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Button>View docs</Button>\n                </a>\n              </div>\n            )}\n          </Transition>\n        )}\n      </HoverStateContextProvider>\n    </>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(ExperimentWrapper);\n","import ExperimentWrapper from './experiment-wrapper';\n\nexport default ExperimentWrapper;\n","import React from 'react';\nimport Toggle from '../ui/toggle';\n\n/**\n * Shows a list of MetaDataValue\n */\nconst SettingsModalRow = ({\n  id,\n  name,\n  toggleValue,\n  description,\n  onToggleChange,\n}) => (\n  <div className=\"pipeline-settings-modal__column\" key={id}>\n    <div className=\"pipeline-settings-modal__name\">{name}</div>\n    <Toggle\n      id={id}\n      className=\"pipeline-settings-modal__state\"\n      title={toggleValue ? 'On' : 'Off'}\n      checked={toggleValue}\n      onChange={onToggleChange}\n    ></Toggle>\n    <div className=\"pipeline-settings-modal__description\">{description}</div>\n  </div>\n);\n\nexport default SettingsModalRow;\n","import SettingsModal from './settings-modal';\n\nexport default SettingsModal;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  changeFlag,\n  toggleSettingsModal,\n  togglePrettyName,\n} from '../../actions';\nimport { getFlagsState } from '../../utils/flags';\nimport SettingsModalRow from './settings-modal-row';\nimport { settings as settingsConfig } from '../../config';\n\nimport Button from '../ui/button';\nimport Modal from '../ui/modal';\n\nimport './settings-modal.css';\n\n/**\n * Modal to allow users to change the flag settings\n */\n\nconst SettingsModal = ({\n  flags,\n  isOutdated,\n  latestVersion,\n  onToggleFlag,\n  onTogglePrettyName,\n  prettyName,\n  showSettingsModal,\n  visible,\n}) => {\n  const flagData = getFlagsState();\n  const [hasNotInteracted, setHasNotInteracted] = useState(true);\n  const [hasClickedApplyAndClose, setHasClickApplyAndClose] = useState(false);\n  const [isPrettyNameOn, setIsPrettyNameOn] = useState(prettyName);\n\n  useEffect(() => {\n    let modalTimeout, resetTimeout;\n\n    if (hasClickedApplyAndClose) {\n      modalTimeout = setTimeout(() => {\n        showSettingsModal(false);\n      }, 1500);\n\n      // Delay the reset so the user can't see the button text change.\n      resetTimeout = setTimeout(() => {\n        onTogglePrettyName(isPrettyNameOn);\n        setHasNotInteracted(true);\n        setHasClickApplyAndClose(false);\n\n        window.location.reload();\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(modalTimeout);\n      clearTimeout(resetTimeout);\n    };\n  }, [\n    hasClickedApplyAndClose,\n    isPrettyNameOn,\n    onTogglePrettyName,\n    showSettingsModal,\n  ]);\n\n  const resetStateCloseModal = () => {\n    showSettingsModal(false);\n    setHasNotInteracted(true);\n  };\n\n  return (\n    <div className=\"pipeline-settings-modal\">\n      <Modal\n        closeModal={() => resetStateCloseModal()}\n        title=\"Settings\"\n        visible={visible.settingsModal}\n      >\n        <div className=\"pipeline-settings-modal__content\">\n          <div className=\"pipeline-settings-modal__group\">\n            <div className=\"pipeline-settings-modal__subtitle\">General</div>\n            <div className=\"pipeline-settings-modal__header\">\n              <div className=\"pipeline-settings-modal__name\">Name</div>\n              <div className=\"pipeline-settings-modal__state\">State</div>\n              <div className=\"pipeline-settings-modal__description\">\n                Description\n              </div>\n            </div>\n            <SettingsModalRow\n              id=\"prettyName\"\n              name={settingsConfig['prettyName'].name}\n              toggleValue={isPrettyNameOn}\n              description={settingsConfig['prettyName'].description}\n              onToggleChange={(event) => {\n                setIsPrettyNameOn(event.target.checked);\n                setHasNotInteracted(false);\n              }}\n            />\n          </div>\n          <div className=\"pipeline-settings-modal__group\">\n            <div className=\"pipeline-settings-modal__subtitle\">Experiments</div>\n            {flagData.map(({ name, value, description }) => (\n              <SettingsModalRow\n                description={description}\n                id={value}\n                key={value}\n                name={name}\n                onToggleChange={(event) => {\n                  onToggleFlag(value, event.target.checked);\n                  setHasNotInteracted(false);\n                }}\n                toggleValue={flags[value]}\n              />\n            ))}\n            {isOutdated ? (\n              <div className=\"pipeline-settings-modal__upgrade-reminder\">\n                <span>&#8226; Kedro-Viz {latestVersion} is here! </span>\n                <a\n                  href=\"https://github.com/kedro-org/kedro-viz/releases\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View release notes\n                </a>\n              </div>\n            ) : (\n              <div className=\"pipeline-settings-modal__already-latest\">\n                <span>\n                  &#8226; You are on the latest version of Kedro-Viz (\n                  {latestVersion})\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"run-details-modal-button-wrapper\">\n            <Button\n              mode=\"secondary\"\n              onClick={() => {\n                showSettingsModal(false);\n                setHasNotInteracted(true);\n              }}\n              size=\"small\"\n            >\n              Cancel\n            </Button>\n            <Button\n              disabled={hasNotInteracted}\n              onClick={() => {\n                setHasClickApplyAndClose(true);\n              }}\n              mode={hasClickedApplyAndClose ? 'success' : 'primary'}\n              size=\"small\"\n            >\n              {hasClickedApplyAndClose ? (\n                <>\n                  Changes applied <span className=\"success-check-mark\">✅</span>\n                </>\n              ) : (\n                'Apply changes and close'\n              )}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  flags: state.flags,\n  prettyName: state.prettyName,\n  visible: state.visible,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  showSettingsModal: (value) => {\n    dispatch(toggleSettingsModal(value));\n  },\n  onToggleFlag: (name, value) => {\n    dispatch(changeFlag(name, value));\n  },\n  onTogglePrettyName: (value) => {\n    dispatch(togglePrettyName(value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal);\n","import UpdateReminder from './update-reminder';\n\nexport default UpdateReminder;\n","import React, { useState } from 'react';\nimport CommandCopier from '../ui/command-copier/command-copier';\nimport IconButton from '../ui/icon-button';\nimport CloseIcon from '../icons/close';\n\nimport './update-reminder.css';\n\nconst UpdateReminder = ({ versions, setDismiss }) => {\n  const [expand, setExpand] = useState(false);\n  const { latest, installed } = versions;\n\n  const command = 'pip install -U kedro-viz';\n\n  if (expand) {\n    return (\n      <>\n        <div className=\"update-reminder-expanded-header\">\n          <p>Kedro-Viz {latest} is here! </p>\n\n          <div className=\"close-button-container\">\n            <IconButton\n              ariaLabel=\"Close Upgrade Reminder Panel\"\n              className=\"close-button\"\n              container={React.Fragment}\n              icon={CloseIcon}\n              onClick={() => setExpand(false)}\n            />\n          </div>\n        </div>\n        <div className=\"update-reminder-expanded-detail\">\n          <p>\n            We're excited to announce that Kedro-Viz {latest} has been released.\n            To update Kedro-Viz, copy and paste the following update command\n            into your terminal. <br />\n            <br />\n            You are currently on Kedro-Viz {installed}.\n          </p>\n\n          <p className=\"subtext\">Update command</p>\n          <div className=\"command-copier\">\n            <CommandCopier command={command} />\n          </div>\n\n          <p className=\"subtext--small\">\n            Refer to the release page for the set of changes introduced. <br />\n            <a\n              href=\"https://github.com/kedro-org/kedro-viz/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View release notes\n            </a>\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"update-reminder-unexpanded\">\n      <p>Kedro-Viz {latest} is here! </p>\n      <div className=\"buttons-container\">\n        <button className=\"kedro\" onClick={() => setExpand(true)}>\n          Expand\n        </button>\n        <button className=\"kedro\" onClick={() => setDismiss(true)}>\n          Dismiss\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateReminder;\n","import Wrapper from './wrapper';\n\nexport default Wrapper;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { replaceMatches } from '../../utils';\nimport { useApolloQuery } from '../../apollo/utils';\nimport { client } from '../../apollo/config';\nimport { GraphQLProvider } from '../provider/provider';\nimport { GET_VERSIONS } from '../../apollo/queries';\nimport classnames from 'classnames';\nimport GlobalToolbar from '../global-toolbar';\nimport FlowChartWrapper from '../flowchart-wrapper';\nimport ExperimentWrapper from '../experiment-wrapper';\nimport SettingsModal from '../settings-modal';\nimport UpdateReminder from '../update-reminder';\n\nimport './wrapper.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n */\nexport const Wrapper = ({ displayGlobalToolbar, theme }) => {\n  const { pathname } = window.location;\n  const sanitizedPathname = replaceMatches(pathname, {\n    'experiment-tracking': '',\n  });\n\n  // Reload state is to ensure it will call redirectLocation in FlowchartWrapper\n  // only when the page is reloaded.\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => setReload(true), []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setReload(false);\n    }, 200);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const { data: versionData } = useApolloQuery(GET_VERSIONS, {\n    client,\n    skip: !displayGlobalToolbar,\n  });\n  const [dismissed, setDismissed] = useState(false);\n  const [isOutdated, setIsOutdated] = useState(false);\n  const [latestVersion, setLatestVersion] = useState(null);\n\n  useEffect(() => {\n    if (versionData) {\n      setIsOutdated(versionData.version.isOutdated);\n      setLatestVersion(versionData.version.latest);\n    }\n  }, [versionData]);\n\n  return (\n    <div\n      className={classnames('kedro-pipeline kedro', {\n        'kui-theme--dark': theme === 'dark',\n        'kui-theme--light': theme === 'light',\n      })}\n    >\n      <h1 className=\"pipeline-title\">Kedro-Viz</h1>\n      {displayGlobalToolbar ? (\n        <GraphQLProvider>\n          <Router>\n            <GlobalToolbar isOutdated={isOutdated} />\n            <SettingsModal\n              isOutdated={isOutdated}\n              latestVersion={latestVersion}\n            />\n            {versionData && isOutdated && !dismissed && (\n              <UpdateReminder\n                dismissed={dismissed}\n                setDismiss={setDismissed}\n                versions={versionData.version}\n              />\n            )}\n            <Switch>\n              <Route exact path={sanitizedPathname}>\n                <FlowChartWrapper reload={reload} />\n              </Route>\n              <Route path={`${sanitizedPathname}experiment-tracking`}>\n                <ExperimentWrapper />\n              </Route>\n            </Switch>\n          </Router>\n        </GraphQLProvider>\n      ) : (\n        <FlowChartWrapper />\n      )}\n    </div>\n  );\n};\n\nexport const mapStateToProps = (state) => ({\n  displayGlobalToolbar: state.display.globalToolbar,\n  theme: state.theme,\n});\n\nexport default connect(mapStateToProps)(Wrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport 'what-input';\nimport configureStore from '../../store';\nimport { resetData } from '../../actions';\nimport { loadInitialPipelineData } from '../../actions/pipelines';\nimport Wrapper from '../wrapper';\nimport getInitialState, {\n  preparePipelineState,\n} from '../../store/initial-state';\nimport { getFlagsMessage } from '../../utils/flags';\nimport './app.css';\n\n/**\n * Entry-point component for the use-case where Kedro-Viz is imported as a\n * library/package into a larger application, rather than run as a standalone\n * app. If run as a standalone then 'Container' is the top-level component.\n *\n * This component intialises anything that might be needed in both use-cases,\n * e.g. the Redux store, webfont loading, announcing flags, etc.\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const initialState = getInitialState(props);\n    this.store = configureStore(initialState, this.props.data);\n  }\n\n  componentDidMount() {\n    if (this.props.data === 'json') {\n      this.store.dispatch(loadInitialPipelineData());\n    }\n    this.announceFlags(this.store.getState().flags);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updatePipelineData();\n    }\n  }\n\n  /**\n   * Shows a console message regarding the given flags\n   */\n  announceFlags(flags) {\n    const message = getFlagsMessage(flags);\n\n    if (message && typeof jest === 'undefined') {\n      console.info(message);\n    }\n  }\n\n  /**\n   * Dispatch an action to update the store with new pipeline data\n   */\n  updatePipelineData() {\n    const newState = preparePipelineState(this.props.data, true);\n    this.store.dispatch(resetData(newState));\n  }\n\n  render() {\n    return this.props.data ? (\n      <Provider store={this.store}>\n        <Wrapper />\n      </Provider>\n    ) : null;\n  }\n}\n\nApp.propTypes = {\n  /**\n   * Determines what pipeline data will be displayed on the chart.\n   * You can supply an object containing lists of edges, nodes, tags -\n   * See /src/utils/data for examples of the expected data format.\n   * Alternatively, the string 'json' indicates that data is being\n   * loaded asynchronously from /public/api/nodes.json\n   */\n  data: PropTypes.oneOfType([\n    PropTypes.oneOf(['json']),\n    PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n      layers: PropTypes.array,\n      nodes: PropTypes.array.isRequired,\n      tags: PropTypes.array,\n    }),\n  ]),\n  /**\n   * Specify the theme: Either 'light' or 'dark'.\n   * If set, this will override the localStorage value.\n   */\n  theme: PropTypes.oneOf(['dark', 'light']),\n  /**\n   * Override visibility of various features, e.g. icon buttons\n   */\n  visible: PropTypes.shape({\n    labelBtn: PropTypes.bool,\n    layerBtn: PropTypes.bool,\n    exportBtn: PropTypes.bool,\n    sidebar: PropTypes.bool,\n  }),\n  /**\n   * Determines if certain elements are displayed, e.g global tool bar, sidebar\n   */\n  display: PropTypes.shape({\n    globalToolbar: PropTypes.bool,\n    sidebar: PropTypes.bool,\n    miniMap: PropTypes.bool,\n    expandAllPipelines: PropTypes.bool,\n  }),\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import seedrandom from 'seedrandom';\n\n/**\n * Generate a pseudo-random UUID\n * via https://stackoverflow.com/a/1349426/1651713\n * @param {Number} length Hash/ID length\n * @return string\n */\nexport const generateHash = (length) => {\n  const result = [];\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    result.push(\n      characters.charAt(Math.floor(Math.random() * characters.length))\n    );\n  }\n  return result.join('');\n};\n\n/**\n * Seed data with a random hash, allowing it to be reproduced.\n * If the URL searchParams contain a 'seed' key then use its value,\n * else create a new one, and make it available via the console.\n */\nexport const getSeedFromURL = () => {\n  let url;\n  let seed;\n  try {\n    url = new URL(document.location.href);\n    seed = url.searchParams.get('seed');\n  } catch (e) {\n    console.warn('Random data seeding is not supported in this browser');\n    return;\n  }\n  if (!seed) {\n    seed = generateHash(30);\n    url.searchParams.set('seed', seed);\n  }\n  if (typeof jest === 'undefined') {\n    console.info(\n      `%cRandom data seed: ${seed}\\nTo reuse this layout, visit ${url.toString()}`,\n      'font-weight: bold'\n    );\n  }\n  return seed;\n};\n\n/**\n * Get an array of numbers\n * @param {Number} length Length of the array\n */\nexport const getNumberArray = (length) => Array.from(Array(length).keys());\n\nexport const LOREM_IPSUM =\n  'lorem ipsum dolor sit amet consectetur adipiscing elit vestibulum id turpis nunc nulla vitae diam dignissim fermentum elit sit amet viverra libero quisque condimentum pellentesque convallis sed consequat neque ac rhoncus finibus'.split(\n    ' '\n  );\n\n/**\n * Utils that depend on a seeded RNG\n */\nconst randomUtils = () => {\n  // Set up seeded random number generator:\n  const seed = getSeedFromURL();\n  const random = seedrandom(seed);\n\n  /**\n   * Get a random number between 0 to n-1, inclusive\n   * @param {Number} max Max number\n   */\n  const randomIndex = (max) => Math.floor(random() * max);\n\n  /**\n   * Get a random number between 1 to n, inclusive\n   * @param {Number} max Max number\n   */\n  const randomNumber = (max) => Math.ceil(random() * max);\n\n  /**\n   * Get a random number between min and max, inclusive\n   * @param {Number} (min) Min number\n   * @param {Number} (max) Max number\n   */\n  const randomNumberBetween = (min, max) => randomNumber(max - min) + min;\n\n  /**\n   * Get a random datum from an array\n   * @param {Array} range The array to select a random item from\n   */\n  const getRandom = (range) => range[randomIndex(range.length)];\n\n  /**\n   * Generate a random latin name\n   * @param {Number} numWords Number of words in the name\n   * @param {String} join The character(s) used to join each word\n   */\n  const getRandomName = (numWords, join = '_') =>\n    getNumberArray(numWords)\n      .map(() => getRandom(LOREM_IPSUM))\n      .join(join);\n\n  /**\n   * Randomly select a certain number (n) of items from an array (arr).\n   * via https://stackoverflow.com/a/19270021/1651713\n   * @param {Array} arr List from which to choose\n   * @param {Number} numItems Number of items to select\n   */\n  const getRandomSelection = (arr, numItems) => {\n    const result = new Array(numItems);\n    let len = arr.length;\n    const taken = new Array(len);\n    if (numItems > len) {\n      return arr;\n    }\n    while (numItems--) {\n      const x = Math.floor(random() * len);\n      result[numItems] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  };\n\n  return {\n    random,\n    randomIndex,\n    randomNumber,\n    randomNumberBetween,\n    getRandom,\n    getRandomName,\n    getRandomSelection,\n  };\n};\n\nexport default randomUtils;\n","import batchingToposort from 'batching-toposort';\n\nimport { arrayToObject, unique } from './index';\nimport randomUtils, { getNumberArray } from './random-utils';\n\n//--- Config variables ---//\n\nconst MAX_EDGE_COUNT = 200;\nconst MIN_EDGE_COUNT = 100;\nconst MAX_RANK_COUNT = 50;\nconst MIN_RANK_COUNT = 10;\nconst MAX_RANK_NODE_COUNT = 10;\nconst MIN_RANK_NODE_COUNT = 1;\nconst MIN_NODE_DEGREE = 2;\nconst MAX_NODE_TAG_COUNT = 5;\nconst MAX_TAG_COUNT = 20;\nconst PARAMETERS_FREQUENCY = 0.2;\nconst MIN_PIPELINES_COUNT = 2;\nconst MAX_PIPELINES_COUNT = 15;\nconst LAYERS = [\n  'Raw',\n  'Intermediate',\n  'Primary',\n  'Feature',\n  'Model Input',\n  'Model Output',\n];\n\n/**\n * Generate a random pipeline dataset\n */\nclass Pipeline {\n  constructor() {\n    this.utils = randomUtils();\n    this.pipelines = this.generatePipelines();\n    this.rankCount = this.getRankCount();\n    this.rankLayers = this.getRankLayers();\n    this.tags = this.generateTags();\n    this.nodes = this.generateNodes();\n    this.edges = this.generateEdges();\n    this.modularPipelines = this.generateModularPipelines(this.nodes);\n\n    this.update();\n    this.finalise();\n  }\n\n  /**\n   * Create the pipelines array\n   * @returns {Number} Rank count total\n   */\n  generatePipelines() {\n    const pipelines = ['Default'];\n    const pipelineCount = this.utils.randomNumberBetween(\n      MIN_PIPELINES_COUNT,\n      MAX_PIPELINES_COUNT\n    );\n    for (let i = 1; i < pipelineCount; i++) {\n      pipelines.push(this.utils.getRandomName(this.utils.randomNumber(4), ' '));\n    }\n    return pipelines.filter(unique);\n  }\n\n  /**\n   * Create the modular pipelines tree from nodes in the graph\n   * @returns {Object} A modular pipelines tree\n   */\n  generateModularPipelines(nodes) {\n    return {\n      __root__: {\n        id: '__root__',\n        name: 'Root',\n        children: nodes.map((node) => ({ id: node.id, type: node.type })),\n      },\n    };\n  }\n\n  /**\n   * Get the number of ranks (i.e. horizontal bands)\n   * Odd ranks are data, even are task\n   * @returns {Number} Rank count total\n   */\n  getRankCount() {\n    let rankCount = this.utils.randomNumberBetween(\n      MIN_RANK_COUNT,\n      MAX_RANK_COUNT\n    );\n    // Ensure odd numbers only, so that we start and end with a data node\n    if (!rankCount % 2) {\n      rankCount += 1;\n    }\n    return rankCount;\n  }\n\n  /**\n   * Randomly determine the layer for each rank\n   * @returns {Object} Layers by rank\n   */\n  getRankLayers() {\n    const layerSize = arrayToObject(LAYERS, () => 0);\n    // Randomly decide the number of ranks in each layer\n    for (let i = 0; i < this.rankCount; i++) {\n      layerSize[this.utils.getRandom(LAYERS)]++;\n    }\n    // Assign layers to ranks based on layerSize\n    const rankLayers = {};\n    for (let rank = 0, layer = 0; rank < this.rankCount; rank++) {\n      while (layerSize[LAYERS[layer]] < 1) {\n        layer++;\n      }\n      rankLayers[rank] = LAYERS[layer];\n      layerSize[LAYERS[layer]]--;\n    }\n    return rankLayers;\n  }\n\n  /**\n   * Generate a random list of tags\n   * @returns {Array} Tag name strings\n   */\n  generateTags() {\n    const tagCount = this.utils.randomNumber(MAX_TAG_COUNT);\n    return getNumberArray(tagCount)\n      .map(() =>\n        this.utils.getRandomName(this.utils.randomNumber(MAX_NODE_TAG_COUNT))\n      )\n      .filter(unique);\n  }\n\n  /**\n   * Create list of nodes\n   * @returns {Array} List of node objects\n   */\n  generateNodes() {\n    const nodes = [];\n    for (let rank = 0; rank < this.rankCount; rank++) {\n      const rankNodeCount = this.getRankNodeCount(rank);\n      for (let i = 0; i < rankNodeCount; i++) {\n        const node = this.createNode(i, rank);\n        nodes.push(node);\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   * Return a random count of nodes for a rank\n   * @returns {Number} rank node count\n   */\n  getRankNodeCount() {\n    return Math.min(\n      MIN_RANK_NODE_COUNT / this.utils.random(),\n      MAX_RANK_NODE_COUNT\n    );\n  }\n\n  /**\n   * Determine a node's type based on its rank\n   * @param {Number} rank Rank number\n   * @returns {String} Node type (task/data/parameters)\n   */\n  getType(node) {\n    if (node.rank % 2) {\n      return 'task';\n    }\n\n    if (!node._sources.length && this.utils.random() < PARAMETERS_FREQUENCY) {\n      return 'parameters';\n    }\n\n    return 'data';\n  }\n\n  /**\n   * Create a node datum object.\n   * @param {Number} i Node index within its rank\n   * @param {Number} initialRank Rank index\n   * @returns {Object} Node object\n   */\n\n  createNode(i, initialRank) {\n    const layer = this.rankLayers[initialRank];\n    const node = {\n      id: `${layer}_${initialRank}_${i}`,\n      name: null,\n      full_name: null, //eslint-disable-line camelcase\n      type: null,\n      rank: initialRank,\n      layer: layer,\n      pipelines: this.getNodePipelines(),\n      modular_pipelines: null, //eslint-disable-line camelcase\n      tags: this.getRandomTags(),\n      _sources: [],\n      _targets: [],\n    };\n    return node;\n  }\n\n  /**\n   * Create a new node name of up to 10 words\n   * @param {String} Node type (task/data/parameters)\n   * @returns {String} Node name\n   */\n  getNodeName(type) {\n    const name = this.utils.getRandomName(this.utils.randomNumber(10), ' ');\n    return type === 'parameters' ? `Parameters ${name}` : name;\n  }\n\n  /**\n   * Generate node metadata panel info\n   * @param {Object} node A single node object\n   */\n  getNodeMetaData(node) {\n    const { getRandomName, randomNumber } = this.utils;\n\n    if (node.type === 'task') {\n      node.code = this.generateCodeSnippet();\n    } else if (node.type === 'data') {\n      node.datasetType = getRandomName(randomNumber(2));\n    }\n    node.filepath = getRandomName(randomNumber(10), '/');\n    node.parameters = arrayToObject(\n      getNumberArray(randomNumber(10)).map(() =>\n        getRandomName(randomNumber(2), '_')\n      ),\n      () => this.utils.randomNumber(50) / 10\n    );\n  }\n\n  /**\n   * Use one of the methods of this class as a code example\n   */\n  generateCodeSnippet() {\n    const methods = Object.getOwnPropertyNames(Pipeline.prototype);\n    const index = this.utils.randomIndex(methods.length);\n    let code = Pipeline.prototype[methods[index]].toString();\n    if (index > 0) {\n      code = 'function ' + code.replace(/\\n\\s\\s/g, '\\n');\n    }\n    return code;\n  }\n\n  /**\n   * Create a list of the pipelines that the node will be included in\n   * @returns {Array} Node piplines\n   */\n  getNodePipelines() {\n    return this.pipelines.reduce((pipelines, id, i) => {\n      if (i === 0 || this.utils.randomIndex(2)) {\n        return pipelines.concat(id);\n      }\n      return pipelines;\n    }, []);\n  }\n\n  /**\n   * Select a random number of tags from the list of tags\n   * @returns {Array} List of tags\n   */\n  getRandomTags() {\n    return this.utils.getRandomSelection(\n      this.tags,\n      this.utils.randomNumber(this.tags.length)\n    );\n  }\n\n  /**\n   * Gets a map of ranks to lists of nodes at that rank\n   * @returns {Array} List of nodes\n   */\n  getNodesByRank() {\n    const nodesByRank = {};\n\n    for (const node of this.nodes) {\n      nodesByRank[node.rank] = nodesByRank[node.rank] || [];\n      nodesByRank[node.rank].push(node);\n    }\n\n    return nodesByRank;\n  }\n\n  /**\n   * Create list of edges\n   * @returns {Array} Edge objects\n   */\n  generateEdges() {\n    const edges = [];\n    const edgeCount = this.utils.randomNumberBetween(\n      MIN_EDGE_COUNT,\n      MAX_EDGE_COUNT\n    );\n    const nodesByRank = this.getNodesByRank();\n\n    // Find the sorted list of node ranks\n    const ranks = Object.keys(nodesByRank)\n      .map((rank) => parseFloat(rank))\n      .sort((a, b) => a - b);\n\n    // Gets a random node with the given rank index\n    const getRandomNodeAtRank = (rankIndex) => {\n      const rankValue = ranks[rankIndex];\n      const rankNodes = nodesByRank[rankValue];\n      const rankNodeIndex = this.utils.randomIndex(rankNodes.length);\n      return rankNodes[rankNodeIndex];\n    };\n\n    // For the desired amount of edges\n    for (let i = 0; i < edgeCount; i += 1) {\n      // Choose a random source node excluding the last rank\n      const sourceRankIndex = this.utils.randomIndex(ranks.length - 1);\n      const source = getRandomNodeAtRank(sourceRankIndex);\n\n      // Choose a random target node after the source rank prefering nearby\n      const remainingRankCount = ranks.length - 1 - sourceRankIndex;\n      const biasedRandom = Math.round(0.5 / this.utils.random());\n      const targetRankIndex =\n        sourceRankIndex + Math.min(biasedRandom, remainingRankCount);\n      const target = getRandomNodeAtRank(targetRankIndex);\n\n      // Build the edge\n      const edge = {\n        source: source.id,\n        target: target.id,\n        _sourceNode: source,\n        _targetNode: target,\n      };\n\n      edges.push(edge);\n\n      // Keep track of edges on nodes for later convenience\n      source._targets.push(edge);\n      target._sources.push(edge);\n    }\n\n    return edges;\n  }\n\n  /**\n   * Select only nodes with at least the minimum required connected nodes\n   * @returns {Object} Filtered nodes\n   */\n  activeNodes() {\n    const nodes = {};\n\n    // Gets the total number of edges for the given node\n    const degree = (node) => node._sources.length + node._targets.length;\n\n    for (const edge of this.edges) {\n      // Keep both nodes if they have enough combined connections\n      if (\n        degree(edge._sourceNode) + degree(edge._targetNode) >\n        MIN_NODE_DEGREE\n      ) {\n        nodes[edge._sourceNode.id] = edge._sourceNode;\n        nodes[edge._targetNode.id] = edge._targetNode;\n      }\n    }\n\n    return Object.values(nodes);\n  }\n\n  /**\n   * Select only used tags\n   * @returns {Object} Filtered tags\n   */\n  activeTags() {\n    return this.nodes\n      .reduce((tags, node) => (node.tags ? tags.concat(node.tags) : tags), [])\n      .filter(unique)\n      .map((tag) => ({ name: tag, id: tag }));\n  }\n\n  /**\n   * Select only used edges\n   * @returns {Object} Filtered edges\n   */\n  activeEdges() {\n    const visibleNodes = arrayToObject(\n      this.nodes.map((node) => node.id),\n      () => true\n    );\n\n    return this.edges.filter(\n      (edge) => visibleNodes[edge.target] && visibleNodes[edge.source]\n    );\n  }\n\n  /**\n   * Updates node properties including rank, type and name based on the current graph\n   */\n  update() {\n    const graph = {};\n\n    for (const node of this.nodes) {\n      graph[node.id] = [];\n    }\n\n    for (const edge of this.edges) {\n      graph[edge.source].push(edge.target);\n    }\n\n    // Use toposort to find actual ranks\n    const sortedNodes = batchingToposort(graph);\n\n    for (let rank = 0; rank < sortedNodes.length; rank++) {\n      for (const id of sortedNodes[rank]) {\n        const node = this.nodes.find((node) => node.id === id);\n        node.rank = rank;\n        node.type = this.getType(node);\n        node.name = this.getNodeName(node.type);\n        node.full_name = //eslint-disable-line camelcase\n          `${node.layer}_${node.type}_${node.rank}_${node.name}`.replace(\n            /\\s/g,\n            '_'\n          );\n        this.getNodeMetaData(node);\n      }\n    }\n  }\n\n  /**\n   * Removes unused elements and cleans up temporary properties\n   */\n  finalise() {\n    this.nodes = this.activeNodes();\n    this.tags = this.activeTags();\n    this.edges = this.activeEdges();\n\n    for (const node of this.nodes) {\n      delete node._sources;\n      delete node._targets;\n    }\n\n    for (const edge of this.edges) {\n      delete edge._targetNode;\n      delete edge._sourceNode;\n    }\n  }\n\n  /**\n   * Gets the complete pipeline data\n   * @returns {Object} The pipeline data\n   */\n  all() {\n    return {\n      edges: this.edges,\n      layers: LAYERS,\n      nodes: this.nodes,\n      pipelines: this.pipelines.map((name) => ({ id: name, name })),\n      //eslint-disable-next-line camelcase\n      modular_pipelines: this.modularPipelines,\n      tags: this.tags,\n    };\n  }\n}\n\nconst generateRandomPipeline = () => new Pipeline().all();\n\nexport default generateRandomPipeline;\n","import getRandomPipeline from './random-data';\nimport spaceflights from './data/spaceflights.mock.json';\nimport demo from './data/demo.mock.json';\nimport selectors from './data/selectors.mock.json';\n\n/**\n * Determine the data source ID from the URL query string, or an environment\n * variable from the CLI, or from the URL host, else return undefined.\n * You can supply one of the following strings:\n   - 'random': Use randomly-generated data\n   - 'spaceflights': Use data from the 'spaceflights' test dataset ( this is the same dataset as used by the Core team for their tests )\n   - 'demo': Use data from the 'demo' test dataset\n   - 'json': Load data from a local json file (in /public/api/main)\n * @return {String} Data source identifier\n */\nexport const getSourceID = () => {\n  const urlParams = new URL(document.location.href).searchParams;\n  const dataSource = urlParams.get('data');\n  const { REACT_APP_DATA_SOURCE } = process.env;\n  const isDemo = document.location.host === 'kedro-org.github.io';\n\n  if (dataSource) {\n    return encodeURIComponent(dataSource);\n  }\n  if (REACT_APP_DATA_SOURCE) {\n    return REACT_APP_DATA_SOURCE;\n  }\n  if (isDemo) {\n    return 'demo';\n  }\n  return 'json';\n};\n\n/**\n * Either load synchronous pipeline data, or else indicate with a string\n * that json data should be loaded asynchronously later on.\n * @param {String} source Data source identifier\n * @return {Object|String} Either raw data itself, or 'json'\n */\nexport const getDataValue = (source) => {\n  // Add data source string to data object\n  const nameSource = (data) => Object.assign(data, { source });\n\n  switch (source) {\n    case 'spaceflights':\n      // Use data from the 'spaceflights' test dataset\n      return nameSource(spaceflights);\n    case 'demo':\n      // Use data from the 'demo' test dataset\n      return nameSource(demo);\n    case 'selectors':\n      // Use data from the 'selectors' test dataset\n      return nameSource(selectors);\n    case 'random':\n      // Use procedurally-generated data\n      return nameSource(getRandomPipeline());\n    case 'json':\n      // Load data asynchronously later\n      return source;\n    default:\n      throw new Error(\n        `Unexpected data source value '${source}'. Your input should be one of the following values: 'spaceflights', 'demo', 'json', 'selectors', or 'random'`\n      );\n  }\n};\n\n/**\n * Determine which data source to use, and return it\n * @return {Object|String} Pipeline data, or 'json'\n */\nconst getPipelineData = () => getDataValue(getSourceID());\n\nexport default getPipelineData;\n","import Container from './container';\n\nexport default Container;\n","import React from 'react';\nimport App from '../app';\nimport getPipelineData from '../../utils/data-source';\nimport './container.css';\n\n/**\n * Top-level component for the use-case where Kedro-Viz is run as a standalone\n * app rather than imported as a library/package into a larger application.\n */\nconst Container = () => (\n  <>\n    <App data={getPipelineData()} />\n  </>\n);\n\nexport default Container;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KedroViz from './components/container';\n\nReactDOM.render(<KedroViz />, document.getElementById('root'));\n","/* eslint-disable id-length */\n\n/**\n * PI / 2 constant\n */\n\nexport const HALF_PI = Math.PI * 0.5;\n\n/**\n * Clamps the value between min and max\n * @param {Number} value The number to clamp\n * @param {Number} min The minimum value\n * @param {Number} max The maximum value\n * @returns {Number} The value clamped\n */\nexport const clamp = (value, min, max) =>\n  value < min ? min : value > max ? max : value;\n\n/**\n * Rounds the value to the nearest unit value\n * @param {Number} value The value to snap\n * @param {Number} unit The unit\n * @returns {Number} The value snapped\n */\nexport const snap = (value, unit) => Math.round(value / unit) * unit;\n\n/**\n * Returns the distance between two values\n * @param {Number} a The first value\n * @param {Number} b The second value\n * @returns {Number} The distance\n */\nexport const distance1d = (a, b) => Math.abs(a - b);\n\n/**\n * Returns the angle in radians between the points a and b relative to the X-axis about the origin\n * @param {Object} a The first point\n * @param {Object} b The second point\n * @returns {Number} The angle\n */\nexport const angle = (a, b) => Math.atan2(a.y - b.y, a.x - b.x);\n\n/**\n * Returns the left edge x-position of the node\n * @param {Object} node The node\n * @returns {Number} The left edge position\n */\nexport const nodeLeft = (node) => node.x - node.width * 0.5;\n\n/**\n * Returns the right edge x-position of the node\n * @param {Object} node The node\n * @returns {Number} The right edge position\n */\nexport const nodeRight = (node) => node.x + node.width * 0.5;\n\n/**\n * Returns the top edge y-position of the node\n * @param {Object} node The node\n * @returns {Number} The top edge position\n */\nexport const nodeTop = (node) => node.y - node.height * 0.5;\n\n/**\n * Returns the bottom edge y-position of the node\n * @param {Object} node The node\n * @returns {Number} The bottom edge position\n */\nexport const nodeBottom = (node) => node.y + node.height * 0.5;\n\n/**\n * Finds the rows formed by nodes given the their positions in Y.\n * The result is sorted in X and Y.\n * Adds a `row` property to each node in-place\n * @param {Array} nodes The input nodes\n * @returns {Array} The sorted rows of nodes\n */\nexport const groupByRow = (nodes) => {\n  const rows = {};\n\n  // Create rows using node Y values\n  for (const node of nodes) {\n    rows[node.y] = rows[node.y] || [];\n    rows[node.y].push(node);\n  }\n\n  // Sort the set of rows accounting for keys being strings\n  const rowNumbers = Object.keys(rows).map((row) => parseFloat(row));\n  rowNumbers.sort((a, b) => a - b);\n\n  // Sort rows in order of X position if set. Break ties with ids for stability\n  const sortedRows = rowNumbers.map((row) => rows[row]);\n  for (let i = 0; i < sortedRows.length; i += 1) {\n    sortedRows[i].sort((a, b) => compare(a.x, b.x, a.id, b.id));\n\n    for (const node of sortedRows[i]) {\n      node.row = i;\n    }\n  }\n\n  return sortedRows;\n};\n\n/**\n * Generalised comparator function for sorting\n * If values are strings then `localeCompare` is used, otherwise values are subtracted\n * Compares the first pair of values and returns the difference if non equal,\n * otherwise ties are broken by comparing the subsequent pairs of values\n * @param {Number|String} a Value to compare with `b`\n * @param {Number|String} b Value to compare with `a`\n * @param {...Number|String} values Any number of further pairs of values to compare as tie-breakers\n * @returns {Number} A standard signed comparator result\n */\nexport const compare = (a, b, ...values) => {\n  const delta = typeof a === 'string' ? a.localeCompare(b) : a - b;\n  return delta !== 0 || values.length === 0 ? delta : compare(...values);\n};\n\n/**\n * Returns the node with the position translated in-place\n * @param {Object} node The node\n * @param {Object} offset The translation vector\n * @returns {Object} The node\n */\nexport const offsetNode = (node, offset) => {\n  node.x = node.x - offset.x;\n  node.y = node.y - offset.y;\n  // Node sort order for tabindex:\n  node.order = node.x + node.y * 9999;\n  return node;\n};\n\n/**\n * Returns the edge with each point translated in-place\n * @param {Object} edge The edge\n * @param {Object} offset The translation vector\n * @returns {Object} The edge\n */\nexport const offsetEdge = (edge, offset) => {\n  edge.points.forEach((point) => {\n    point.x = point.x - offset.x;\n    point.y = point.y - offset.y;\n  });\n  return edge;\n};\n\n/**\n * Returns the point on the line segment `ax, ay, bx, by` closest to point `x, y`\n * @param {Number} x The test point x\n * @param {Number} y The test point y\n * @param {Number} ax The start of the line segement x point\n * @param {Number} ay The start of the line segement y point\n * @param {Number} bx The end of the line segement x point\n * @param {Number} by The end of the line segement y point\n * @returns {Object} An object with the closest point and both line segment points\n */\nexport const nearestOnLine = (x, y, ax, ay, bx, by) => {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const position = ((x - ax) * dx + (y - ay) * dy) / (dx * dx + dy * dy || 1);\n  const positionClamped = clamp(position, 0, 1);\n\n  return {\n    x: ax + dx * positionClamped,\n    y: ay + dy * positionClamped,\n    ax,\n    ay,\n    bx,\n    by,\n  };\n};\n","/** @license kiwi.js v1.1.2\n * #------------------------------------------------------------------------------\n * # Copyright (c) 2013, Nucleic Development Team & H. Rutjes.\n * #\n * # Distributed under the terms of the Modified BSD License.\n * #\n * # The full license is in the file COPYING.txt, distributed with this software.\n * #------------------------------------------------------------------------------\n **/\nimport { Solver, Variable } from 'kiwi.js';\n\n/**\n * Applies the given constraints to the objects in-place.\n * A solution is approximated iteratively.\n * Refer to LAYOUT_ENGINE.md for further details.\n * @param {Array} constraints The constraints\n * @param {Function} constraint.base.solve A function that solves the constraint in-place\n * @param {Number} iterations The number of iterations\n * @param {?Object} constants The constants used by constraints\n */\nexport const solveLoose = (constraints, iterations, constants) => {\n  for (let i = 0; i < iterations; i += 1) {\n    for (const constraint of constraints) {\n      constraint.base.solve(constraint, constants);\n    }\n  }\n};\n\n/**\n * Applies the given constraints to the objects in-place.\n * A solution is found exactly for the constraints that are solvable.\n * Any unsolvable constraints will be skipped and a warning logged in the console.\n * Refer to LAYOUT_ENGINE.md for further details.\n * @param {Array} constraints The constraints\n * @param {String} constraint.base.property The property name on `a` and `b` to constrain\n * @param {Function} constraint.base.strict A function returns the constraint in strict form\n * @param {Object} constraint.a The first object to constrain\n * @param {Object} constraint.b The second object to constrain\n * @param {Object} constraint.a.id A unique id for the first object\n * @param {Object} constraint.b.id A unique id for the second object\n * @param {?Object} constants The constants used by constraints\n */\nexport const solveStrict = (constraints, constants) => {\n  const solver = new Solver();\n  const variables = {};\n\n  const variableId = (obj, property) => `${obj.id}_${property}`;\n\n  const addVariable = (obj, property) => {\n    const id = variableId(obj, property);\n\n    if (!variables[id]) {\n      const variable = (variables[id] = new Variable());\n      variable.property = property;\n      variable.obj = obj;\n    }\n  };\n\n  for (const constraint of constraints) {\n    addVariable(constraint.a, constraint.base.property);\n    addVariable(constraint.b, constraint.base.property);\n  }\n\n  let unsolvableCount = 0;\n\n  for (const constraint of constraints) {\n    try {\n      solver.addConstraint(\n        constraint.base.strict(\n          constraint,\n          constants,\n          variables[variableId(constraint.a, constraint.base.property)],\n          variables[variableId(constraint.b, constraint.base.property)]\n        )\n      );\n    } catch (err) {\n      unsolvableCount += 1;\n    }\n  }\n\n  if (unsolvableCount > 0) {\n    console.warn(`Skipped ${unsolvableCount} unsolvable constraints`);\n  }\n\n  solver.updateVariables();\n\n  const variablesList = Object.values(variables);\n\n  for (const variable of variablesList) {\n    variable.obj[variable.property] = variable.value();\n  }\n};\n","/**\n * Constraint base definitions.\n *\n * Refer to LAYOUT_ENGINE.md for descriptions of each constraint.\n *\n * See `solve` function of `solver.js` for constraint specification.\n */\n\nimport { Constraint, Operator, Strength } from 'kiwi.js';\n\n/**\n * Layout constraint in Y for separating rows\n */\nexport const rowConstraint = {\n  property: 'y',\n\n  strict: (constraint, constants, variableA, variableB) =>\n    new Constraint(\n      variableA.minus(variableB),\n      Operator.Ge,\n      constants.spaceY,\n      Strength.required\n    ),\n};\n\n/**\n * Layout constraint in Y for separating layers\n */\nexport const layerConstraint = {\n  property: 'y',\n\n  strict: (constraint, constants, variableA, variableB) =>\n    new Constraint(\n      variableA.minus(variableB),\n      Operator.Ge,\n      constants.layerSpace,\n      Strength.required\n    ),\n};\n\n/**\n * Layout constraint in X for minimising distance from source to target for straight edges\n */\nexport const parallelConstraint = {\n  property: 'x',\n\n  solve: (constraint) => {\n    const { a, b, strength } = constraint;\n    const resolve = strength * (a.x - b.x);\n    a.x -= resolve;\n    b.x += resolve;\n  },\n\n  strict: (constraint, constants, variableA, variableB) =>\n    new Constraint(\n      variableA.minus(variableB),\n      Operator.Eq,\n      0,\n      Strength.create(1, 0, 0, constraint.strength)\n    ),\n};\n\n/**\n * Crossing constraint in X for minimising edge crossings\n */\nexport const crossingConstraint = {\n  property: 'x',\n\n  solve: (constraint) => {\n    const { edgeA, edgeB, separationA, separationB, strength } = constraint;\n\n    // Amount to move each node towards required separation\n    const resolveSource =\n      strength *\n      ((edgeA.sourceNode.x - edgeB.sourceNode.x - separationA) / separationA);\n\n    const resolveTarget =\n      strength *\n      ((edgeA.targetNode.x - edgeB.targetNode.x - separationB) / separationB);\n\n    // Apply the resolve each node\n    edgeA.sourceNode.x -= resolveSource;\n    edgeB.sourceNode.x += resolveSource;\n    edgeA.targetNode.x -= resolveTarget;\n    edgeB.targetNode.x += resolveTarget;\n  },\n};\n\n/**\n * Layout constraint in X for minimum node separation\n */\nexport const separationConstraint = {\n  property: 'x',\n\n  strict: (constraint, constants, variableA, variableB) =>\n    new Constraint(\n      variableB.minus(variableA),\n      Operator.Ge,\n      constraint.separation,\n      Strength.required\n    ),\n};\n","import { HALF_PI, snap, angle, compare, groupByRow } from './common';\nimport { solveLoose, solveStrict } from './solver';\nimport {\n  rowConstraint,\n  layerConstraint,\n  parallelConstraint,\n  crossingConstraint,\n  separationConstraint,\n} from './constraints';\n\n/**\n * Finds positions for the given nodes relative to their edges.\n * Input nodes and edges are updated in-place.\n * Results are stored in the `x, y` properties on nodes.\n * @param {Object} params The layout parameters\n * @param {Array} params.nodes The input nodes\n * @param {Array} params.edges The input edges\n * @param {Object=} params.layers The node layers if specified\n * @param {Number} params.spaceX The minimum gap between nodes in X\n * @param {Number} params.spaceY The minimum gap between nodes in Y\n * @param {Number} params.spreadX Adjusts the gap for each node in X based on the number of connected edges it has\n * @param {Number} params.layerSpaceY The additional gap between nodes in Y between layers\n * @param {Number} params.iterations The number of solver iterations to perform\n * @returns {void}\n */\nexport const layout = ({\n  nodes,\n  edges,\n  layers,\n  spaceX,\n  spaceY,\n  spreadX,\n  layerSpaceY,\n  iterations,\n}) => {\n  // Set initial positions for nodes\n  for (const node of nodes) {\n    node.x = 0;\n    node.y = 0;\n  }\n\n  // Constants used by constraints\n  const constants = {\n    spaceX,\n    spaceY,\n    spreadX,\n    layerSpace: (spaceY + layerSpaceY) * 0.5,\n  };\n\n  // Constraints to separate nodes into rows and layers\n  const rowConstraints = createRowConstraints(edges);\n  const layerConstraints = createLayerConstraints(nodes, layers);\n\n  // Find the node positions given these constraints\n  solveStrict([...rowConstraints, ...layerConstraints], constants, 1);\n\n  // Find the solved rows using the node positions after solving\n  const rows = groupByRow(nodes);\n\n  // Constraints to avoid edges crossing and maintain parallel vertical edges\n  const crossingConstraints = createCrossingConstraints(edges, constants);\n  const parallelConstraints = createParallelConstraints(edges, constants);\n\n  // Solve these constraints iteratively\n  for (let i = 0; i < iterations; i += 1) {\n    solveLoose(crossingConstraints, 1, constants);\n    solveLoose(parallelConstraints, 50, constants);\n  }\n\n  // Constraints to maintain a minimum horizontal node spacing\n  const separationConstraints = createSeparationConstraints(rows, constants);\n\n  // Find the final node positions given these strict constraints\n  solveStrict([...separationConstraints, ...parallelConstraints], constants, 1);\n\n  // Adjust vertical spacing between rows for legibility\n  expandDenseRows(edges, rows, spaceY);\n};\n\n/**\n * Creates row constraints for the given edges.\n * @param {Array} edges The input edges\n * @returns {Array} The constraints\n */\nconst createRowConstraints = (edges) =>\n  edges.map((edge) => ({\n    base: rowConstraint,\n    a: edge.targetNode,\n    b: edge.sourceNode,\n  }));\n\n/**\n * Creates layer constraints for the given nodes and layers.\n * @param {Array} nodes The input nodes\n * @param {Array=} layers The input layers if any\n * @returns {Array} The constraints\n */\nconst createLayerConstraints = (nodes, layers) => {\n  const layerConstraints = [];\n\n  // Early out if no layers defined\n  if (!layers) {\n    return layerConstraints;\n  }\n\n  // Group the nodes for each layer\n  const layerGroups = layers.map((name) =>\n    nodes.filter((node) => node.nearestLayer === name)\n  );\n\n  // For each layer of nodes\n  for (let i = 0; i < layerGroups.length - 1; i += 1) {\n    const layerNodes = layerGroups[i];\n    const nextLayerNodes = layerGroups[i + 1];\n\n    // Create a temporary intermediary node for the layer\n    const intermediary = { id: `layer-${i}`, x: 0, y: 0 };\n\n    // Constrain each node in the layer to above the intermediary\n    for (const node of layerNodes) {\n      layerConstraints.push({\n        base: layerConstraint,\n        a: intermediary,\n        b: node,\n      });\n    }\n\n    // Constrain each node in the next layer to below the intermediary\n    for (const node of nextLayerNodes) {\n      layerConstraints.push({\n        base: layerConstraint,\n        a: node,\n        b: intermediary,\n      });\n    }\n  }\n\n  return layerConstraints;\n};\n\n/**\n * Creates crossing constraints for the given edges.\n * @param {Array} edges The input edges\n * @param {Object} constants The constraint constants\n * @param {Number} constants.spaceX The minimum gap between nodes in X\n * @returns {Array} The constraints\n */\nconst createCrossingConstraints = (edges, constants) => {\n  const { spaceX } = constants;\n  const crossingConstraints = [];\n\n  // For every pair of edges\n  for (let i = 0; i < edges.length; i += 1) {\n    const edgeA = edges[i];\n    const { sourceNode: sourceA, targetNode: targetA } = edgeA;\n\n    // Count the connected edges\n    const edgeADegree =\n      sourceA.sources.length +\n      sourceA.targets.length +\n      targetA.sources.length +\n      targetA.targets.length;\n\n    for (let j = i + 1; j < edges.length; j += 1) {\n      const edgeB = edges[j];\n      const { sourceNode: sourceB, targetNode: targetB } = edgeB;\n\n      // Skip if edges are not intersecting by row so can't cross\n      if (sourceA.row >= targetB.row || targetA.row <= sourceB.row) {\n        continue;\n      }\n\n      // Count the connected edges\n      const edgeBDegree =\n        sourceB.sources.length +\n        sourceB.targets.length +\n        targetB.sources.length +\n        targetB.targets.length;\n\n      crossingConstraints.push({\n        base: crossingConstraint,\n        edgeA: edgeA,\n        edgeB: edgeB,\n        // The required horizontal spacing between connected nodes\n        separationA: sourceA.width * 0.5 + spaceX + sourceB.width * 0.5,\n        separationB: targetA.width * 0.5 + spaceX + targetB.width * 0.5,\n        // Evenly distribute the constraint\n        strength: 1 / Math.max(1, (edgeADegree + edgeBDegree) / 4),\n      });\n    }\n  }\n\n  return crossingConstraints;\n};\n\n/**\n * Creates parallel constraints for the given edges.\n * Returns object with additional arrays that identify these special cases:\n * - edges connected to single-degree nodes at either end\n * - edges connected to single-degree nodes at both ends\n * @param {Array} edges The input edges\n * @returns {Object} An object containing the constraints\n */\nconst createParallelConstraints = (edges) =>\n  edges.map(({ sourceNode, targetNode }) => ({\n    base: parallelConstraint,\n    a: sourceNode,\n    b: targetNode,\n    // Evenly distribute the constraint\n    strength:\n      0.6 /\n      Math.max(1, sourceNode.targets.length + targetNode.sources.length - 2),\n  }));\n\n/**\n * Creates horizontal separation constraints for the given rows of nodes.\n * @param {Array} rows The rows containing nodes\n * @returns {Array} The constraints\n */\nconst createSeparationConstraints = (rows, constants) => {\n  const { spaceX } = constants;\n  const separationConstraints = [];\n\n  // For each row of nodes\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowNodes = rows[i];\n\n    // Stable sort row nodes horizontally, breaks ties with ids\n    rowNodes.sort((a, b) => compare(a.x, b.x, a.id, b.id));\n\n    // Update constraints given updated row node order\n    for (let j = 0; j < rowNodes.length - 1; j += 1) {\n      const nodeA = rowNodes[j];\n      const nodeB = rowNodes[j + 1];\n\n      // Count the connected edges\n      const degreeA = Math.max(\n        1,\n        nodeA.targets.length + nodeA.sources.length - 2\n      );\n      const degreeB = Math.max(\n        1,\n        nodeB.targets.length + nodeB.sources.length - 2\n      );\n\n      // Allow more spacing for nodes with more edges\n      const spread = Math.min(10, degreeA * degreeB * constants.spreadX);\n      const space = snap(spread * spaceX, spaceX);\n\n      separationConstraints.push({\n        base: separationConstraint,\n        a: nodeA,\n        b: nodeB,\n        separation: nodeA.width * 0.5 + space + nodeB.width * 0.5,\n      });\n    }\n  }\n\n  return separationConstraints;\n};\n\n/**\n * Adds additional spacing in Y relative to row density, see function `rowDensity` for definition.\n * Node positions are updated in-place\n * @param {Array} edges The input edges\n * @param {Array} rows The input rows of nodes\n * @param {Number} spaceY The spacing between nodes in Y\n * @param {Number} [scale=1.25] The amount of expansion to apply relative to row density\n * @param {Number} [unit=0.25] The unit size for rounding expansion relative to spaceY\n */\nconst expandDenseRows = (edges, rows, spaceY, scale = 1.25, unit = 0.25) => {\n  const densities = rowDensity(edges);\n  const spaceYUnit = Math.round(spaceY * unit);\n  let currentOffsetY = 0;\n\n  // Add spacing based relative to row density\n  for (let i = 0; i < rows.length - 1; i += 1) {\n    const density = densities[i] || 0;\n\n    // Round offset to a common unit amount to improve vertical rhythm\n    const offsetY = snap(density * scale * spaceY, spaceYUnit);\n    currentOffsetY += offsetY;\n\n    // Apply offset to all nodes following the current node\n    for (const node of rows[i + 1]) {\n      node.y += currentOffsetY;\n    }\n  }\n};\n\n/**\n * Estimates an average 'density' for each row based on average edge angle at that row.\n * Rows with edges close to horizontal are more 'dense' than rows with straight vertical edges.\n * Rows are determined by each edge's source and target node Y positions.\n * Intermediate row edges are assumed always vertical as a simplification, only the start end rows are measured.\n * Returns a list of values in `(0, 1)` where `0` means all edges on that row are vertical and `1` means all horizontal\n * @param {Array} edges The input edges\n * @returns {Array} The density of each row\n */\nconst rowDensity = (edges) => {\n  const rows = {};\n\n  for (const edge of edges) {\n    // Find the normalized angle of the edge source and target nodes, relative to the X axis\n    const edgeAngle =\n      Math.abs(angle(edge.targetNode, edge.sourceNode) - HALF_PI) / HALF_PI;\n\n    const sourceRow = edge.sourceNode.row;\n    const targetRow = edge.targetNode.row - 1;\n\n    // Add angle to the source row total\n    rows[sourceRow] = rows[sourceRow] || [0, 0];\n    rows[sourceRow][0] += edgeAngle;\n    rows[sourceRow][1] += 1;\n\n    if (targetRow !== sourceRow) {\n      // Add angle to the target row total\n      rows[targetRow] = rows[targetRow] || [0, 0];\n      rows[targetRow][0] += edgeAngle;\n      rows[targetRow][1] += 1;\n    }\n  }\n\n  // Find the average angle for each row\n  for (const row in rows) {\n    rows[row] = rows[row][0] / (rows[row][1] || 1);\n  }\n\n  return Object.values(rows);\n};\n","import {\n  compare,\n  distance1d,\n  angle,\n  nearestOnLine,\n  groupByRow,\n  nodeLeft,\n  nodeRight,\n  nodeTop,\n  nodeBottom,\n} from './common';\n\n/**\n * Finds positions for the given edges relative to their nodes.\n * Input nodes and edges are updated in-place.\n * Results are stored in the `points` property on edges.\n * @param {Object} params The layout parameters\n * @param {Array} params.nodes The input nodes\n * @param {Array} params.edges The input edges\n * @param {Number} params.spaceX The minimum gap between a node and passing edges in X\n * @param {Number} params.spaceY The minimum gap between a node and passing edges in Y\n * @param {Number} params.minPassageGap The minimum gap between two nodes in which an edge can pass in X\n * @param {Number} params.stemUnit The unit length for edge stems at anchors\n * @param {Number} params.stemMax The maximum length of edge stems at anchors\n * @param {Number} params.stemMinSource The minimum length for edge stems at source anchors\n * @param {Number} params.stemMinTarget The minimum length for edge stems at target anchors\n * @param {Number} params.stemSpaceSource The ideal spacing between edge stems at source anchors\n * @param {Number} params.stemSpaceTarget The ideal spacing between edge stems at target anchors\n * @returns {void}\n */\nexport const routing = ({\n  nodes,\n  edges,\n  spaceX,\n  spaceY,\n  minPassageGap,\n  stemUnit,\n  stemMinSource,\n  stemMinTarget,\n  stemMax,\n  stemSpaceSource,\n  stemSpaceTarget,\n}) => {\n  // Find the rows formed by nodes\n  const rows = groupByRow(nodes);\n\n  // For each node\n  for (const node of nodes) {\n    // Sort the node's target edges by the angle between source and target nodes\n    node.targets.sort((a, b) =>\n      compare(\n        angle(b.sourceNode, b.targetNode),\n        angle(a.sourceNode, a.targetNode)\n      )\n    );\n  }\n\n  // For each edge\n  for (const edge of edges) {\n    const source = edge.sourceNode;\n    const target = edge.targetNode;\n\n    // Initialise result container\n    edge.points = [];\n\n    // Find the ideal gap between edge source anchors\n    const sourceSeparation = Math.min(\n      (source.width - stemSpaceSource) / source.targets.length,\n      stemSpaceSource\n    );\n\n    const sourceEdgeDistance =\n      source.targets.indexOf(edge) - (source.targets.length - 1) * 0.5;\n\n    const sourceOffsetX = sourceSeparation * sourceEdgeDistance;\n\n    // Start at source node offset\n    const startPoint = { x: source.x + sourceOffsetX, y: source.y };\n    let currentPoint = startPoint;\n\n    // For each row between the source and target rows exclusive\n    for (let i = source.row + 1; i < target.row; i += 1) {\n      const firstNode = rows[i][0];\n\n      // Initialise search for next point\n      let nearestPoint = { x: nodeLeft(firstNode) - spaceX, y: firstNode.y };\n      let nearestDistance = Infinity;\n\n      // Extend the row 'to infinity' on each side in X\n      const rowExtended = [\n        { ...firstNode, x: Number.MIN_SAFE_INTEGER },\n        ...rows[i],\n        { ...firstNode, x: Number.MAX_SAFE_INTEGER },\n      ];\n\n      // For each gap between each nodes on the row\n      for (let i = 0; i < rowExtended.length - 1; i += 1) {\n        const node = rowExtended[i];\n        const nextNode = rowExtended[i + 1];\n        const nodeGap = nodeLeft(nextNode) - nodeRight(node);\n\n        // Avoid routing through small gaps, increase bundling\n        if (nodeGap < minPassageGap) {\n          continue;\n        }\n\n        const offsetX = Math.min(spaceX, nodeGap * 0.5);\n\n        // Find the next potential point. Include offset to reduce overlapping edges\n        const candidatePoint = nearestOnLine(\n          currentPoint.x,\n          currentPoint.y,\n          nodeRight(node) + offsetX,\n          nodeTop(node) - spaceY,\n          nodeLeft(nextNode) - offsetX,\n          nodeTop(nextNode) - spaceY\n        );\n\n        const distance = distance1d(currentPoint.x, candidatePoint.x);\n\n        // Early out if diverging\n        if (distance > nearestDistance) {\n          break;\n        }\n\n        // Keep the nearest point\n        if (distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestPoint = candidatePoint;\n        }\n      }\n\n      // Pass the node at nearest point\n      const offsetY = firstNode.height + spaceY;\n      edge.points.push({\n        x: nearestPoint.x + sourceOffsetX,\n        y: nearestPoint.y,\n      });\n      edge.points.push({\n        x: nearestPoint.x + sourceOffsetX,\n        y: nearestPoint.y + offsetY,\n      });\n\n      currentPoint = {\n        x: nearestPoint.x,\n        y: nearestPoint.y + offsetY,\n      };\n    }\n  }\n\n  // For each node\n  for (const node of nodes) {\n    // Sort the node's outgoing edges by the starting angle of the edge path\n    node.targets.sort((a, b) =>\n      compare(\n        angle(b.sourceNode, b.points[0] || b.targetNode),\n        angle(a.sourceNode, a.points[0] || a.targetNode)\n      )\n    );\n    // Sort the node's incoming edges by the ending angle of the edge path\n    node.sources.sort((a, b) =>\n      compare(\n        angle(a.points[a.points.length - 1] || a.sourceNode, a.targetNode),\n        angle(b.points[b.points.length - 1] || b.sourceNode, b.targetNode)\n      )\n    );\n  }\n\n  // For each edge\n  for (const edge of edges) {\n    const source = edge.sourceNode;\n    const target = edge.targetNode;\n\n    // Find the ideal gap between edge source and target anchors\n    const sourceSeparation = Math.min(\n      (source.width - stemSpaceSource) / source.targets.length,\n      stemSpaceSource\n    );\n\n    const targetSeparation = Math.min(\n      (target.width - stemSpaceTarget) / target.sources.length,\n      stemSpaceTarget\n    );\n\n    const sourceEdgeDistance =\n      source.targets.indexOf(edge) - (source.targets.length - 1) * 0.5;\n    const targetEdgeDistance =\n      target.sources.indexOf(edge) - (target.sources.length - 1) * 0.5;\n\n    const sourceOffsetX = sourceSeparation * sourceEdgeDistance;\n    const targetOffsetX = targetSeparation * targetEdgeDistance;\n\n    // Decrease stem length outwards from the middle stem\n    const sourceOffsetY =\n      stemUnit *\n      source.targets.length *\n      (1 - Math.abs(sourceEdgeDistance) / source.targets.length);\n\n    const targetOffsetY =\n      stemUnit *\n      target.sources.length *\n      (1 - Math.abs(targetEdgeDistance) / target.sources.length);\n\n    // Build the source stem for the edge\n    const sourceStem = [\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source),\n      },\n      {\n        x: source.x + sourceOffsetX,\n        y: nodeBottom(source) + stemMinSource,\n      },\n      {\n        x: source.x + sourceOffsetX,\n        y:\n          nodeBottom(source) + stemMinSource + Math.min(sourceOffsetY, stemMax),\n      },\n    ];\n\n    // Build the target stem for the edge\n    const targetStem = [\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target) - stemMinTarget - Math.min(targetOffsetY, stemMax),\n      },\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target) - stemMinTarget,\n      },\n      {\n        x: target.x + targetOffsetX,\n        y: nodeTop(target),\n      },\n    ];\n\n    // Combine all points\n    const points = [...sourceStem, ...edge.points, ...targetStem];\n\n    // Fix any invalid points caused by invalid layouts\n    let pointYMax = points[0].y;\n\n    for (const point of points) {\n      // Ensure increasing Y values for each point\n      if (point.y < pointYMax) {\n        point.y = pointYMax;\n      } else {\n        pointYMax = point.y;\n      }\n    }\n\n    // Assign finished points to edge\n    edge.points = points;\n  }\n};\n","/*\n * The Kedro-Viz Graph Layout Engine\n *\n * Refer to LAYOUT_ENGINE.md for description of the approach.\n */\n\nimport { offsetNode, offsetEdge } from './common';\nimport { layout } from './layout';\nimport { routing } from './routing';\n\nconst defaultOptions = {\n  layout: {\n    spaceX: 14,\n    spaceY: 110,\n    layerSpaceY: 55,\n    spreadX: 2.2,\n    padding: 100,\n    iterations: 25,\n  },\n  routing: {\n    spaceX: 26,\n    spaceY: 28,\n    minPassageGap: 40,\n    stemUnit: 8,\n    stemMinSource: 5,\n    stemMinTarget: 5,\n    stemMax: 20,\n    stemSpaceSource: 6,\n    stemSpaceTarget: 10,\n  },\n};\n\n/**\n * Generates a diagram of the given DAG.\n * Input nodes and edges are updated in-place.\n * Results are stored as `x, y` properties on nodes\n * and `points` properties on edges.\n * @param {Array} nodes The input nodes\n * @param {Array} edges The input edges\n * @param {Object=} layers The node layers if specified\n * @param {Object=} options The graph options\n * @returns {Object} The generated graph\n */\nexport const graph = (nodes, edges, layers, options = defaultOptions) => {\n  addEdgeLinks(nodes, edges);\n  addNearestLayers(nodes, layers);\n\n  layout({ nodes, edges, layers, ...options.layout });\n  routing({ nodes, edges, layers, ...options.routing });\n\n  const size = bounds(nodes, options.layout.padding);\n  nodes.forEach((node) => offsetNode(node, size.min));\n  edges.forEach((edge) => offsetEdge(edge, size.min));\n\n  return {\n    nodes,\n    edges,\n    layers,\n    size,\n  };\n};\n\n/**\n * Adds lists of source edges and target edges to each node in-place\n * @param {Array} nodes The input nodes\n * @param {Array} edges The input edges\n */\nexport const addEdgeLinks = (nodes, edges) => {\n  const nodeById = {};\n\n  for (const node of nodes) {\n    nodeById[node.id] = node;\n    node.targets = [];\n    node.sources = [];\n  }\n\n  for (const edge of edges) {\n    edge.sourceNode = nodeById[edge.source];\n    edge.targetNode = nodeById[edge.target];\n    edge.sourceNode.targets.push(edge);\n    edge.targetNode.sources.push(edge);\n  }\n};\n\n/**\n * Adds the nearest valid layer to each node whilst maintaining the correct layer order\n * @param {Array} nodes The input nodes\n * @param {?Array} layers The input layers\n */\nconst addNearestLayers = (nodes, layers) => {\n  if (layers && layers.length > 0) {\n    // Create the set of valid layers for lookup\n    const validLayers = {};\n    for (const layer of layers) {\n      validLayers[layer] = true;\n    }\n\n    const hasValidLayer = (node) => Boolean(node && node.layer in validLayers);\n    const lastLayer = layers[layers.length - 1];\n\n    // For each node\n    for (const node of nodes) {\n      // Find first descendant node that has a valid layer following rank order (including itself)\n      const layerNode = findNodeBy(\n        // Starting node\n        node,\n        // Next connected nodes to search\n        targetNodes,\n        // Lowest rank first\n        orderRankAscending,\n        // Acceptance criteria\n        hasValidLayer\n      );\n\n      // Assign the nearest layer if found otherwise must be the last layer\n      node.nearestLayer = layerNode ? layerNode.layer : lastLayer;\n    }\n  }\n};\n\n/**\n * Returns the list of target nodes directly connected to the given node\n * @param {Object} node The input node\n * @returns {Array} The target nodes\n */\nconst targetNodes = (node) => node.targets.map((edge) => edge.targetNode);\n\n/**\n * Comparator function for sorting nodes rank ascending\n * @param {Object} nodeA The first input node\n * @param {Object} nodeB The second input node\n * @returns {Number} The signed difference\n */\nconst orderRankAscending = (nodeA, nodeB) => nodeA.rank - nodeB.rank;\n\n/**\n * Starting at the given node and expanding successors, returns the first node accepted in order\n * @param {Object} node The starting node\n * @param {Function} successors A function returning the next nodes to expand\n * @param {Function} order A comparator function used for prioritising successors\n * @param {Function} accept A function that returns true if the current node fits the criteria\n * @param {Object=} visited An object keeping track of nodes already searched\n * @returns {?Object} The first node accepted in order, or undefined if none\n */\nconst findNodeBy = (node, successors, order, accept, visited) => {\n  // If the current node is accepted then return it without further search\n  if (accept(node)) {\n    return node;\n  }\n\n  // Keep track of visited nodes\n  visited = visited || {};\n  visited[node.id] = true;\n\n  const results = successors(node)\n    // Remove successors already visited\n    .filter((successor) => !visited[successor.id])\n    // Order unvisited successors\n    .sort(order)\n    // Search the unvisited successors recursively\n    .map((successor) =>\n      findNodeBy(successor, successors, order, accept, visited)\n    )\n    // Keep only the accepted resulting nodes if any\n    .filter(accept)\n    // Order resulting nodes\n    .sort(order);\n\n  // Return the first node accepted in order, or undefined if none\n  return results[0];\n};\n\n/**\n * Finds the region bounding the given nodes\n * @param {Array} nodes The input nodes\n * @param {Number} padding Additional padding around the bounds\n * @returns {Object} The bounds\n */\nconst bounds = (nodes, padding) => {\n  const size = {\n    min: { x: Infinity, y: Infinity },\n    max: { x: -Infinity, y: -Infinity },\n  };\n\n  for (const node of nodes) {\n    const x = node.x;\n    const y = node.y;\n\n    if (x < size.min.x) {\n      size.min.x = x;\n    }\n    if (x > size.max.x) {\n      size.max.x = x;\n    }\n    if (y < size.min.y) {\n      size.min.y = y;\n    }\n    if (y > size.max.y) {\n      size.max.y = y;\n    }\n  }\n\n  size.width = size.max.x - size.min.x + 2 * padding;\n  size.height = size.max.y - size.min.y + 2 * padding;\n  size.min.x -= padding;\n  size.min.y -= padding;\n\n  return size;\n};\n","import { graph } from './graph';\n\n/**\n * Calculate chart layout with experimental new graphing algorithm\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const graphNew = ({ nodes, edges, layers }) => {\n  const result = graph(nodes, edges, layers);\n  return {\n    ...result,\n    size: { ...result.size, marginx: 100, marginy: 100 },\n  };\n};\n"],"sourceRoot":""}